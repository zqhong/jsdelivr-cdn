{"version":3,"sources":["webpack:///./public/app/features/plugins/admin/api.ts","webpack:///./public/app/features/plugins/admin/components/PluginLogo.tsx","webpack:///./public/app/features/plugins/admin/components/InstallControls.tsx","webpack:///./public/app/features/plugins/admin/hooks/usePluginDetails.tsx","webpack:///./public/app/features/plugins/admin/components/Loader.tsx","webpack:///./public/app/features/plugins/admin/components/VersionList.tsx","webpack:///./public/app/features/plugins/admin/components/PluginDetailsBody.tsx","webpack:///./public/app/features/plugins/admin/pages/PluginDetails.tsx","webpack:///./public/app/features/plugins/admin/components/Page.tsx"],"names":["async","getRemotePlugin","slug","local","getBackendSrv","get","error","isHandled","getPluginVersions","id","items","getInstalledPlugins","embedded","api","getRemotePlugins","getPlugin","installed","localPlugin","find","plugin","remote","versions","Promise","all","remoteVersions","getOrg","avatarUrl","installPlugin","version","post","uninstallPlugin","PluginLogo","alt","className","src","height","loading","InstallControls","isInflight","hasUpdate","isInstalled","hasInstalledPanel","dispatch","isExternallyManaged","config","pluginAdminExternalManageEnabled","externalManageLink","getExternalManageLink","styles","useStyles2","getStyles","onUninstall","type","ActionTypes","INFLIGHT","appEvents","emit","AppEvents","alertSuccess","name","UNINSTALLED","ERROR","payload","onUpdate","UPDATED","grafanaDependency","unsupportedGrafanaVersion","satisfies","buildInfo","includePrerelease","isDevelopmentBuild","Boolean","isDev","isEnterprise","isCore","hasPermission","isGrafanaAdmin","licenseInfo","hasValidLicense","align","message","href","target","rel","size","fill","icon","disabled","onClick","variant","cx","messageMargin","INSTALLED","theme","css","colors","text","secondary","spacing","defaultTabs","label","initialState","undefined","pluginConfig","tabs","activeTab","reducer","state","action","LOADING","FETCHED_PLUGIN","FETCHED_PLUGIN_CONFIG","UPDATE_TABS","SET_ACTIVE_TAB","Loader","Page","VersionList","length","table","map","dateTimeFormatTimeAgo","createdAt","container","typography","h5","fontSize","PluginDetailsBody","tab","readme","dangerouslySetInnerHTML","__html","angularConfigCtrl","app","configPages","configPage","title","body","query","PluginDashboards","meta","PluginDetails","match","pluginId","params","useReducer","userCanConfigurePlugins","isOrgAdmin","useEffect","value","getCatalogPluginDetails","fetchPlugin","loadPlugin","fetchPluginConfig","PluginType","push","page","includes","include","PluginIncludeType","dashboard","usePluginDetails","breadcrumbHref","url","substring","lastIndexOf","headerContainer","info","logos","small","headerWrapper","breadcrumb","aria-label","aria-current","headerLinks","orgName","links","link","downloads","Intl","NumberFormat","format","description","idx","active","onChangeTab","severity","AppNotificationSeverity","Error","h2","h4","headerOrgName","children"],"mappings":"2TAyBAA,eAAeC,EAAgBC,EAAcC,GAC3C,IACE,aAAaC,0BAAgBC,IAAK,qBAA8BH,GAChE,MAAOI,GAGP,YADAA,EAAMC,YAAcJ,IAKxBH,eAAeQ,EAAkBC,GAC/B,IAEE,aADuBL,0BAAgBC,IAAK,qBAA8BI,eAC1DC,MAChB,MAAOJ,GACP,MAAO,IAIXN,eAAeW,IAEb,aADwBP,0BAAgBC,IAAK,eAAc,CAAEO,SAAU,I,kCAmBlE,MAAMC,EAAM,CACjBC,iBA7DFd,iBAEE,aADkBI,0BAAgBC,IAAK,sBAC5BK,OA4DXK,UAzDFf,eAAyBE,GACvB,MAAMc,QAAkBL,IAElBM,EAAcD,aAAH,EAAGA,EAAWE,KAAMC,GAC5BA,EAAOV,KAAOP,IAGhBkB,EAAQC,SAAkBC,QAAQC,IAAI,CAACtB,EAAgBC,EAAMe,GAAcT,EAAkBN,KAEpG,MAAO,CACLkB,OAAQA,EACRI,eAAgBH,EAChBlB,MAAOc,IA8CTN,sBACAc,OAnBFzB,eAAsBE,GAEpB,kBADkBE,0BAAgBC,IAAK,kBAA2BH,GAClE,CAAiBwB,UAAY,kBAA2BxB,cAkBxDyB,cAfF3B,eAA6BS,EAAYmB,GACvC,aAAaxB,0BAAgByB,KAAM,gBAAcpB,YAAc,CAC7DmB,aAcFE,gBAVF9B,eAA+BS,GAC7B,aAAaL,0BAAgByB,KAAM,gBAAcpB,kB,kCC7DnD,4DASO,SAASsB,GAAW,IAAEC,EAAF,UAAOC,EAAP,IAAkBC,EAAlB,OAAuBC,IAEhD,OAAO,qBAAKD,IAAKA,EAAKD,UAAWA,EAAWD,IAAKA,EAAKI,QAAQ,OAAOD,OAAQA,M,+LCWxE,MAAME,EAAkB,EAAGlB,SAAQmB,aAAYC,YAAWC,cAAaC,oBAAmBC,eAAsB,MACrH,MAAMC,EAAsBC,SAAOC,iCAC7BC,EAAqBC,EAAsB5B,GAE3C6B,EAASC,qBAAWC,GAE1B,IAAK/B,EACH,OAAO,KAGT,MAWMgC,EAAcnD,UAClB0C,EAAS,CAAEU,KAAMC,IAAYC,WAC7B,UACQzC,IAAIiB,gBAAgBX,EAAOV,IACjC8C,IAAUC,KAAKC,YAAUC,aAAc,CAAE,eAAcvC,EAAOwC,OAC9DjB,EAAS,CAAEU,KAAMC,IAAYO,cAC7B,MAAOtD,GACPoC,EAAS,CAAEU,KAAMC,IAAYQ,MAAOC,QAASxD,MAI3CyD,EAAW/D,UACf0C,EAAS,CAAEU,KAAMC,IAAYC,WAC7B,UACQzC,IAAIc,cAAcR,EAAOV,GAAIU,EAAOS,SAC1C2B,IAAUC,KAAKC,YAAUC,aAAc,CAAE,WAAUvC,EAAOwC,OAC1DjB,EAAS,CAAEU,KAAMC,IAAYW,UAC7B,MAAO1D,GACPoC,EAAS,CAAEU,KAAMC,IAAYQ,MAAOC,QAASxD,MAI3C2D,EAAoB9C,EAAO8C,kBAC3BC,IAA4BD,IAC7BE,oBAAUvB,SAAOwB,UAAUxC,QAASqC,EAAmB,CAEtDI,mBAAmB,IAInBC,EAAqBC,QAAQpD,EAAOqD,OACpCC,EAAetD,EAAOsD,aACtBC,EAASvD,EAAOuD,OAChBC,EAAgBC,cAEtB,GAAIF,EACF,OAAO,KAGT,GAAID,IAAgB,UAAC7B,SAAOiC,mBAAR,QAAC,EAAoBC,iBACvC,OACE,eAAC,kBAAD,CAAiB3C,OAAO,OAAO4C,MAAM,SAArC,UACE,sBAAM9C,UAAWe,EAAOgC,QAAxB,2DACA,cAAC,aAAD,CACEC,KAASlC,EAAsB5B,GAAxB,yCACP+D,OAAO,SACPC,IAAI,sBACJC,KAAK,KACLC,KAAK,OACLC,KAAK,oBANP,2BAcN,GAAIhB,EACF,OACE,qBAAKrC,UAAWe,EAAOgC,QAAvB,iFAIJ,IAAKL,IAAkBhC,EAAqB,CAC1C,MACMqC,EAAW,iCADIxC,EAAc,YAAcD,EAAY,SAAW,yBAExE,OAAO,qBAAKN,UAAWe,EAAOgC,QAAvB,SAAiCA,IAG1C,OAAIxC,EAEA,eAAC,kBAAD,CAAiBL,OAAO,OAAxB,UACGI,IACEI,EACC,cAAC,aAAD,CAAYsC,KAAMnC,EAAoBoC,OAAO,SAASC,IAAI,sBAA1D,SACG,2BAGH,cAAC,SAAD,CAAQI,SAAUjD,IAAeqC,EAAea,QAASzB,EAAzD,SACGzB,EAAa,WAAa,YAIhCK,EACC,cAAC,aAAD,CAAY8C,QAAQ,cAAcR,KAAMnC,EAAoBoC,OAAO,SAASC,IAAI,sBAAhF,SACG,8BAGH,qCACE,cAAC,SAAD,CAAQM,QAAQ,cAAcF,SAAUjD,IAAeqC,EAAea,QAASrC,EAA/E,SACGb,IAAeC,EAAY,eAAiB,cAE9CE,GACC,qBAAKR,UAAWyD,aAAG1C,EAAOgC,QAAShC,EAAO2C,eAA1C,gFAURzB,EAEA,sBAAKjC,UAAWe,EAAOgC,QAAvB,gBACE,cAAC,OAAD,CAAMrB,KAAK,0BADb,2DAQF,cAAC,kBAAD,CAAiBxB,OAAO,OAAxB,SACGQ,EACC,cAAC,aAAD,CAAYsC,KAAMnC,EAAoBoC,OAAO,SAASC,IAAI,sBAA1D,SACG,4BAGH,mCACE,cAAC,SAAD,CAAQI,SAAUjD,IAAeqC,EAAea,QAnItCxF,UAChB0C,EAAS,CAAEU,KAAMC,IAAYC,WAC7B,UACQzC,IAAIc,cAAcR,EAAOV,GAAIU,EAAOS,SAC1C2B,IAAUC,KAAKC,YAAUC,aAAc,CAAE,aAAYvC,EAAOwC,OAC5DjB,EAAS,CAAEU,KAAMC,IAAYuC,UAAW9B,QAAyB,UAAhB3C,EAAOiC,OACxD,MAAO9C,GACPoC,EAAS,CAAEU,KAAMC,IAAYQ,MAAOC,QAAS,CAAExD,aA4H3C,SACGgC,EAAa,aAAe,iBAQzC,SAASS,EAAsB5B,GAC7B,MAAQ,uCAAsCA,EAAOV,GAGhD,MAAMyC,EAAa2C,IACjB,CACLb,QAASc,KAAI;eACFD,EAAME,OAAOC,KAAKC;MAE7BN,cAAeG,KAAI;qBACFD,EAAMK;uOC/K3B,MAAMC,EAAc,CAAC,CAAEC,MAAO,YAAc,CAAEA,MAAO,oBAE/CC,EAAe,CACnB5D,mBAAmB,EACnBF,WAAW,EACXC,aAAa,EACbF,YAAY,EACZF,SAAS,EACT9B,WAAOgG,EACPnF,YAAQmF,EACRC,kBAAcD,EACdE,KAAML,EACNM,UAAW,GAGPC,EAAU,CAACC,EAA2BC,KAC1C,OAAQA,EAAOxD,MACb,KAAKC,IAAYwD,QACf,YAAYF,EAAZ,CAAmBvE,SAAS,IAE9B,KAAKiB,IAAYC,SACf,YAAYqD,EAAZ,CAAmBrE,YAAY,IAEjC,KAAKe,IAAYQ,MACf,YAAY8C,EAAZ,CAAmBvE,SAAS,EAAO9B,MAAOsG,EAAO9C,UAEnD,KAAKT,IAAYyD,eACf,YACKH,EADL,CAEEvE,SAAS,EACTjB,OAAQyF,EAAO9C,QACftB,YAAaoE,EAAO9C,QAAQtB,YAC5BD,UAAWqE,EAAO9C,QAAQvB,YAG9B,KAAKc,IAAY0D,sBACf,YACKJ,EADL,CAEEvE,SAAS,EACTmE,aAAcK,EAAO9C,UAGzB,KAAKT,IAAY2D,YACf,YACKL,EADL,CAEEH,KAAMI,EAAO9C,UAGjB,KAAKT,IAAYuC,UACf,YACKe,EADL,CAEErE,YAAY,EACZE,aAAa,EACbC,kBAAmBmE,EAAO9C,UAG9B,KAAKT,IAAYO,YACf,YACK+C,EADL,CAEErE,YAAY,EACZE,aAAa,IAGjB,KAAKa,IAAYW,QACf,YACK2C,EADL,CAEEpE,WAAW,EACXD,YAAY,IAGhB,KAAKe,IAAY4D,eACf,YACKN,EADL,CAEEF,UAAWG,EAAO9C,Y,kBC5EnB,MAAMoD,EAAS,IACpB,MACE,cAACC,EAAA,EAAD,UACE,qBAAKlF,UAAU,sBAAf,SACE,cAAC,qBAAD,CAAoB+D,KAAK,oB,gCCG1B,MAAMoB,EAAc,EAAG/F,eAC5B,MAAM2B,EAASC,qBAAWC,GAE1B,OAAwB,IAApB7B,EAASgG,OACX,MAAO,+DAIP,wBAAOpF,UAAWe,EAAOsE,MAAzB,gBACE,gCACE,+BACE,yCACA,oDAGJ,gCACGjG,EAASkG,IAAK3F,GAEX,+BACE,6BAAKA,EAAQA,UACb,6BAAK4F,gCAAsB5F,EAAQ6F,eAF5B7F,EAAQA,gBAWvBsB,EAAa2C,IAAD,CAChB6B,UAAW5B,KAAI;eACFD,EAAMK,QAAQ,EAAG,EAAG;IAEjCoB,MAAOxB,KAAI;;;;iBAIID,EAAMK;;;mBAGJL,EAAM8B,WAAWC,GAAGC;;kCClChC,SAASC,GAAkB,IAAEC,EAAF,OAAO5G,EAAP,eAAeK,EAAf,OAA+BwG,IAC/D,MAAMhF,EAASC,qBAAWC,GAE1B,GAAmB,cAAf6E,aAAA,EAAAA,EAAK3B,OACP,OACE,qBACEnE,UAAWyD,aAAG1C,EAAOgF,OAAQhF,EAAO0E,WACpCO,wBAAyB,CAAEC,OAAQF,UAAU,sDAKnD,GAAmB,qBAAfD,aAAA,EAAAA,EAAK3B,OACP,OACE,qBAAKnE,UAAWe,EAAO0E,UAAvB,SACE,cAACN,EAAD,CAAa/F,SAAUG,UAAkB,OAK/C,GAAmB,YAAfuG,aAAA,EAAAA,EAAK3B,QAAL,MAA2BjF,KAAQgH,kBACrC,OACE,qBAAKlG,UAAWe,EAAO0E,UAAvB,SACE,cAAC,IAAD,CAAsBU,IAAKjH,MAKjC,GAAIA,WAAQkH,YACV,IAAK,MAAMC,KAAcnH,EAAOkH,YAC9B,IAAIN,aAAA,EAAAA,EAAK3B,SAAUkC,EAAWC,MAC5B,OACE,qBAAKtG,UAAWe,EAAO0E,UAAvB,SACE,cAACY,EAAWE,KAAZ,CAAiBrH,OAAQA,EAAQsH,MAAO,OAOlD,MAAmB,gBAAfV,aAAA,EAAAA,EAAK3B,QAA0BjF,EAE/B,qBAAKc,UAAWe,EAAO0E,UAAvB,SACE,cAACgB,EAAA,EAAD,CAAkBvH,OAAQA,EAAOwH,SAKhC,KAGF,MAAMzF,EAAa2C,IAAD,CACvB6B,UAAW5B,KAAI;eACFD,EAAMK,QAAQ,EAAG;IAE9B8B,OAAQlC,KAAI;;;;;;;;oBAQMD,EAAMK,QAAQ;uBACXL,EAAMK,QAAQ;;;;;;;;qBAQhBL,EAAMK,QAAQ;;kBAEjBL,EAAMK;;;gBCzET,SAAS0C,GAAc,MAAEC,IAAiD,MACvF,MAAM,SAAEC,GAAaD,EAAME,QACrB,MAAEpC,EAAF,SAASjE,GJkEgBjC,KAC/B,MAAOkG,EAAOjE,GAAYsG,qBAAWtC,EAASL,GACxC4C,EAA0BC,cAiEhC,OA/DAC,oBAAU,KACYnJ,WAClB0C,EAAS,CAAEU,KAAMC,IAAYwD,UAC7B,IACE,MAAMuC,QAAcvI,IAAIE,UAAUN,GAC5BU,EAASkI,YAAwBD,aAAD,EAACA,EAAOjJ,MAAOiJ,aAAf,EAAeA,EAAOhI,OAAQgI,aAA9B,EAA8BA,EAAO5H,gBAC3EkB,EAAS,CAAEU,KAAMC,IAAYyD,eAAgBhD,QAAS3C,IACtD,MAAOb,GACPoC,EAAS,CAAEU,KAAMC,IAAYQ,MAAOC,QAASxD,MAGjDgJ,IACC,CAAC7I,IAEJ0I,oBAAU,KACkBnJ,WACxB,GAAI2G,EAAMnE,YAAa,CACrBE,EAAS,CAAEU,KAAMC,IAAYwD,UAC7B,IACE,MAAMN,QAAqBgD,qBAAW9I,GACtCiC,EAAS,CAAEU,KAAMC,IAAY0D,sBAAuBjD,QAASyC,IAC7D,MAAOjG,GACPoC,EAAS,CAAEU,KAAMC,IAAYQ,MAAOC,QAASxD,UAI/CoC,EAAS,CAAEU,KAAMC,IAAY0D,sBAAuBjD,aAASwC,IAC7D5D,EAAS,CAAEU,KAAMC,IAAY4D,eAAgBnD,QAAS,KAG1D0F,IACC,CAAC7C,EAAMnE,YAAa/B,IAEvB0I,oBAAU,KACR,MAAM5C,EAAeI,EAAMJ,aACrBC,EAAiC,IAAIL,GAE3C,GAAII,GAAgB0C,GACd1C,EAAaoC,KAAKvF,OAASqG,aAAWrB,IAAK,OAO7C,GANI7B,EAAa4B,mBACf3B,EAAKkD,KAAK,CACRtD,MAAO,WAIPG,EAAa8B,YACf,IAAK,MAAMsB,KAAQpD,EAAa8B,YAC9B7B,EAAKkD,KAAK,CACRtD,MAAOuD,EAAKpB,QAKlB,UAAIhC,EAAaoC,KAAKiB,gBAAtB,OAAI,EAA4B1I,KAAM2I,GAAYA,EAAQzG,OAAS0G,oBAAkBC,YACnFvD,EAAKkD,KAAK,CACRtD,MAAO,eAKf1D,EAAS,CAAEU,KAAMC,IAAY2D,YAAalD,QAAS0C,KAClD,CAACyC,EAAyBtC,EAAMJ,aAAc9F,IAE1C,CAAEkG,QAAOjE,aIrIYsH,CAAiBlB,IACvC,QACJ1G,EADI,MAEJ9B,EAFI,OAGJa,EAHI,aAIJoF,EAJI,KAKJC,EALI,UAMJC,EANI,WAOJnE,EAPI,UAQJC,EARI,YASJC,EATI,kBAUJC,GACEkE,EACEoB,EAAMvB,EAAKC,GACXzD,EAASC,qBAAWC,GACpB+G,EAAiBpB,EAAMqB,IAAIC,UAAU,EAAGtB,EAAMqB,IAAIE,YAAY,MAEpE,OAAIhI,EACF,MACE,cAAC,IAAD,UACE,cAAC8E,EAAD,OAKF/F,EAEA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,sBAAKc,UAAWe,EAAOqH,gBAAvB,UACE,cAACtI,EAAA,EAAD,CACEC,IAAQb,EAAOwC,KAAT,QACNzB,IAAKf,EAAOmJ,KAAKC,MAAMC,MACvBvI,UAAW6D,KAAI;;;;;kBAQjB,sBAAK7D,UAAWe,EAAOyH,cAAvB,UACE,qBAAKxI,UAAWe,EAAO0H,WAAYC,aAAW,aAA9C,SACE,+BACE,6BACE,mBACE1I,UAAW6D,KAAI;;wBAGfb,KAAMgF,EAJR,uBASF,6BACE,mBAAGhF,KAAO,GAAE4D,EAAMqB,IAAOU,eAAa,OAAtC,SACGzJ,EAAOwC,cAKhB,sBAAK1B,UAAWe,EAAO6H,YAAvB,UACE,+BAAO1J,EAAO2J,UACb3J,EAAO4J,MAAMxD,IAAKyD,GACjB,mBAAmB/F,KAAM+F,EAAKd,IAA9B,SACGc,EAAKrH,MADAqH,EAAKrH,OAIdxC,EAAO8J,UAAY,GAClB,uCACE,cAAC,OAAD,CAAMtH,KAAK,oBACT,KAAG,IAAIuH,KAAKC,cAAeC,OAAOjK,EAAO8J,WAAc,OAG5D9J,EAAOS,SAAW,+BAAOT,EAAOS,aAEnC,4BAAIT,EAAOkK,cAnCb,MAoCE,cAAChJ,EAAD,CACElB,OAAQA,EACRmB,WAAYA,EACZC,UAAWA,EACXC,YAAaA,EACbC,kBAAmBA,EACnBC,SAAUA,WAIhB,cAAC,UAAD,UACG8D,EAAKe,IAAI,CAACQ,EAAwBuD,IACjC,cAAC,MAAD,CAEElF,MAAO2B,EAAI3B,MACXmF,OAAQD,IAAQ7E,EAChB+E,YAAa,IAAM9I,EAAS,CAAEU,KAAMC,IAAY4D,eAAgBnD,QAASwH,KAHpEvD,EAAI3B,UAOf,eAAC,aAAD,WACG9F,GACC,cAAC,QAAD,CAAOmL,SAAUC,IAAwBC,MAAOpD,MAAM,uBAAtD,SACE,kGACsD,wBADtD,sEAMJ,cAACT,EAAD,CACEC,IAAKA,EACL5G,OAAQoF,EACR/E,eAAgBL,EAAOE,SACvB2G,OAAQ7G,EAAO6G,iBAQpB,K,kFAGF,MAAM9E,EAAa2C,IACjB,CACLwE,gBAAiBvE,KAAI;;uBAEFD,EAAMK,QAAQ;oBACjBL,EAAMK,QAAQ;;MAG9BuE,cAAe3E,KAAI;qBACFD,EAAMK,QAAQ;MAE/BwE,WAAY5E,KAAI;mBACDD,EAAM8B,WAAWiE,GAAG/D;;;;;;;;;;;;MAanCgD,YAAa/E,KAAI;;;oBAGDD,EAAMK;uBACHL,EAAMK,QAAQ;;;;;uBAKdL,EAAMK;;;;;;;mBAOVL,EAAM8B,WAAWkE,GAAGhE;MAEnCiE,cAAehG,KAAI;mBACJD,EAAM8B,WAAWkE,GAAGhE;2CCzLvC,oFAKO,MAAMV,EAAiB,EAAG4E,eAC/B,MAAM/I,EAASC,qBAAWC,GAC1B,OACE,qBAAKjB,UAAU,iBAAf,SACE,qBAAKA,UAAWe,EAAhB,SAAyB+I,OAKzB7I,EAAa2C,GACjBC,KAAI;qBACeD,EAAMK,QAAQ","file":"PluginPage.807b3f41627421e0a149.js","sourcesContent":["import { getBackendSrv } from '@grafana/runtime';\nimport { API_ROOT, GRAFANA_API_ROOT } from './constants';\nimport { PluginDetails, Org, LocalPlugin, RemotePlugin } from './types';\n\nasync function getRemotePlugins(): Promise<RemotePlugin[]> {\n  const res = await getBackendSrv().get(`${GRAFANA_API_ROOT}/plugins`);\n  return res.items;\n}\n\nasync function getPlugin(slug: string): Promise<PluginDetails> {\n  const installed = await getInstalledPlugins();\n\n  const localPlugin = installed?.find((plugin: LocalPlugin) => {\n    return plugin.id === slug;\n  });\n\n  const [remote, versions] = await Promise.all([getRemotePlugin(slug, localPlugin), getPluginVersions(slug)]);\n\n  return {\n    remote: remote,\n    remoteVersions: versions,\n    local: localPlugin,\n  };\n}\n\nasync function getRemotePlugin(slug: string, local: LocalPlugin | undefined): Promise<RemotePlugin | undefined> {\n  try {\n    return await getBackendSrv().get(`${GRAFANA_API_ROOT}/plugins/${slug}`);\n  } catch (error) {\n    // this might be a plugin that doesn't exist on gcom.\n    error.isHandled = !!local;\n    return;\n  }\n}\n\nasync function getPluginVersions(id: string): Promise<any[]> {\n  try {\n    const versions = await getBackendSrv().get(`${GRAFANA_API_ROOT}/plugins/${id}/versions`);\n    return versions.items;\n  } catch (error) {\n    return [];\n  }\n}\n\nasync function getInstalledPlugins(): Promise<LocalPlugin[]> {\n  const installed = await getBackendSrv().get(`${API_ROOT}`, { embedded: 0 });\n  return installed;\n}\n\nasync function getOrg(slug: string): Promise<Org> {\n  const org = await getBackendSrv().get(`${GRAFANA_API_ROOT}/orgs/${slug}`);\n  return { ...org, avatarUrl: `${GRAFANA_API_ROOT}/orgs/${slug}/avatar` };\n}\n\nasync function installPlugin(id: string, version: string) {\n  return await getBackendSrv().post(`${API_ROOT}/${id}/install`, {\n    version,\n  });\n}\n\nasync function uninstallPlugin(id: string) {\n  return await getBackendSrv().post(`${API_ROOT}/${id}/uninstall`);\n}\n\nexport const api = {\n  getRemotePlugins,\n  getPlugin,\n  getInstalledPlugins,\n  getOrg,\n  installPlugin,\n  uninstallPlugin,\n};\n","import React from 'react';\n\ntype PluginLogoProps = {\n  alt: string;\n  className?: string;\n  src: string;\n  height?: string | number;\n};\n\nexport function PluginLogo({ alt, className, src, height }: PluginLogoProps): React.ReactElement {\n  // @ts-ignore - react doesn't know about loading attr.\n  return <img src={src} className={className} alt={alt} loading=\"lazy\" height={height} />;\n}\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\nimport { satisfies } from 'semver';\n\nimport { config } from '@grafana/runtime';\nimport { Button, HorizontalGroup, Icon, LinkButton, useStyles2 } from '@grafana/ui';\nimport { AppEvents, GrafanaTheme2 } from '@grafana/data';\n\nimport appEvents from 'app/core/app_events';\nimport { CatalogPluginDetails, ActionTypes } from '../types';\nimport { api } from '../api';\nimport { isGrafanaAdmin } from '../helpers';\n\ninterface Props {\n  plugin: CatalogPluginDetails;\n  isInflight: boolean;\n  hasUpdate: boolean;\n  hasInstalledPanel: boolean;\n  isInstalled: boolean;\n  dispatch: React.Dispatch<any>;\n}\n\nexport const InstallControls = ({ plugin, isInflight, hasUpdate, isInstalled, hasInstalledPanel, dispatch }: Props) => {\n  const isExternallyManaged = config.pluginAdminExternalManageEnabled;\n  const externalManageLink = getExternalManageLink(plugin);\n\n  const styles = useStyles2(getStyles);\n\n  if (!plugin) {\n    return null;\n  }\n\n  const onInstall = async () => {\n    dispatch({ type: ActionTypes.INFLIGHT });\n    try {\n      await api.installPlugin(plugin.id, plugin.version);\n      appEvents.emit(AppEvents.alertSuccess, [`Installed ${plugin.name}`]);\n      dispatch({ type: ActionTypes.INSTALLED, payload: plugin.type === 'panel' });\n    } catch (error) {\n      dispatch({ type: ActionTypes.ERROR, payload: { error } });\n    }\n  };\n\n  const onUninstall = async () => {\n    dispatch({ type: ActionTypes.INFLIGHT });\n    try {\n      await api.uninstallPlugin(plugin.id);\n      appEvents.emit(AppEvents.alertSuccess, [`Uninstalled ${plugin.name}`]);\n      dispatch({ type: ActionTypes.UNINSTALLED });\n    } catch (error) {\n      dispatch({ type: ActionTypes.ERROR, payload: error });\n    }\n  };\n\n  const onUpdate = async () => {\n    dispatch({ type: ActionTypes.INFLIGHT });\n    try {\n      await api.installPlugin(plugin.id, plugin.version);\n      appEvents.emit(AppEvents.alertSuccess, [`Updated ${plugin.name}`]);\n      dispatch({ type: ActionTypes.UPDATED });\n    } catch (error) {\n      dispatch({ type: ActionTypes.ERROR, payload: error });\n    }\n  };\n\n  const grafanaDependency = plugin.grafanaDependency;\n  const unsupportedGrafanaVersion = grafanaDependency\n    ? !satisfies(config.buildInfo.version, grafanaDependency, {\n        // needed for when running against master\n        includePrerelease: true,\n      })\n    : false;\n\n  const isDevelopmentBuild = Boolean(plugin.isDev);\n  const isEnterprise = plugin.isEnterprise;\n  const isCore = plugin.isCore;\n  const hasPermission = isGrafanaAdmin();\n\n  if (isCore) {\n    return null;\n  }\n\n  if (isEnterprise && !config.licenseInfo?.hasValidLicense) {\n    return (\n      <HorizontalGroup height=\"auto\" align=\"center\">\n        <span className={styles.message}>No valid Grafana Enterprise license detected.</span>\n        <LinkButton\n          href={`${getExternalManageLink(plugin)}?utm_source=grafana_catalog_learn_more`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          size=\"sm\"\n          fill=\"text\"\n          icon=\"external-link-alt\"\n        >\n          Learn more\n        </LinkButton>\n      </HorizontalGroup>\n    );\n  }\n\n  if (isDevelopmentBuild) {\n    return (\n      <div className={styles.message}>This is a development build of the plugin and can&#39;t be uninstalled.</div>\n    );\n  }\n\n  if (!hasPermission && !isExternallyManaged) {\n    const pluginStatus = isInstalled ? 'uninstall' : hasUpdate ? 'update' : 'install';\n    const message = `You do not have permission to ${pluginStatus} this plugin.`;\n    return <div className={styles.message}>{message}</div>;\n  }\n\n  if (isInstalled) {\n    return (\n      <HorizontalGroup height=\"auto\">\n        {hasUpdate &&\n          (isExternallyManaged ? (\n            <LinkButton href={externalManageLink} target=\"_blank\" rel=\"noopener noreferrer\">\n              {'Update via grafana.com'}\n            </LinkButton>\n          ) : (\n            <Button disabled={isInflight || !hasPermission} onClick={onUpdate}>\n              {isInflight ? 'Updating' : 'Update'}\n            </Button>\n          ))}\n\n        {isExternallyManaged ? (\n          <LinkButton variant=\"destructive\" href={externalManageLink} target=\"_blank\" rel=\"noopener noreferrer\">\n            {'Uninstall via grafana.com'}\n          </LinkButton>\n        ) : (\n          <>\n            <Button variant=\"destructive\" disabled={isInflight || !hasPermission} onClick={onUninstall}>\n              {isInflight && !hasUpdate ? 'Uninstalling' : 'Uninstall'}\n            </Button>\n            {hasInstalledPanel && (\n              <div className={cx(styles.message, styles.messageMargin)}>\n                Please refresh your browser window before using this plugin.\n              </div>\n            )}\n          </>\n        )}\n      </HorizontalGroup>\n    );\n  }\n\n  if (unsupportedGrafanaVersion) {\n    return (\n      <div className={styles.message}>\n        <Icon name=\"exclamation-triangle\" />\n        &nbsp;This plugin doesn&#39;t support your version of Grafana.\n      </div>\n    );\n  }\n\n  return (\n    <HorizontalGroup height=\"auto\">\n      {isExternallyManaged ? (\n        <LinkButton href={externalManageLink} target=\"_blank\" rel=\"noopener noreferrer\">\n          {'Install via grafana.com'}\n        </LinkButton>\n      ) : (\n        <>\n          <Button disabled={isInflight || !hasPermission} onClick={onInstall}>\n            {isInflight ? 'Installing' : 'Install'}\n          </Button>\n        </>\n      )}\n    </HorizontalGroup>\n  );\n};\n\nfunction getExternalManageLink(plugin: CatalogPluginDetails): string {\n  return `https://grafana.com/grafana/plugins/${plugin.id}`;\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    message: css`\n      color: ${theme.colors.text.secondary};\n    `,\n    messageMargin: css`\n      margin-left: ${theme.spacing()};\n    `,\n  };\n};\n","import { useReducer, useEffect } from 'react';\nimport { PluginType, PluginIncludeType } from '@grafana/data';\nimport { api } from '../api';\nimport { loadPlugin } from '../../PluginPage';\nimport { getCatalogPluginDetails, isOrgAdmin } from '../helpers';\nimport { ActionTypes, PluginDetailsActions, PluginDetailsState } from '../types';\n\nconst defaultTabs = [{ label: 'Overview' }, { label: 'Version history' }];\n\nconst initialState = {\n  hasInstalledPanel: false,\n  hasUpdate: false,\n  isInstalled: false,\n  isInflight: false,\n  loading: false,\n  error: undefined,\n  plugin: undefined,\n  pluginConfig: undefined,\n  tabs: defaultTabs,\n  activeTab: 0,\n};\n\nconst reducer = (state: PluginDetailsState, action: PluginDetailsActions) => {\n  switch (action.type) {\n    case ActionTypes.LOADING: {\n      return { ...state, loading: true };\n    }\n    case ActionTypes.INFLIGHT: {\n      return { ...state, isInflight: true };\n    }\n    case ActionTypes.ERROR: {\n      return { ...state, loading: false, error: action.payload };\n    }\n    case ActionTypes.FETCHED_PLUGIN: {\n      return {\n        ...state,\n        loading: false,\n        plugin: action.payload,\n        isInstalled: action.payload.isInstalled,\n        hasUpdate: action.payload.hasUpdate,\n      };\n    }\n    case ActionTypes.FETCHED_PLUGIN_CONFIG: {\n      return {\n        ...state,\n        loading: false,\n        pluginConfig: action.payload,\n      };\n    }\n    case ActionTypes.UPDATE_TABS: {\n      return {\n        ...state,\n        tabs: action.payload,\n      };\n    }\n    case ActionTypes.INSTALLED: {\n      return {\n        ...state,\n        isInflight: false,\n        isInstalled: true,\n        hasInstalledPanel: action.payload,\n      };\n    }\n    case ActionTypes.UNINSTALLED: {\n      return {\n        ...state,\n        isInflight: false,\n        isInstalled: false,\n      };\n    }\n    case ActionTypes.UPDATED: {\n      return {\n        ...state,\n        hasUpdate: false,\n        isInflight: false,\n      };\n    }\n    case ActionTypes.SET_ACTIVE_TAB: {\n      return {\n        ...state,\n        activeTab: action.payload,\n      };\n    }\n  }\n};\n\nexport const usePluginDetails = (id: string) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const userCanConfigurePlugins = isOrgAdmin();\n\n  useEffect(() => {\n    const fetchPlugin = async () => {\n      dispatch({ type: ActionTypes.LOADING });\n      try {\n        const value = await api.getPlugin(id);\n        const plugin = getCatalogPluginDetails(value?.local, value?.remote, value?.remoteVersions);\n        dispatch({ type: ActionTypes.FETCHED_PLUGIN, payload: plugin });\n      } catch (error) {\n        dispatch({ type: ActionTypes.ERROR, payload: error });\n      }\n    };\n    fetchPlugin();\n  }, [id]);\n\n  useEffect(() => {\n    const fetchPluginConfig = async () => {\n      if (state.isInstalled) {\n        dispatch({ type: ActionTypes.LOADING });\n        try {\n          const pluginConfig = await loadPlugin(id);\n          dispatch({ type: ActionTypes.FETCHED_PLUGIN_CONFIG, payload: pluginConfig });\n        } catch (error) {\n          dispatch({ type: ActionTypes.ERROR, payload: error });\n        }\n      } else {\n        // reset tabs\n        dispatch({ type: ActionTypes.FETCHED_PLUGIN_CONFIG, payload: undefined });\n        dispatch({ type: ActionTypes.SET_ACTIVE_TAB, payload: 0 });\n      }\n    };\n    fetchPluginConfig();\n  }, [state.isInstalled, id]);\n\n  useEffect(() => {\n    const pluginConfig = state.pluginConfig;\n    const tabs: Array<{ label: string }> = [...defaultTabs];\n\n    if (pluginConfig && userCanConfigurePlugins) {\n      if (pluginConfig.meta.type === PluginType.app) {\n        if (pluginConfig.angularConfigCtrl) {\n          tabs.push({\n            label: 'Config',\n          });\n        }\n\n        if (pluginConfig.configPages) {\n          for (const page of pluginConfig.configPages) {\n            tabs.push({\n              label: page.title,\n            });\n          }\n        }\n\n        if (pluginConfig.meta.includes?.find((include) => include.type === PluginIncludeType.dashboard)) {\n          tabs.push({\n            label: 'Dashboards',\n          });\n        }\n      }\n    }\n    dispatch({ type: ActionTypes.UPDATE_TABS, payload: tabs });\n  }, [userCanConfigurePlugins, state.pluginConfig, id]);\n\n  return { state, dispatch };\n};\n","import React from 'react';\nimport { LoadingPlaceholder } from '@grafana/ui';\nimport { Page } from './Page';\n\nexport const Loader = () => {\n  return (\n    <Page>\n      <div className=\"page-loader-wrapper\">\n        <LoadingPlaceholder text=\"Loading...\" />\n      </div>\n    </Page>\n  );\n};\n","import React from 'react';\nimport { css } from '@emotion/css';\n\nimport { dateTimeFormatTimeAgo, GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\nimport { Version } from '../types';\n\ninterface Props {\n  versions: Version[];\n}\n\nexport const VersionList = ({ versions }: Props) => {\n  const styles = useStyles2(getStyles);\n\n  if (versions.length === 0) {\n    return <p>No version history was found.</p>;\n  }\n\n  return (\n    <table className={styles.table}>\n      <thead>\n        <tr>\n          <th>Version</th>\n          <th>Last updated</th>\n        </tr>\n      </thead>\n      <tbody>\n        {versions.map((version) => {\n          return (\n            <tr key={version.version}>\n              <td>{version.version}</td>\n              <td>{dateTimeFormatTimeAgo(version.createdAt)}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css`\n    padding: ${theme.spacing(2, 4, 3)};\n  `,\n  table: css`\n    width: 100%;\n    td,\n    th {\n      padding: ${theme.spacing()} 0;\n    }\n    th {\n      font-size: ${theme.typography.h5.fontSize};\n    }\n  `,\n});\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\n\nimport { AppPlugin, GrafanaTheme2, GrafanaPlugin, PluginMeta } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { VersionList } from '../components/VersionList';\nimport { AppConfigCtrlWrapper } from '../../wrappers/AppConfigWrapper';\nimport { PluginDashboards } from '../../PluginDashboards';\n\ntype PluginDetailsBodyProps = {\n  tab: { label: string };\n  plugin: GrafanaPlugin<PluginMeta<{}>> | undefined;\n  remoteVersions: Array<{ version: string; createdAt: string }>;\n  readme: string;\n};\n\nexport function PluginDetailsBody({ tab, plugin, remoteVersions, readme }: PluginDetailsBodyProps): JSX.Element | null {\n  const styles = useStyles2(getStyles);\n\n  if (tab?.label === 'Overview') {\n    return (\n      <div\n        className={cx(styles.readme, styles.container)}\n        dangerouslySetInnerHTML={{ __html: readme ?? 'No plugin help or readme markdown file was found' }}\n      />\n    );\n  }\n\n  if (tab?.label === 'Version history') {\n    return (\n      <div className={styles.container}>\n        <VersionList versions={remoteVersions ?? []} />\n      </div>\n    );\n  }\n\n  if (tab?.label === 'Config' && plugin?.angularConfigCtrl) {\n    return (\n      <div className={styles.container}>\n        <AppConfigCtrlWrapper app={plugin as AppPlugin} />\n      </div>\n    );\n  }\n\n  if (plugin?.configPages) {\n    for (const configPage of plugin.configPages) {\n      if (tab?.label === configPage.title) {\n        return (\n          <div className={styles.container}>\n            <configPage.body plugin={plugin} query={{}} />\n          </div>\n        );\n      }\n    }\n  }\n\n  if (tab?.label === 'Dashboards' && plugin) {\n    return (\n      <div className={styles.container}>\n        <PluginDashboards plugin={plugin.meta} />\n      </div>\n    );\n  }\n\n  return null;\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => ({\n  container: css`\n    padding: ${theme.spacing(3, 4)};\n  `,\n  readme: css`\n    & img {\n      max-width: 100%;\n    }\n\n    h1,\n    h2,\n    h3 {\n      margin-top: ${theme.spacing(3)};\n      margin-bottom: ${theme.spacing(2)};\n    }\n\n    *:first-child {\n      margin-top: 0;\n    }\n\n    li {\n      margin-left: ${theme.spacing(2)};\n      & > p {\n        margin: ${theme.spacing()} 0;\n      }\n    }\n  `,\n});\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2, TabsBar, TabContent, Tab, Icon, Alert } from '@grafana/ui';\n\nimport { AppNotificationSeverity } from 'app/types';\nimport { InstallControls } from '../components/InstallControls';\nimport { usePluginDetails } from '../hooks/usePluginDetails';\nimport { Page as PluginPage } from '../components/Page';\nimport { Loader } from '../components/Loader';\nimport { Page } from 'app/core/components/Page/Page';\nimport { PluginLogo } from '../components/PluginLogo';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { ActionTypes } from '../types';\nimport { PluginDetailsBody } from '../components/PluginDetailsBody';\n\ntype PluginDetailsProps = GrafanaRouteComponentProps<{ pluginId?: string }>;\n\nexport default function PluginDetails({ match }: PluginDetailsProps): JSX.Element | null {\n  const { pluginId } = match.params;\n  const { state, dispatch } = usePluginDetails(pluginId!);\n  const {\n    loading,\n    error,\n    plugin,\n    pluginConfig,\n    tabs,\n    activeTab,\n    isInflight,\n    hasUpdate,\n    isInstalled,\n    hasInstalledPanel,\n  } = state;\n  const tab = tabs[activeTab];\n  const styles = useStyles2(getStyles);\n  const breadcrumbHref = match.url.substring(0, match.url.lastIndexOf('/'));\n\n  if (loading) {\n    return (\n      <Page>\n        <Loader />\n      </Page>\n    );\n  }\n\n  if (plugin) {\n    return (\n      <Page>\n        <PluginPage>\n          <div className={styles.headerContainer}>\n            <PluginLogo\n              alt={`${plugin.name} logo`}\n              src={plugin.info.logos.small}\n              className={css`\n                object-fit: contain;\n                width: 100%;\n                height: 68px;\n                max-width: 68px;\n              `}\n            />\n\n            <div className={styles.headerWrapper}>\n              <nav className={styles.breadcrumb} aria-label=\"Breadcrumb\">\n                <ol>\n                  <li>\n                    <a\n                      className={css`\n                        text-decoration: underline;\n                      `}\n                      href={breadcrumbHref}\n                    >\n                      Plugins\n                    </a>\n                  </li>\n                  <li>\n                    <a href={`${match.url}`} aria-current=\"page\">\n                      {plugin.name}\n                    </a>\n                  </li>\n                </ol>\n              </nav>\n              <div className={styles.headerLinks}>\n                <span>{plugin.orgName}</span>\n                {plugin.links.map((link: any) => (\n                  <a key={link.name} href={link.url}>\n                    {link.name}\n                  </a>\n                ))}\n                {plugin.downloads > 0 && (\n                  <span>\n                    <Icon name=\"cloud-download\" />\n                    {` ${new Intl.NumberFormat().format(plugin.downloads)}`}{' '}\n                  </span>\n                )}\n                {plugin.version && <span>{plugin.version}</span>}\n              </div>\n              <p>{plugin.description}</p>\n              <InstallControls\n                plugin={plugin}\n                isInflight={isInflight}\n                hasUpdate={hasUpdate}\n                isInstalled={isInstalled}\n                hasInstalledPanel={hasInstalledPanel}\n                dispatch={dispatch}\n              />\n            </div>\n          </div>\n          <TabsBar>\n            {tabs.map((tab: { label: string }, idx: number) => (\n              <Tab\n                key={tab.label}\n                label={tab.label}\n                active={idx === activeTab}\n                onChangeTab={() => dispatch({ type: ActionTypes.SET_ACTIVE_TAB, payload: idx })}\n              />\n            ))}\n          </TabsBar>\n          <TabContent>\n            {error && (\n              <Alert severity={AppNotificationSeverity.Error} title=\"Error Loading Plugin\">\n                <>\n                  Check the server startup logs for more information. <br />\n                  If this plugin was loaded from git, make sure it was compiled.\n                </>\n              </Alert>\n            )}\n            <PluginDetailsBody\n              tab={tab}\n              plugin={pluginConfig}\n              remoteVersions={plugin.versions}\n              readme={plugin.readme}\n            />\n          </TabContent>\n        </PluginPage>\n      </Page>\n    );\n  }\n\n  return null;\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    headerContainer: css`\n      display: flex;\n      margin-bottom: ${theme.spacing(3)};\n      margin-top: ${theme.spacing(3)};\n      min-height: 120px;\n    `,\n    headerWrapper: css`\n      margin-left: ${theme.spacing(3)};\n    `,\n    breadcrumb: css`\n      font-size: ${theme.typography.h2.fontSize};\n      li {\n        display: inline;\n        list-style: none;\n        &::after {\n          content: '/';\n          padding: 0 0.25ch;\n        }\n        &:last-child::after {\n          content: '';\n        }\n      }\n    `,\n    headerLinks: css`\n      display: flex;\n      align-items: center;\n      margin-top: ${theme.spacing()};\n      margin-bottom: ${theme.spacing(3)};\n\n      & > * {\n        &::after {\n          content: '|';\n          padding: 0 ${theme.spacing()};\n        }\n        &:last-child::after {\n          content: '';\n          padding-right: 0;\n        }\n      }\n      font-size: ${theme.typography.h4.fontSize};\n    `,\n    headerOrgName: css`\n      font-size: ${theme.typography.h4.fontSize};\n    `,\n  };\n};\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { useStyles2 } from '@grafana/ui';\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport const Page: React.FC = ({ children }) => {\n  const styles = useStyles2(getStyles);\n  return (\n    <div className=\"page-container\">\n      <div className={styles}>{children}</div>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) =>\n  css`\n    margin-bottom: ${theme.spacing(3)};\n  `;\n"],"sourceRoot":""}