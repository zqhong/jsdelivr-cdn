{"version":3,"sources":["webpack:///./public/app/features/org/SelectOrgPage.tsx"],"names":["navModel","main","icon","subTitle","text","node","SelectOrgPage","orgs","setOrgs","useState","useAsync","async","getBackendSrv","get","getUserOrgs","Contents","wrap","map","org","onClick","post","orgId","then","window","location","href","config","appSubUrl","setUserOrg","name"],"mappings":"+NAOA,MAAMA,EAAW,CACfC,KAAM,CACJC,KAAM,UACNC,SAAU,cACVC,KAAM,8BAERC,KAAM,CACJD,KAAM,+BAeGE,EAAoB,KAC/B,MAAOC,EAAMC,GAAWC,qBAKxB,OAHAC,YAASC,UACPH,OAfgBG,gBACLC,0BAAgBC,IAAI,kBAcjBC,KACb,IAED,cAAC,IAAD,CAAMd,SAAUA,EAAhB,SACE,cAAC,IAAKe,SAAN,UACE,sCACE,wLAIA,cAAC,kBAAD,CAAiBC,MAAI,EAArB,SACGT,GACCA,EAAKU,IAAKC,GACR,cAAC,SAAD,CAAwBhB,KAAK,SAASiB,QAAS,IAzB5CR,gBACJC,0BACVQ,KAAK,mBAAqBF,EAAIG,OAC9BC,KAAK,KACJC,OAAOC,SAASC,KAAOC,SAAOC,UAAY,MAqBqBC,CAAWV,GAAhE,SACGA,EAAIW,MADMX,EAAIG,kBAWlBf","file":"SelectOrgPage.807b3f41627421e0a149.js","sourcesContent":["import React, { FC, useState } from 'react';\nimport Page from 'app/core/components/Page/Page';\nimport { getBackendSrv, config } from '@grafana/runtime';\nimport { UserOrg } from 'app/types';\nimport { useAsync } from 'react-use';\nimport { Button, HorizontalGroup } from '@grafana/ui';\n\nconst navModel = {\n  main: {\n    icon: 'grafana',\n    subTitle: 'Preferences',\n    text: 'Select active organization',\n  },\n  node: {\n    text: 'Select active organization',\n  },\n};\n\nconst getUserOrgs = async () => {\n  return await getBackendSrv().get('/api/user/orgs');\n};\nconst setUserOrg = async (org: UserOrg) => {\n  return await getBackendSrv()\n    .post('/api/user/using/' + org.orgId)\n    .then(() => {\n      window.location.href = config.appSubUrl + '/';\n    });\n};\n\nexport const SelectOrgPage: FC = () => {\n  const [orgs, setOrgs] = useState<UserOrg[]>();\n\n  useAsync(async () => {\n    setOrgs(await getUserOrgs());\n  }, []);\n  return (\n    <Page navModel={navModel}>\n      <Page.Contents>\n        <div>\n          <p>\n            You have been invited to another organization! Please select which organization that you want to use right\n            now. You can change this later at any time.\n          </p>\n          <HorizontalGroup wrap>\n            {orgs &&\n              orgs.map((org) => (\n                <Button key={org.orgId} icon=\"signin\" onClick={() => setUserOrg(org)}>\n                  {org.name}\n                </Button>\n              ))}\n          </HorizontalGroup>\n        </div>\n      </Page.Contents>\n    </Page>\n  );\n};\n\nexport default SelectOrgPage;\n"],"sourceRoot":""}