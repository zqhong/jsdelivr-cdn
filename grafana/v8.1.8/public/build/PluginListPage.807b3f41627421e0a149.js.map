{"version":3,"sources":["webpack:///./public/app/core/components/PageActionBar/PageActionBar.tsx","webpack:///./public/app/features/plugins/PluginListItem.tsx","webpack:///./public/app/features/plugins/PluginList.tsx","webpack:///./public/app/features/plugins/admin/api.ts","webpack:///./public/app/features/plugins/admin/components/PluginLogo.tsx","webpack:///./public/app/features/plugins/admin/components/PluginBadges.tsx","webpack:///./public/app/features/plugins/admin/components/PluginListCard.tsx","webpack:///./public/app/features/plugins/admin/components/PluginList.tsx","webpack:///./public/app/features/plugins/admin/components/SearchField.tsx","webpack:///./public/app/features/plugins/admin/components/HorizontalGroup.tsx","webpack:///./public/app/features/plugins/admin/hooks/usePlugins.tsx","webpack:///./public/app/features/plugins/admin/pages/Browse.tsx","webpack:///./public/app/features/plugins/admin/hooks/useHistory.tsx","webpack:///./public/app/features/plugins/PluginListPage.tsx","webpack:///./public/app/features/plugins/PluginsErrorsInfo.tsx","webpack:///./public/app/features/plugins/admin/components/Page.tsx","webpack:///./public/app/features/plugins/state/selectors.ts"],"names":["PageActionBar","PureComponent","render","searchQuery","linkButton","setSearchQuery","target","placeholder","this","props","linkProps","href","className","value","onChange","title","PluginListItem","plugin","aria-label","selectors","pages","PluginsList","listItem","id","type","status","signature","hasUpdate","bs-tooltip","src","info","logos","small","name","author","PluginList","plugins","list","map","index","async","getRemotePlugin","slug","local","getBackendSrv","get","error","isHandled","getPluginVersions","items","getInstalledPlugins","embedded","api","getRemotePlugins","getPlugin","installed","localPlugin","find","remote","versions","Promise","all","remoteVersions","getOrg","avatarUrl","installPlugin","version","post","uninstallPlugin","PluginLogo","alt","height","loading","PluginBadges","isEnterprise","EnterpriseBadge","isInstalled","InstalledBadge","customBadgeStyles","useStyles2","getBadgeColor","config","licenseInfo","hasValidLicense","text","color","icon","size","fill","onClick","ev","preventDefault","window","open","theme","css","colors","background","primary","border","strong","secondary","IconName","PluginListCard","pathName","orgName","styles","getStyles","cardContainer","spacing","headerWrap","image","typography","h4","fontSize","location","useLocation","data-testid","pathname","SearchField","onSearch","query","setQuery","useState","callBack","delay","deps","isFirstRender","useRef","debounceDeps","useDebounce","current","useDebounceWithoutFirstRender","FilterInput","onKeyDown","e","key","keyCode","currentTarget","width","HorizontalGroup","children","wrap","useTheme2","cx","container","URLFilterHandlers","filterBy","filterByType","isType","searchBy","matchesKeyword","usePluginsByFilter","queries","useAsync","useMemo","unique","mapLocalToCatalog","typeCode","Boolean","versionSignatureType","mapToCatalogPlugin","installedPlugin","mapRemoteToCatalog","Object","values","usePlugins","isLoading","filter","keys","every","Browse","route","locationSearchToObject","search","navModelId","getNavModelId","routeName","navModel","useSelector","state","getNavModel","navIndex","q","sortBy","sortedPlugins","sort","sorters","history","push","getLocationSrv","update","partial","replace","console","message","Contents","actionBar","options","label","menuShouldPortal","listWrap","breakpoints","up","PluginAdminRoutes","HomeAdmin","BrowseAdmin","nameAsc","a","b","localeCompare","nameDesc","updated","dateTimeParse","updatedAt","valueOf","published","publishedAt","downloads","mapStateToProps","getPlugins","getPluginsSearchQuery","hasFetched","mapDispatchToProps","loadPlugins","setPluginsSearchQuery","PluginListPage","connect","page","hot","module","errors","getAllPluginsErrors","loadPluginsErrors","PluginsErrorsInfo","useTheme","length","signatureErrorNotice","severity","urlTitle","url","renderItem","sm","justify","align","pluginId","mapPluginErrorCodeToSignatureStatus","errorCode","code","PluginErrorCode","invalidSignature","PluginSignatureStatus","invalid","missingSignature","missing","modifiedSignature","modified","Page","regex","RegExp","item","test","description"],"mappings":"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","file":"PluginListPage.807b3f41627421e0a149.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { FilterInput } from '../FilterInput/FilterInput';\nimport { LinkButton } from '@grafana/ui';\n\nexport interface Props {\n  searchQuery: string;\n  setSearchQuery: (value: string) => void;\n  linkButton?: { href: string; title: string };\n  target?: string;\n  placeholder?: string;\n}\n\nexport default class PageActionBar extends PureComponent<Props> {\n  render() {\n    const { searchQuery, linkButton, setSearchQuery, target, placeholder = 'Search by name or type' } = this.props;\n    const linkProps = { href: linkButton?.href };\n\n    if (target) {\n      (linkProps as any).target = target;\n    }\n\n    return (\n      <div className=\"page-action-bar\">\n        <div className=\"gf-form gf-form--grow\">\n          <FilterInput value={searchQuery} onChange={setSearchQuery} placeholder={placeholder} />\n        </div>\n        {linkButton && <LinkButton {...linkProps}>{linkButton.title}</LinkButton>}\n      </div>\n    );\n  }\n}\n","import React, { FC } from 'react';\nimport { PluginMeta } from '@grafana/data';\nimport { PluginSignatureBadge } from '@grafana/ui';\nimport { selectors } from '@grafana/e2e-selectors';\n\ninterface Props {\n  plugin: PluginMeta;\n}\n\nconst PluginListItem: FC<Props> = (props) => {\n  const { plugin } = props;\n\n  return (\n    <li className=\"card-item-wrapper\" aria-label={selectors.pages.PluginsList.listItem}>\n      <a className=\"card-item\" href={`plugins/${plugin.id}/`}>\n        <div className=\"card-item-header\">\n          <div className=\"card-item-type\">{plugin.type}</div>\n          <div className=\"card-item-badge\">\n            <PluginSignatureBadge status={plugin.signature} />\n          </div>\n          {plugin.hasUpdate && (\n            <div className=\"card-item-notice\">\n              <span bs-tooltip=\"plugin.latestVersion\">Update available!</span>\n            </div>\n          )}\n        </div>\n        <div className=\"card-item-body\">\n          <figure className=\"card-item-figure\">\n            <img src={plugin.info.logos.small} />\n          </figure>\n          <div className=\"card-item-details\">\n            <div className=\"card-item-name\">{plugin.name}</div>\n            <div className=\"card-item-sub-name\">{`By ${plugin.info.author.name}`}</div>\n          </div>\n        </div>\n      </a>\n    </li>\n  );\n};\n\nexport default PluginListItem;\n","import React, { FC } from 'react';\nimport PluginListItem from './PluginListItem';\nimport { PluginMeta } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\ninterface Props {\n  plugins: PluginMeta[];\n}\n\nconst PluginList: FC<Props> = (props) => {\n  const { plugins } = props;\n\n  return (\n    <section className=\"card-section card-list-layout-list\">\n      <ol className=\"card-list\" aria-label={selectors.pages.PluginsList.list}>\n        {plugins.map((plugin, index) => {\n          return <PluginListItem plugin={plugin} key={`${plugin.name}-${index}`} />;\n        })}\n      </ol>\n    </section>\n  );\n};\n\nexport default PluginList;\n","import { getBackendSrv } from '@grafana/runtime';\nimport { API_ROOT, GRAFANA_API_ROOT } from './constants';\nimport { PluginDetails, Org, LocalPlugin, RemotePlugin } from './types';\n\nasync function getRemotePlugins(): Promise<RemotePlugin[]> {\n  const res = await getBackendSrv().get(`${GRAFANA_API_ROOT}/plugins`);\n  return res.items;\n}\n\nasync function getPlugin(slug: string): Promise<PluginDetails> {\n  const installed = await getInstalledPlugins();\n\n  const localPlugin = installed?.find((plugin: LocalPlugin) => {\n    return plugin.id === slug;\n  });\n\n  const [remote, versions] = await Promise.all([getRemotePlugin(slug, localPlugin), getPluginVersions(slug)]);\n\n  return {\n    remote: remote,\n    remoteVersions: versions,\n    local: localPlugin,\n  };\n}\n\nasync function getRemotePlugin(slug: string, local: LocalPlugin | undefined): Promise<RemotePlugin | undefined> {\n  try {\n    return await getBackendSrv().get(`${GRAFANA_API_ROOT}/plugins/${slug}`);\n  } catch (error) {\n    // this might be a plugin that doesn't exist on gcom.\n    error.isHandled = !!local;\n    return;\n  }\n}\n\nasync function getPluginVersions(id: string): Promise<any[]> {\n  try {\n    const versions = await getBackendSrv().get(`${GRAFANA_API_ROOT}/plugins/${id}/versions`);\n    return versions.items;\n  } catch (error) {\n    return [];\n  }\n}\n\nasync function getInstalledPlugins(): Promise<LocalPlugin[]> {\n  const installed = await getBackendSrv().get(`${API_ROOT}`, { embedded: 0 });\n  return installed;\n}\n\nasync function getOrg(slug: string): Promise<Org> {\n  const org = await getBackendSrv().get(`${GRAFANA_API_ROOT}/orgs/${slug}`);\n  return { ...org, avatarUrl: `${GRAFANA_API_ROOT}/orgs/${slug}/avatar` };\n}\n\nasync function installPlugin(id: string, version: string) {\n  return await getBackendSrv().post(`${API_ROOT}/${id}/install`, {\n    version,\n  });\n}\n\nasync function uninstallPlugin(id: string) {\n  return await getBackendSrv().post(`${API_ROOT}/${id}/uninstall`);\n}\n\nexport const api = {\n  getRemotePlugins,\n  getPlugin,\n  getInstalledPlugins,\n  getOrg,\n  installPlugin,\n  uninstallPlugin,\n};\n","import React from 'react';\n\ntype PluginLogoProps = {\n  alt: string;\n  className?: string;\n  src: string;\n  height?: string | number;\n};\n\nexport function PluginLogo({ alt, className, src, height }: PluginLogoProps): React.ReactElement {\n  // @ts-ignore - react doesn't know about loading attr.\n  return <img src={src} className={className} alt={alt} loading=\"lazy\" height={height} />;\n}\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { Badge, Button, HorizontalGroup, PluginSignatureBadge, useStyles2 } from '@grafana/ui';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { CatalogPlugin } from '../types';\n\ntype PluginBadgeType = {\n  plugin: CatalogPlugin;\n};\n\nexport function PluginBadges({ plugin }: PluginBadgeType) {\n  if (plugin.isEnterprise) {\n    return <EnterpriseBadge id={plugin.id} />;\n  }\n  return (\n    <HorizontalGroup>\n      <PluginSignatureBadge status={plugin.signature} />\n      {plugin.isInstalled && <InstalledBadge />}\n    </HorizontalGroup>\n  );\n}\n\nfunction EnterpriseBadge({ id }: { id: string }) {\n  const customBadgeStyles = useStyles2(getBadgeColor);\n  const onClick = (ev: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    ev.preventDefault();\n    window.open(\n      `https://grafana.com/grafana/plugins/${id}?utm_source=grafana_catalog_learn_more`,\n      '_blank',\n      'noopener,noreferrer'\n    );\n  };\n\n  if (config.licenseInfo?.hasValidLicense) {\n    return <Badge text=\"Enterprise\" color=\"blue\" />;\n  }\n\n  return (\n    <HorizontalGroup>\n      <Badge icon=\"lock\" aria-label=\"lock icon\" text=\"Enterprise\" color=\"blue\" className={customBadgeStyles} />\n      <Button size=\"sm\" fill=\"text\" icon=\"external-link-alt\" onClick={onClick}>\n        Learn more\n      </Button>\n    </HorizontalGroup>\n  );\n}\n\nfunction InstalledBadge() {\n  const customBadgeStyles = useStyles2(getBadgeColor);\n  return <Badge text=\"Installed\" color=\"orange\" className={customBadgeStyles} />;\n}\n\nconst getBadgeColor = (theme: GrafanaTheme2) => css`\n  background: ${theme.colors.background.primary};\n  border-color: ${theme.colors.border.strong};\n  color: ${theme.colors.text.secondary};\n`;\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { Icon, useStyles2, CardContainer, VerticalGroup } from '@grafana/ui';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { CatalogPlugin } from '../types';\nimport { PluginLogo } from './PluginLogo';\nimport { PluginBadges } from './PluginBadges';\n\nconst LOGO_SIZE = '48px';\n\nenum IconName {\n  app = 'apps',\n  datasource = 'database',\n  panel = 'credit-card',\n  renderer = 'pen',\n}\n\ntype PluginListCardProps = {\n  plugin: CatalogPlugin;\n  pathName: string;\n};\n\nexport function PluginListCard({ plugin, pathName }: PluginListCardProps) {\n  const { name, id, orgName, type } = plugin;\n  const styles = useStyles2(getStyles);\n\n  return (\n    <CardContainer href={`${pathName}/${id}`} className={styles.cardContainer}>\n      <VerticalGroup spacing=\"md\">\n        <div className={styles.headerWrap}>\n          <PluginLogo\n            src={plugin.info.logos.small}\n            alt={`${plugin.name} logo`}\n            className={styles.image}\n            height={LOGO_SIZE}\n          />\n          <h3 className={styles.name}>{name}</h3>\n          {type && (\n            <div className={styles.icon}>\n              <Icon name={IconName[type]} aria-label={`${type} plugin icon`} />\n            </div>\n          )}\n        </div>\n        <p className={styles.orgName}>By {orgName}</p>\n        <PluginBadges plugin={plugin} />\n      </VerticalGroup>\n    </CardContainer>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  cardContainer: css`\n    margin-bottom: 0;\n    padding: ${theme.spacing()};\n  `,\n  headerWrap: css`\n    align-items: center;\n    display: grid;\n    grid-template-columns: ${LOGO_SIZE} 1fr ${theme.spacing(3)};\n    grid-gap: ${theme.spacing(2)};\n    width: 100%;\n  `,\n  name: css`\n    color: ${theme.colors.text.primary};\n    flex-grow: 1;\n    font-size: ${theme.typography.h4.fontSize};\n    margin-bottom: 0;\n  `,\n  image: css`\n    object-fit: contain;\n    max-width: 100%;\n  `,\n  icon: css`\n    align-self: flex-start;\n    color: ${theme.colors.text.secondary};\n  `,\n  orgName: css`\n    color: ${theme.colors.text.secondary};\n    margin-bottom: 0;\n  `,\n});\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { useStyles2 } from '@grafana/ui';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { CatalogPlugin } from '../types';\nimport { PluginListCard } from './PluginListCard';\nimport { useLocation } from 'react-router-dom';\n\ninterface Props {\n  plugins: CatalogPlugin[];\n}\n\nexport const PluginList = ({ plugins }: Props) => {\n  const styles = useStyles2(getStyles);\n  const location = useLocation();\n\n  return (\n    <div className={styles} data-testid=\"plugin-list\">\n      {plugins.map((plugin) => (\n        <PluginListCard key={plugin.id} plugin={plugin} pathName={location.pathname} />\n      ))}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => css`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(288px, 1fr));\n  grid-gap: ${theme.spacing(3)};\n`;\n","import React, { useState, useRef } from 'react';\nimport { useDebounce } from 'react-use';\nimport { FilterInput } from 'app/core/components/FilterInput/FilterInput';\n\ninterface Props {\n  value?: string;\n  onSearch: (value: string) => void;\n}\n\n// useDebounce has a bug which causes it to fire on first render. This wrapper prevents that.\n// https://github.com/streamich/react-use/issues/759\nconst useDebounceWithoutFirstRender = (callBack: () => any, delay = 0, deps: React.DependencyList = []) => {\n  const isFirstRender = useRef(true);\n  const debounceDeps = [...deps, isFirstRender];\n\n  return useDebounce(\n    () => {\n      if (isFirstRender.current) {\n        isFirstRender.current = false;\n        return;\n      }\n      return callBack();\n    },\n    delay,\n    debounceDeps\n  );\n};\n\nexport const SearchField = ({ value, onSearch }: Props) => {\n  const [query, setQuery] = useState(value);\n\n  useDebounceWithoutFirstRender(() => onSearch(query ?? ''), 500, [query]);\n\n  return (\n    <FilterInput\n      value={query}\n      onKeyDown={(e) => {\n        if (e.key === 'Enter' || e.keyCode === 13) {\n          onSearch(e.currentTarget.value);\n        }\n      }}\n      placeholder=\"Search Grafana plugins\"\n      onChange={(value) => {\n        setQuery(value);\n      }}\n      width={46}\n    />\n  );\n};\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\n\nimport { useTheme2 } from '@grafana/ui';\nimport { GrafanaTheme2 } from '@grafana/data';\n\ninterface HorizontalGroupProps {\n  children: React.ReactNode;\n  wrap?: boolean;\n  className?: string;\n}\n\nexport const HorizontalGroup = ({ children, wrap, className }: HorizontalGroupProps) => {\n  const theme = useTheme2();\n  const styles = getStyles(theme, wrap);\n\n  return <div className={cx(styles.container, className)}>{children}</div>;\n};\n\nconst getStyles = (theme: GrafanaTheme2, wrap?: boolean) => ({\n  container: css`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: ${wrap ? 'wrap' : 'no-wrap'};\n    & > * {\n      margin-bottom: ${theme.spacing()};\n      margin-right: ${theme.spacing()};\n    }\n    & > *:last-child {\n      margin-right: 0;\n    }\n  `,\n});\n","import { useMemo } from 'react';\nimport { useAsync } from 'react-use';\nimport { CatalogPlugin, CatalogPluginsState, PluginsByFilterType, FilteredPluginsState } from '../types';\nimport { api } from '../api';\nimport {\n  mapLocalToCatalog,\n  mapRemoteToCatalog,\n  mapToCatalogPlugin,\n  isInstalled,\n  isType,\n  matchesKeyword,\n} from '../helpers';\n\nexport function usePlugins(): CatalogPluginsState {\n  const { loading, value, error } = useAsync(async () => {\n    const remote = await api.getRemotePlugins();\n    const installed = await api.getInstalledPlugins();\n    return { remote, installed };\n  }, []);\n\n  const plugins = useMemo(() => {\n    const installed = value?.installed || [];\n    const remote = value?.remote || [];\n    const unique: Record<string, CatalogPlugin> = {};\n\n    for (const plugin of installed) {\n      unique[plugin.id] = mapLocalToCatalog(plugin);\n    }\n\n    for (const plugin of remote) {\n      if (plugin.typeCode === 'renderer') {\n        continue;\n      }\n\n      if (!Boolean(plugin.versionSignatureType)) {\n        continue;\n      }\n\n      if (unique[plugin.slug]) {\n        unique[plugin.slug] = mapToCatalogPlugin(\n          installed.find((installedPlugin) => installedPlugin.id === plugin.slug),\n          plugin\n        );\n      } else {\n        unique[plugin.slug] = mapRemoteToCatalog(plugin);\n      }\n    }\n    return Object.values(unique);\n  }, [value?.installed, value?.remote]);\n\n  return {\n    loading,\n    error,\n    plugins,\n  };\n}\n\nconst URLFilterHandlers = {\n  filterBy: isInstalled,\n  filterByType: isType,\n  searchBy: matchesKeyword,\n};\n\nexport const usePluginsByFilter = (queries: PluginsByFilterType): FilteredPluginsState => {\n  const { loading, error, plugins } = usePlugins();\n\n  const filteredPlugins = plugins.filter((plugin) =>\n    Object.keys(queries).every((query: keyof PluginsByFilterType) =>\n      typeof URLFilterHandlers[query] === 'function' ? URLFilterHandlers[query](plugin, queries[query]) : true\n    )\n  );\n\n  return {\n    isLoading: loading,\n    error,\n    plugins: filteredPlugins,\n  };\n};\n","import React, { ReactElement } from 'react';\nimport { css } from '@emotion/css';\nimport { SelectableValue, dateTimeParse, GrafanaTheme2 } from '@grafana/data';\nimport { LoadingPlaceholder, Select, RadioButtonGroup, useStyles2 } from '@grafana/ui';\nimport { useLocation } from 'react-router-dom';\nimport { locationSearchToObject } from '@grafana/runtime';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { PluginList } from '../components/PluginList';\nimport { SearchField } from '../components/SearchField';\nimport { useHistory } from '../hooks/useHistory';\nimport { CatalogPlugin, PluginAdminRoutes } from '../types';\nimport { Page as PluginPage } from '../components/Page';\nimport { HorizontalGroup } from '../components/HorizontalGroup';\nimport { Page } from 'app/core/components/Page/Page';\nimport { usePluginsByFilter } from '../hooks/usePlugins';\nimport { useSelector } from 'react-redux';\nimport { StoreState } from 'app/types/store';\nimport { getNavModel } from 'app/core/selectors/navModel';\n\nexport default function Browse({ route }: GrafanaRouteComponentProps): ReactElement | null {\n  const location = useLocation();\n  const query = locationSearchToObject(location.search);\n  const navModelId = getNavModelId(route.routeName);\n  const navModel = useSelector((state: StoreState) => getNavModel(state.navIndex, navModelId));\n  const styles = useStyles2(getStyles);\n\n  const q = (query.q as string) ?? '';\n  const filterBy = (query.filterBy as string) ?? 'installed';\n  const filterByType = (query.filterByType as string) ?? 'all';\n  const sortBy = (query.sortBy as string) ?? 'nameAsc';\n\n  const { plugins, isLoading, error } = usePluginsByFilter({ searchBy: q, filterBy, filterByType });\n  const sortedPlugins = plugins.sort(sorters[sortBy]);\n  const history = useHistory();\n\n  const onSortByChange = (value: SelectableValue<string>) => {\n    history.push({ query: { sortBy: value.value } });\n  };\n\n  const onFilterByChange = (value: string) => {\n    history.push({ query: { filterBy: value } });\n  };\n\n  const onFilterByTypeChange = (value: string) => {\n    history.push({ query: { filterByType: value } });\n  };\n\n  const onSearch = (q: any) => {\n    history.push({ query: { filterBy: 'all', filterByType: 'all', q } });\n  };\n\n  // How should we handle errors?\n  if (error) {\n    console.error(error.message);\n    return null;\n  }\n\n  return (\n    <Page navModel={navModel}>\n      <Page.Contents>\n        <PluginPage>\n          <HorizontalGroup wrap>\n            <SearchField value={q} onSearch={onSearch} />\n            <HorizontalGroup wrap className={styles.actionBar}>\n              <div>\n                <RadioButtonGroup\n                  value={filterByType}\n                  onChange={onFilterByTypeChange}\n                  options={[\n                    { value: 'all', label: 'All' },\n                    { value: 'datasource', label: 'Data sources' },\n                    { value: 'panel', label: 'Panels' },\n                    { value: 'app', label: 'Applications' },\n                  ]}\n                />\n              </div>\n              <div>\n                <RadioButtonGroup\n                  value={filterBy}\n                  onChange={onFilterByChange}\n                  options={[\n                    { value: 'all', label: 'All' },\n                    { value: 'installed', label: 'Installed' },\n                  ]}\n                />\n              </div>\n              <div>\n                <Select\n                  menuShouldPortal\n                  width={24}\n                  value={sortBy}\n                  onChange={onSortByChange}\n                  options={[\n                    { value: 'nameAsc', label: 'Sort by name (A-Z)' },\n                    { value: 'nameDesc', label: 'Sort by name (Z-A)' },\n                    { value: 'updated', label: 'Sort by updated date' },\n                    { value: 'published', label: 'Sort by published date' },\n                    { value: 'downloads', label: 'Sort by downloads' },\n                  ]}\n                />\n              </div>\n            </HorizontalGroup>\n          </HorizontalGroup>\n          <div className={styles.listWrap}>\n            {isLoading ? (\n              <LoadingPlaceholder\n                className={css`\n                  margin-bottom: 0;\n                `}\n                text=\"Loading results\"\n              />\n            ) : (\n              <PluginList plugins={sortedPlugins} />\n            )}\n          </div>\n        </PluginPage>\n      </Page.Contents>\n    </Page>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  actionBar: css`\n    ${theme.breakpoints.up('xl')} {\n      margin-left: auto;\n    }\n  `,\n  listWrap: css`\n    margin-top: ${theme.spacing(2)};\n  `,\n});\n\n// Because the component is used under multiple paths (/plugins and /admin/plugins) we need to get\n// the correct navModel from the store\nconst getNavModelId = (routeName?: string) => {\n  if (routeName === PluginAdminRoutes.HomeAdmin || routeName === PluginAdminRoutes.BrowseAdmin) {\n    return 'admin-plugins';\n  }\n\n  return 'plugins';\n};\n\nconst sorters: { [name: string]: (a: CatalogPlugin, b: CatalogPlugin) => number } = {\n  nameAsc: (a: CatalogPlugin, b: CatalogPlugin) => a.name.localeCompare(b.name),\n  nameDesc: (a: CatalogPlugin, b: CatalogPlugin) => b.name.localeCompare(a.name),\n  updated: (a: CatalogPlugin, b: CatalogPlugin) =>\n    dateTimeParse(b.updatedAt).valueOf() - dateTimeParse(a.updatedAt).valueOf(),\n  published: (a: CatalogPlugin, b: CatalogPlugin) =>\n    dateTimeParse(b.publishedAt).valueOf() - dateTimeParse(a.publishedAt).valueOf(),\n  downloads: (a: CatalogPlugin, b: CatalogPlugin) => b.downloads - a.downloads,\n};\n","import { getLocationSrv } from '@grafana/runtime';\n\nexport const useHistory = () => {\n  return {\n    push: ({ query }: any) => {\n      getLocationSrv().update({\n        partial: true,\n        replace: false,\n        query,\n      });\n    },\n  };\n};\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect, ConnectedProps } from 'react-redux';\nimport Page from 'app/core/components/Page/Page';\nimport PageActionBar from 'app/core/components/PageActionBar/PageActionBar';\nimport PluginList from './PluginList';\nimport { loadPlugins } from './state/actions';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { getPlugins, getPluginsSearchQuery } from './state/selectors';\nimport { StoreState } from 'app/types';\nimport { setPluginsSearchQuery } from './state/reducers';\nimport { useAsync } from 'react-use';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { PluginsErrorsInfo } from './PluginsErrorsInfo';\n\nconst mapStateToProps = (state: StoreState) => ({\n  navModel: getNavModel(state.navIndex, 'plugins'),\n  plugins: getPlugins(state.plugins),\n  searchQuery: getPluginsSearchQuery(state.plugins),\n  hasFetched: state.plugins.hasFetched,\n});\n\nconst mapDispatchToProps = {\n  loadPlugins,\n  setPluginsSearchQuery,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport type Props = ConnectedProps<typeof connector>;\n\nexport const PluginListPage: React.FC<Props> = ({\n  hasFetched,\n  navModel,\n  plugins,\n  setPluginsSearchQuery,\n  searchQuery,\n  loadPlugins,\n}) => {\n  useAsync(async () => {\n    loadPlugins();\n  }, [loadPlugins]);\n\n  let actionTarget: string | undefined = '_blank';\n  const linkButton = {\n    href: 'https://grafana.com/plugins?utm_source=grafana_plugin_list',\n    title: 'Find more plugins on Grafana.com',\n  };\n\n  return (\n    <Page navModel={navModel} aria-label={selectors.pages.PluginsList.page}>\n      <Page.Contents isLoading={!hasFetched}>\n        <>\n          <PageActionBar\n            searchQuery={searchQuery}\n            setSearchQuery={(query) => setPluginsSearchQuery(query)}\n            linkButton={linkButton}\n            placeholder=\"Search by name, author, description or type\"\n            target={actionTarget}\n          />\n          <PluginsErrorsInfo />\n          {hasFetched && plugins && <PluginList plugins={plugins} />}\n        </>\n      </Page.Contents>\n    </Page>\n  );\n};\n\nexport default hot(module)(connect(mapStateToProps, mapDispatchToProps)(PluginListPage));\n","import React from 'react';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { HorizontalGroup, InfoBox, List, PluginSignatureBadge, useTheme } from '@grafana/ui';\nimport { StoreState } from '../../types';\nimport { getAllPluginsErrors } from './state/selectors';\nimport { loadPlugins, loadPluginsErrors } from './state/actions';\nimport useAsync from 'react-use/lib/useAsync';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { hot } from 'react-hot-loader';\nimport { PluginErrorCode, PluginSignatureStatus } from '@grafana/data';\nimport { css } from '@emotion/css';\n\nconst mapStateToProps = (state: StoreState) => ({\n  errors: getAllPluginsErrors(state.plugins),\n});\n\nconst mapDispatchToProps = {\n  loadPluginsErrors,\n};\n\ninterface OwnProps {\n  children?: React.ReactNode;\n}\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PluginsErrorsInfoProps = ConnectedProps<typeof connector> & OwnProps;\n\nexport const PluginsErrorsInfoUnconnected: React.FC<PluginsErrorsInfoProps> = ({\n  loadPluginsErrors,\n  errors,\n  children,\n}) => {\n  const theme = useTheme();\n\n  const { loading } = useAsync(async () => {\n    await loadPluginsErrors();\n  }, [loadPlugins]);\n\n  if (loading || errors.length === 0) {\n    return null;\n  }\n  return (\n    <InfoBox\n      aria-label={selectors.pages.PluginsList.signatureErrorNotice}\n      severity=\"warning\"\n      urlTitle=\"Read more about plugin signing\"\n      url=\"https://grafana.com/docs/grafana/latest/plugins/plugin-signatures/\"\n    >\n      <div>\n        <p>\n          Unsigned plugins were found during plugin initialization. Grafana Labs cannot guarantee the integrity of these\n          plugins. We recommend only using signed plugins.\n        </p>\n        The following plugins are disabled and not shown in the list below:\n        <List\n          items={errors}\n          className={css`\n            list-style-type: circle;\n          `}\n          renderItem={(e) => (\n            <div\n              className={css`\n                margin-top: ${theme.spacing.sm};\n              `}\n            >\n              <HorizontalGroup spacing=\"sm\" justify=\"flex-start\" align=\"center\">\n                <strong>{e.pluginId}</strong>\n                <PluginSignatureBadge\n                  status={mapPluginErrorCodeToSignatureStatus(e.errorCode)}\n                  className={css`\n                    margin-top: 0;\n                  `}\n                />\n              </HorizontalGroup>\n            </div>\n          )}\n        />\n        {children}\n      </div>\n    </InfoBox>\n  );\n};\n\nexport const PluginsErrorsInfo = hot(module)(\n  connect(mapStateToProps, mapDispatchToProps)(PluginsErrorsInfoUnconnected)\n);\n\nfunction mapPluginErrorCodeToSignatureStatus(code: PluginErrorCode) {\n  switch (code) {\n    case PluginErrorCode.invalidSignature:\n      return PluginSignatureStatus.invalid;\n    case PluginErrorCode.missingSignature:\n      return PluginSignatureStatus.missing;\n    case PluginErrorCode.modifiedSignature:\n      return PluginSignatureStatus.modified;\n    default:\n      return PluginSignatureStatus.missing;\n  }\n}\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { useStyles2 } from '@grafana/ui';\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport const Page: React.FC = ({ children }) => {\n  const styles = useStyles2(getStyles);\n  return (\n    <div className=\"page-container\">\n      <div className={styles}>{children}</div>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) =>\n  css`\n    margin-bottom: ${theme.spacing(3)};\n  `;\n","import { PluginsState } from 'app/types/plugins';\n\nexport const getPlugins = (state: PluginsState) => {\n  const regex = new RegExp(state.searchQuery, 'i');\n\n  return state.plugins.filter((item) => {\n    return (\n      regex.test(item.name) ||\n      regex.test(item.info.author.name) ||\n      regex.test(item.type) ||\n      regex.test(item.info.description)\n    );\n  });\n};\nexport const getAllPluginsErrors = (state: PluginsState) => {\n  return state.errors;\n};\n\nexport const getPluginsSearchQuery = (state: PluginsState) => state.searchQuery;\n"],"sourceRoot":""}