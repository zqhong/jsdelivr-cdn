{"version":3,"sources":["webpack:///./public/app/plugins/datasource/dashboard/datasource.ts","webpack:///./public/app/plugins/datasource/dashboard/module.ts"],"names":["DashboardDatasource","DataSourceApi","constructor","instanceSettings","super","getCollapsedText","query","panelId","options","Promise","reject","testDatasource","resolve","plugin","DataSourcePlugin"],"mappings":"qHAMO,MAAMA,UAA4BC,gBACvCC,YAAYC,GACVC,MAAMD,GAGRE,iBAAiBC,GACf,MAAQ,wBAAuBA,EAAMC,QAGvCD,MAAME,GACJ,OAAOC,QAAQC,OAAO,sCAGxBC,iBACE,OAAOF,QAAQG,QAAQ,KCpB3B,uCAGO,MAAMC,EAAS,IAAIC,mBAAiBd","file":"99.62c612232a976d8836f5.js","sourcesContent":["import { DataSourceApi, DataQueryRequest, DataQueryResponse, DataSourceInstanceSettings } from '@grafana/data';\nimport { DashboardQuery } from './types';\n\n/**\n * This should not really be called\n */\nexport class DashboardDatasource extends DataSourceApi<DashboardQuery> {\n  constructor(instanceSettings: DataSourceInstanceSettings) {\n    super(instanceSettings);\n  }\n\n  getCollapsedText(query: DashboardQuery) {\n    return `Dashboard Reference: ${query.panelId}`;\n  }\n\n  query(options: DataQueryRequest<DashboardQuery>): Promise<DataQueryResponse> {\n    return Promise.reject('This should not be called directly');\n  }\n\n  testDatasource() {\n    return Promise.resolve({});\n  }\n}\n","import { DashboardDatasource } from './datasource';\nimport { DataSourcePlugin } from '@grafana/data';\n\nexport const plugin = new DataSourcePlugin(DashboardDatasource);\n"],"sourceRoot":""}