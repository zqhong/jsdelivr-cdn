{"version":3,"sources":["webpack:///./public/app/core/components/Animations/FadeIn.tsx","webpack:///./public/app/features/explore/ErrorContainer.tsx","webpack:///./public/app/features/explore/state/selectors.ts","webpack:///./public/app/features/explore/RichHistory/RichHistorySettings.tsx","webpack:///./public/app/features/explore/RichHistory/RichHistoryQueriesTab.tsx","webpack:///./public/app/features/explore/RichHistory/RichHistoryStarredTab.tsx","webpack:///./public/app/features/explore/RichHistory/RichHistory.tsx","webpack:///./public/app/features/query/components/HelpToggle.tsx","webpack:///./node_modules/fast-memoize/src/index.js","webpack:///./public/app/features/explore/ReturnToDashboardButton.tsx","webpack:///./public/app/features/explore/QueryRow.tsx","webpack:///./node_modules/react-use/esm/useInterval.js","webpack:///./public/app/features/explore/Time.tsx","webpack:///./public/app/features/explore/ElapsedTime.tsx","webpack:///./public/app/features/explore/LiveLogs.tsx","webpack:///./public/app/features/explore/RichHistory/RichHistoryContainer.tsx","webpack:///./public/app/features/explore/ExploreQueryInspector.tsx","webpack:///./node_modules/re-resizable/lib/resizer.js","webpack:///./public/app/features/explore/useLiveTailControls.ts","webpack:///./public/app/features/explore/ResponseErrorContainer.tsx","webpack:///./public/app/features/explore/NoDataSourceCallToAction.tsx","webpack:///./public/app/features/explore/TraceView/createSpanLink.tsx","webpack:///./public/app/features/explore/TraceView/uiElements.tsx","webpack:///./public/app/features/explore/TraceView/useChildrenState.ts","webpack:///./public/app/features/explore/TraceView/useDetailState.ts","webpack:///./public/app/features/explore/TraceView/TraceView.tsx","webpack:///./public/app/features/explore/TraceView/useHoverIndentGuide.ts","webpack:///./public/app/features/explore/TraceView/useViewRange.ts","webpack:///./public/app/features/explore/TraceView/useSearch.ts","webpack:///./public/app/features/explore/TraceView/TraceViewContainer.tsx","webpack:///./node_modules/re-resizable/lib/index.js","webpack:///./public/app/features/explore/ExploreGraphNGPanel.tsx","webpack:///./public/app/features/explore/LogsContainer.tsx","webpack:///./public/app/features/explore/ExploreToolbar.tsx","webpack:///./public/app/features/explore/QueryRows.tsx","webpack:///./public/app/features/explore/ExplorePaneContainer.tsx","webpack:///./public/app/features/explore/Wrapper.tsx","webpack:///./public/app/features/explore/LogsMetaRow.tsx","webpack:///./public/app/features/explore/LogsNavigationPages.tsx","webpack:///./public/app/features/explore/LogsNavigation.tsx","webpack:///./public/app/features/explore/Logs.tsx","webpack:///./public/app/features/explore/MetaInfoText.tsx","webpack:///./public/app/features/explore/SecondaryActions.tsx","webpack:///./public/app/features/explore/QueryRowActions.tsx","webpack:///./public/app/features/explore/TimeSyncButton.tsx","webpack:///./public/app/features/explore/ExploreTimeControls.tsx","webpack:///./public/app/features/explore/utils/LogsCrossFadeTransition.tsx","webpack:///./public/app/features/explore/NodeGraphContainer.tsx","webpack:///./public/app/features/explore/RunButton.tsx","webpack:///./public/app/features/explore/LiveTailButton.tsx","webpack:///./public/app/features/explore/Explore.tsx","webpack:///./node_modules/react-use/esm/usePrevious.js","webpack:///./public/app/features/explore/RichHistory/RichHistoryCard.tsx","webpack:///./public/app/features/explore/ExploreDrawer.tsx","webpack:///./public/app/features/explore/QueryEditor.tsx","webpack:///./public/app/features/explore/TableContainer.tsx"],"names":["FadeIn","props","defaultStyle","transition","duration","opacity","transitionStyles","exited","display","entering","entered","exiting","Transition","in","timeout","unmountOnExit","onExited","state","style","children","ErrorContainer","queryError","theme","useTheme2","showError","title","message","data","alertWithTopMargin","css","spacing","severity","className","isSplit","Boolean","explore","ExploreId","left","right","getStyles","stylesFactory","container","sm","typography","size","lg","input","switch","label","md","retentionPeriodOptions","value","RichHistorySettings","retentionPeriod","starredTabAsFirstTab","activeDatasourceOnly","onChangeRetentionPeriod","toggleStarredTabAsFirstTab","toggleactiveDatasourceOnly","deleteRichHistory","useTheme","styles","selectedOption","find","v","description","menuShouldPortal","options","onChange","weight","bold","variant","onClick","appEvents","publish","ShowConfirmModalEvent","text","yesText","icon","onConfirm","dispatch","notifyApp","createSuccessNotification","height","bgColor","isLight","palette","gray5","dark4","sliderHeight","semibold","containerContent","containerSlider","slider","selectors","filterInput","multiselect","xxs","xs","border","radius","sort","sessionName","heading","h4","footer","light","queries","regular","RichHistoryQueriesTab","datasourceFilters","onSelectDatasourceFilters","onChangeSortOrder","sortOrder","exploreId","timeFilter","setTimeFilter","useState","filteredQueries","setFilteredQueries","searchInput","setSearchInput","debouncedSearchInput","setDebouncedSearchInput","datasourcesRetrievedFromQueryHistory","uniqBy","map","d","datasourceName","listOfDatasources","createDatasourcesList","useDebounce","useEffect","filterAndSortQueries","mappedQueriesToHeadings","mapQueriesToHeadings","mapNumbertoTimeInSlider","tooltipAlwaysVisible","min","max","orientation","formatTooltipResult","reverse","onAfterChange","aria-label","placeholder","FilterInput","sortOrderOptions","filter","order","e","Object","keys","length","q","idx","findIndex","RichHistoryCard","query","dsImg","imgUrl","isRemoved","ts","RichHistoryStarredTab","starredQueries","starred","Tabs","SortOrder","Descending","Ascending","DatasourceAZ","DatasourceZA","UnThemedRichHistory","PureComponent","constructor","super","this","setState","store","set","RICH_HISTORY_SETTING_KEYS","setObject","error","console","getObject","getBool","updateFilters","activeDatasourceInstance","componentDidMount","componentDidUpdate","prevProps","prevState","render","richHistory","onClose","firstTab","tabs","RichHistory","content","Starred","Settings","toggleActiveDatasourceOnly","defaultTab","closeIconTooltip","withTheme","infoBox","HelpToggle","isHelpVisible","setIsHelpVisible","_","name","cx","monadic","fn","cache","serializer","arg","cacheKey","computedValue","get","call","variadic","args","Array","prototype","slice","arguments","apply","assemble","context","strategy","serialize","bind","strategyDefault","create","serializerDefault","JSON","stringify","ObjectWithoutPrototypeCache","has","key","cacheDefault","module","exports","strategies","mapDispatchToProps","setDashboardQueriesToUpdateOnLoad","connector","connect","splitted","datasourceInstance","originPanelId","roles","config","viewersCanEdit","push","canEdit","some","r","contextSrv","hasRole","withOriginId","Number","isInteger","cleanQueries","returnToPanel","async","withChanges","dash","getDashboardSrv","getCurrent","titleSlug","kbn","slugifyForUrl","panelId","panelInEdit","editPanel","panelInView","viewPanel","locationService","urlUtil","renderUrl","uid","placement","data-testid","noopOnBlur","QueryRow","textEditModeEnabled","runQueries","override","index","changeQuery","getHighlighterExpression","updateLogsHighlights","newQuery","hide","removeQueryRowAction","QueryEditor","components","ExploreMetricsQueryField","ExploreLogsQueryField","ExploreQueryField","history","exploreEvents","range","queryResponse","queryErrors","refId","ReactQueryEditor","setReactQueryEditor","datasource","onRunQuery","onBlur","onQueryChange","onExecuteQuery","initialQuery","DatasourceCheatsheet","QueryEditorHelp","onClickExample","debounce","expressions","highlightLogsExpressionAction","latency","canToggleEditorModes","isNotStarted","LoadingState","NotStarted","QueryEditorRows","rows","renderQueryEditor","isDisabled","onClickToggleEditorMode","onClickToggleDisabled","onClickRemoveButton","modifyQueries","item","absoluteRange","eventBridge","hot","callback","delay","savedCallback","current","interval_1","setInterval","clearInterval","Time","timeInMs","humanize","formatTime","inSeconds","toFixed","toDuration","hours","minutes","seconds","ElapsedTime","resetKey","elapsed","setElapsed","useInterval","LiveLogs","React","createRef","event","isPaused","onPause","scrollTop","clientHeight","scrollHeight","currentTarget","logRowsToRender","rowsToRender","logRows","nextProps","timeZone","onResume","logsRowsLive","fontFamily","monospace","logsRowFade","colors","tinycolor","blue95","setAlpha","toString","logsRowsIndicator","button","fullWidth","logsRow","logsRowLocalTime","logsRowMessage","getLogRowStyles","onScroll","undefined","ref","scrollContainerRef","row","dateTimeFormat","timeEpochMs","hasAnsi","raw","entry","element","liveEndDiv","scrollTo","stopLive","type","LiveLogsWithTheme","setHeight","width","onResize","_e","_dir","loading","dataFrames","series","statsTab","request","timezone","jsonTab","dataTab","isLoading","withTransforms","withFieldConfig","onRefreshQuery","errorTab","extendStatics","__extends","b","setPrototypeOf","__proto__","p","hasOwnProperty","__","__assign","assign","t","s","i","n","__importStar","mod","__esModule","result","k","defineProperty","top","cursor","bottom","topRight","position","bottomRight","bottomLeft","topLeft","Resizer","_super","_this","onMouseDown","onResizeStart","direction","onTouchStart","createElement","userSelect","replaceStyles","LiveTailControls","controls","useDispatch","pause","useCallback","setPausedStateAction","resume","stop","changeRefreshInterval","RefreshPicker","offOption","start","liveOption","useLiveTailControls","ResponseErrorContainer","useSelector","Error","NoDataSourceCallToAction","href","target","rel","ctaElement","cardClassName","breakpoints","callToActionElement","defaultKeys","getLokiQueryFromSpan","span","keysToCheck","process","tags","reduce","acc","tag","includes","join","getTimeRangeFromSpan","traceToLogsOptions","adjustedStartTime","spanStartTimeShift","Math","floor","startTime","rangeUtil","intervalToMs","from","dateTime","spanEndMs","adjustedEndTime","spanEndTimeShift","to","UIElements","Popover","overlayClassName","popoverRef","useRef","hideAfter","showPopper","hidePopper","popperProps","referenceElement","wrapperClassName","onMouseLeave","onMouseEnter","cloneElement","Tooltip","Icon","Dropdown","Menu","MenuItem","Button","Divider","Input","InputGroup","isDark","shouldDisableCollapse","allSpans","hiddenSpansIds","hasChildren","makeDetailSubsectionToggle","subSection","detailStates","setDetailStates","spanID","old","detailState","toggleTags","toggleProcess","toggleWarnings","toggleReferences","toggleStackTraces","toggleLogs","newDetailStates","Map","noop","TraceView","expandOne","collapseOne","childrenToggle","collapseAll","childrenHiddenIDs","expandAll","setChildrenHiddenIDs","Set","spans","prevExpandedDepth","expandNextHiddenSpan","newChildrenHiddenIDs","res","depth","delete","nearestCollapsedAncestor","curSpan","add","useChildrenState","toggleDetail","detailLogItemToggle","detailLogsToggle","detailProcessToggle","detailReferencesToggle","detailTagsToggle","detailWarningsToggle","detailStackTracesToggle","DetailState","log","toggleLogItem","useDetailState","removeHoverIndentGuideId","addHoverIndentGuideId","hoverIndentGuideIds","setHoverIndentGuideIds","newHoverIndentGuideIds","useHoverIndentGuide","viewRange","updateViewRangeTime","updateNextViewRangeTime","setViewRange","time","update","prevRange","end","useViewRange","spanNameColumnWidth","setSpanNameColumnWidth","slim","setSlim","traceProp","useMemo","frames","frame","fields","values","view","DataFrameView","processes","serviceName","serviceTags","traceID","toArray","processID","flags","references","parentSpanID","refType","logs","l","timestamp","transformTraceDataFrame","transformTraceData","transformDataFrames","search","setSearch","spanFindMatches","filterSpans","useSearch","dataSourceName","getDatasourceSrv","getInstanceSettings","jsonData","tracesToLogs","getTimeZone","user","traceTheme","ThemeType","Dark","Light","servicesColorPalette","TraceName","fontSize","traceTimeline","shouldScrollToFirstUiFindMatch","createSpanLink","splitOpenFn","datasourceUid","dataSourceSettings","dataLink","url","internal","expr","link","mapInternalLinkToExplore","internalLink","scopedVars","field","onClickFn","replaceVariables","getTemplateSrv","replace","createSpanLinkFactory","scrollElement","document","getElementsByClassName","onSlimViewClicked","Provider","canCollapse","clearSearch","focusUiFindMatches","hideMap","hideSummary","nextResult","onTraceGraphViewClicked","prevResult","resultCount","slimView","textFilter","trace","traceGraphView","searchValue","onSearchValueChange","hideSearchButtons","registerAccessors","scrollToFirstVisibleSpan","findMatchesIDs","focusSpan","createLinkToExternalSpan","clearShouldScrollToFirstUiFindMatch","detailToggle","setTrace","linksGetter","uiFind","TraceViewContainer","isOpen","__importDefault","resizer_1","fast_memoize_1","DEFAULT_SIZE","clamp","default","snap","round","hasDirection","dir","RegExp","test","findClosestSnap","snapArray","snapGap","closestGapIndex","prev","curr","abs","gap","endsWith","str","searchStr","substr","getStringSize","getPixelSize","parentSize","ratio","window","innerWidth","innerHeight","calculateNewMax","maxWidth","maxHeight","minWidth","minHeight","definedProps","Resizable","resizable","parentLeft","parentTop","resizableLeft","resizableTop","targetLeft","targetTop","c","isResizing","propsSize","original","x","y","backgroundStyle","backgroundColor","zIndex","onMouseMove","onMouseUp","parentNode","enumerable","configurable","defaultSize","parent","_i","children_1","HTMLElement","classList","contains","orgWidth","offsetWidth","orgHeight","offsetHeight","orgPosition","getSize","getParentSize","base","wrapChanged","wrap","flexWrap","bindEvents","addEventListener","unbindEvents","removeEventListener","computedStyle","getComputedStyle","flexBasis","transform","flex","appendChild","componentWillUnmount","parent_1","Node","removeChild","createSizeForCssProperty","newSize","kind","calculateNewMaxFromBoundary","bounds","parent_2","boundWidth","boundHeight","calculateNewSizeFromDirection","clientX","clientY","scale","resizeRatio","_a","_b","lockAspectRatio","lockAspectRatioExtraHeight","lockAspectRatioExtraWidth","newWidth","newHeight","extraHeight","extraWidth","calculateNewSizeFromAspectRatio","computedMinWidth","computedMaxWidth","computedMinHeight","computedMaxHeight","extraMinWidth","extraMaxWidth","extraMinHeight","extraMaxHeight","lockedMinWidth","lockedMaxWidth","lockedMinHeight","lockedMaxHeight","setBoundingClientRect","parent_3","parentRect","getBoundingClientRect","targetRect","top_1","nativeEvent","MouseEvent","which","TouchEvent","touches","parent_4","flexDirection","flexDir","startsWith","_c","boundaryMax","grid","newGridWidth","newGridHeight","delta","newState","onResizeStop","updateSize","renderResizer","enable","handleStyles","handleClasses","handleWrapperStyle","handleWrapperClass","handleComponent","resizers","extendsProps","indexOf","sizeStyle","boxSizing","flexShrink","defaultProps","ExploreGraphNGPanel","onUpdateTimeRange","annotations","tooltipDisplayMode","onHiddenSeriesChanged","showAllTimeSeries","setShowAllTimeSeries","baseStructureRev","setBaseStructureRev","previousData","usePrevious","structureChangesRef","compareArrayValues","compareDataFrameStructures","structureRev","fieldConfig","setFieldConfig","defaults","color","mode","FieldColorModeId","PaletteClassic","custom","drawStyle","DrawStyle","Line","fillOpacity","pointSize","overrides","useStyles","timeRange","dataWithConfig","registry","createFieldConfigRegistry","getGraphFieldConfig","defaultGraphConfig","applyFieldOverrides","fieldConfigRegistry","hiddenFrames","forEach","hideFrom","viz","every","identity","getFrameDisplayName","seriesToShow","getFieldLinks","rowIndex","getFieldLinksForExplore","panelContext","eventBus","onToggleSeriesVisibility","seriesVisibilityConfigFactory","timeSeriesDisclaimer","disclaimerIcon","legend","displayMode","LegendDisplayMode","List","calcs","alignedDataFrame","onZoom","exemplars","bg1","yellow","linkExternal","LogsContainer","updateTimeRange","getLogRowContext","showContextToggle","splitOpen","logsHighlighterExpressions","logsMeta","logsSeries","logsQueries","onClickFilterLabel","onClickFilterOutLabel","onStartScanning","onStopScanning","visibleRange","scanning","isLive","addResultsToCache","clearCache","styleOverridesForStickyNavigation","visible","highlighterExpressions","onChangeTime","scanRange","getRowContext","logsResult","meta","UnConnectedExploreToolbar","changeDatasource","dsSettings","importQueries","clearAll","cancelQueries","syncTimes","datasourceMissing","closeSplit","syncedTimes","refreshInterval","split","hasLiveOption","containerWidth","onChangeTimeZone","showSmallDataSourcePicker","showSmallTimePicker","classNames","onChangeDatasource","hideTextValue","iconOnly","disabled","createAndCopyShortLink","location","onChangeTimeSync","hideText","onClearAll","onChangeRefreshInterval","isSmall","onRun","showDropdown","func","interval","clearQueries","splitClose","updateTimeZoneForSession","exploreItem","streaming","ExploreToolbar","QueryRows","queryKeys","ExplorePaneContainerUnconnected","prevUrlQuery","urlQuery","lastSavedUrl","refreshExplore","el","EventBusSrv","openDrawer","initialized","initialDatasource","initialQueries","initialRange","initializeExplore","removeAllListeners","cleanupPaneAction","exploreClass","getRef","pages","Explore","General","ensureQueriesMemoized","memoizeOne","ensureQueries","getTimeRangeFromUrlMemoized","getTimeRangeFromUrl","ExplorePaneContainer","urlState","parseUrlState","urlRange","lastUsedDatasourceKeyForOrgId","orgId","getTimeRange","DEFAULT_RANGE","resetExploreAction","richHistoryUpdatedAction","navModel","getNavModel","navIndex","exploreState","WrapperUnconnected","getRichHistory","queryParams","datasourceTitle","documentTitle","main","Branding","AppTitle","hasSplit","Wrapper","LogsMetaRow","memo","dedupStrategy","dedupCount","showDetectedFields","clearDetectedFields","hasUnescapedContent","forceEscape","onEscapeNewlines","logsMetaItem","LogsDedupStrategy","none","LogsMetaKind","MAX_CHARACTERS","String","renderMetaItem","LabelsMap","MetaInfoText","metaItems","labels","displayName","LogsNavigationPages","currentPageIndex","oldestLogsFirst","changeTime","format","systemDateFormats","second","createPageContent","page","logsRange","autoHide","pagesWrapper","pagesContainer","queryRange","line","selectedBg","selectedText","bg2","bgBlue2","textWeak","LogsNavigation","logsSortOrder","scrollToTopLogs","setPages","setCurrentPageIndex","expectedQueriesRef","expectedRangeRef","rangeSpanRef","LogsSortOrder","onFirstPage","onLastPage","newPage","newPages","isEqual","a","sortPages","olderLogsButton","navButton","navButtonContent","newerLogsButton","navContainer","scrollToTopButton","SETTINGS_KEYS","UnthemedLogs","showLabels","showTime","wrapLogMessage","prettifyLogMessage","hiddenLogLevels","isFlipping","flipOrderTimer","setTimeout","cancelFlippingTimer","checked","hiddenRawLevels","level","LogLevel","preventDefault","concat","dedupedRows","dedupLogRows","sum","duplicates","filterLogLevels","topLogsRef","scrollIntoView","clearTimeout","hasData","checkUnescapedContent","filteredLogs","filterRows","dedupRows","scanText","describeTimeRange","infoText","TooltipDisplayMode","Multi","onToggleLogLevel","logOptions","transparent","onChangeLabels","onChangewrapLogMessage","onChangePrettifyLogMessage","dedupType","capitalize","LogsDedupDescription","onChangeDedup","radioButtons","flipButton","onChangeLogsSortOrder","logsSection","deduplicatedRows","enableLogDetails","onClickShowDetectedField","showDetectedField","onClickHideDetectedField","hideDetectedField","noData","fill","onClickScan","onClickStopScan","Logs","border2","metaContainer","metaItem","red","metaLabel","metaValue","MetaInfoItem","containerMargin","SecondaryActions","addQueryRowButtonHidden","onClickAddQueryRowButton","addQueryRowButtonDisabled","richHistoryButtonActive","onClickRichHistoryButton","queryInspectorButtonActive","onClickQueryInspectorButton","QueryRowActions","TimeSyncButton","isSynced","tooltip","ExploreTimeControls","Component","getShiftedTimeRange","dateTimeForTimeZone","onMoveTimePicker","adjustedFrom","dateMath","isMathString","adjustedTo","getZoomedTimeRange","timeSyncButton","timePickerCommonProps","onMoveBackward","onMoveBack","onMoveForward","TimePickerWithHistory","onChangeTimePicker","logsEnter","logsEnterActive","logsExit","logsExitActive","LogsCrossFadeTransition","mountOnEnter","transitionDuration","enter","enterActive","exit","exitActive","warningText","bodySmall","secondary","NodeGraphContainer","withTraceView","getLinks","useLinks","useStyles2","nodes","useCategorizeFrames","open","toggleOpen","useToggle","countWarning","collapsible","onToggle","NodeGraph","RunButton","intervals","getTimeSrv","getValidIntervals","defaultIntervals","onIntervalChanged","onRefresh","noIntervalPicker","primary","LiveTailButton","buttonVariant","onClickMain","stopButtonEnter","stopButtonEnterActive","stopButtonExit","stopButtonExitActive","exploreMain","queryContainer","panelPadding","ExploreDrawer","rawRange","setQueries","operator","FILTER_FOR_OPERATOR","FILTER_OUT_OPERATOR","onModifyQueries","addQueryRow","action","modifyQuery","modifier","modification","changeSize","scanStart","scanStopAction","QueryInspector","preferredVisualisationType","renderEmptyState","renderGraphPanel","graphResult","Single","renderTablePanel","ariaLabel","table","onCellFilterAdded","renderLogsPanel","renderNodeGraphPanel","showTrace","getNodeGraphDataFrames","renderTraceViewPanel","showMetrics","showTable","showLogs","showNodeGraph","showPanels","showRichHistory","showQueryInspector","autoHeightMin","toggleShowRichHistory","toggleShowQueryInspector","disableHeight","compose","cardColor","queryCard","border1","orange","cardRow","datasourceContainer","queryActionButtons","queryRow","updateCommentContainer","comment","commentButtonRow","textArea","runButton","updateRichHistory","activeUpdateComment","setActiveUpdateComment","setComment","queryDsInstance","setQueryDsInstance","ds","getDataSourceSrv","getQueryDsInstance","onUpdateComment","onCancelUpdateComment","updateComment","queriesToCopy","createQueryText","copyStringToClipboard","createUrlFromRichHistory","iconType","onKeyDown","keyEvent","shiftKey","ctrlKey","src","queryText","queriesToRun","drawerSlide","keyframes","background","weak","shadows","z3","sidemenu","drawerActive","rzHandle","shade","drawerWidth","loader","getAngularLoader","scopeProps","ctrl","refresh","events","panel","targets","dashboard","component","load","angularScope","hasToggledEditorMode","hasNewError","toggleEditorMode","digest","destroy","loadingInState","tableResult","TableContainer","getTableHeight","tableWidth","PANEL_BORDER","hasTableResult","valueRowIndex"],"mappings":"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","file":"explore.62c612232a976d8836f5.js","sourcesContent":["import React, { FC, CSSProperties } from 'react';\nimport Transition, { ExitHandler } from 'react-transition-group/Transition';\n\ninterface Props {\n  duration: number;\n  children: JSX.Element;\n  in: boolean;\n  unmountOnExit?: boolean;\n  onExited?: ExitHandler<HTMLDivElement>;\n}\n\nexport const FadeIn: FC<Props> = (props) => {\n  const defaultStyle: CSSProperties = {\n    transition: `opacity ${props.duration}ms linear`,\n    opacity: 0,\n  };\n\n  const transitionStyles: { [str: string]: CSSProperties } = {\n    exited: { opacity: 0, display: 'none' },\n    entering: { opacity: 0 },\n    entered: { opacity: 1 },\n    exiting: { opacity: 0 },\n  };\n\n  return (\n    <Transition\n      in={props.in}\n      timeout={props.duration}\n      unmountOnExit={props.unmountOnExit || false}\n      onExited={props.onExited}\n    >\n      {(state) => (\n        <div\n          style={{\n            ...defaultStyle,\n            ...transitionStyles[state],\n          }}\n        >\n          {props.children}\n        </div>\n      )}\n    </Transition>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport { DataQueryError } from '@grafana/data';\nimport { Alert, useTheme2 } from '@grafana/ui';\nimport { FadeIn } from 'app/core/components/Animations/FadeIn';\nimport { css } from '@emotion/css';\n\nexport interface ErrorContainerProps {\n  queryError?: DataQueryError;\n}\n\nexport const ErrorContainer: FunctionComponent<ErrorContainerProps> = (props) => {\n  const { queryError } = props;\n  const theme = useTheme2();\n  const showError = queryError ? true : false;\n  const duration = showError ? 100 : 10;\n  const title = queryError ? 'Query error' : 'Unknown error';\n  const message = queryError?.message || queryError?.data?.message || null;\n  const alertWithTopMargin = css`\n    margin-top: ${theme.spacing(2)};\n  `;\n\n  return (\n    <FadeIn in={showError} duration={duration}>\n      <Alert severity=\"error\" title={title} className={alertWithTopMargin}>\n        {message}\n      </Alert>\n    </FadeIn>\n  );\n};\n","import { ExploreId, StoreState } from 'app/types';\n\nexport const isSplit = (state: StoreState) => Boolean(state.explore[ExploreId.left] && state.explore[ExploreId.right]);\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { stylesFactory, useTheme, Select, Button, Switch, Field } from '@grafana/ui';\nimport { GrafanaTheme } from '@grafana/data';\nimport appEvents from 'app/core/app_events';\nimport { ShowConfirmModalEvent } from '../../../types/events';\nimport { dispatch } from 'app/store/store';\nimport { notifyApp } from 'app/core/actions';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\n\nexport interface RichHistorySettingsProps {\n  retentionPeriod: number;\n  starredTabAsFirstTab: boolean;\n  activeDatasourceOnly: boolean;\n  onChangeRetentionPeriod: (option: { label: string; value: number }) => void;\n  toggleStarredTabAsFirstTab: () => void;\n  toggleactiveDatasourceOnly: () => void;\n  deleteRichHistory: () => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    container: css`\n      padding-left: ${theme.spacing.sm};\n      font-size: ${theme.typography.size.sm};\n      .space-between {\n        margin-bottom: ${theme.spacing.lg};\n      }\n    `,\n    input: css`\n      max-width: 200px;\n    `,\n    switch: css`\n      display: flex;\n      align-items: center;\n    `,\n    label: css`\n      margin-left: ${theme.spacing.md};\n    `,\n  };\n});\n\nconst retentionPeriodOptions = [\n  { value: 2, label: '2 days' },\n  { value: 5, label: '5 days' },\n  { value: 7, label: '1 week' },\n  { value: 14, label: '2 weeks' },\n];\n\nexport function RichHistorySettings(props: RichHistorySettingsProps) {\n  const {\n    retentionPeriod,\n    starredTabAsFirstTab,\n    activeDatasourceOnly,\n    onChangeRetentionPeriod,\n    toggleStarredTabAsFirstTab,\n    toggleactiveDatasourceOnly,\n    deleteRichHistory,\n  } = props;\n  const theme = useTheme();\n  const styles = getStyles(theme);\n  const selectedOption = retentionPeriodOptions.find((v) => v.value === retentionPeriod);\n\n  const onDelete = () => {\n    appEvents.publish(\n      new ShowConfirmModalEvent({\n        title: 'Delete',\n        text: 'Are you sure you want to permanently delete your query history?',\n        yesText: 'Delete',\n        icon: 'trash-alt',\n        onConfirm: () => {\n          deleteRichHistory();\n          dispatch(notifyApp(createSuccessNotification('Query history deleted')));\n        },\n      })\n    );\n  };\n\n  return (\n    <div className={styles.container}>\n      <Field\n        label=\"History time span\"\n        description=\"Select the period of time for which Grafana will save your query history\"\n        className=\"space-between\"\n      >\n        <div className={styles.input}>\n          <Select\n            menuShouldPortal\n            value={selectedOption}\n            options={retentionPeriodOptions}\n            onChange={onChangeRetentionPeriod}\n          ></Select>\n        </div>\n      </Field>\n      <Field label=\"Default active tab\" description=\" \" className=\"space-between\">\n        <div className={styles.switch}>\n          <Switch value={starredTabAsFirstTab} onChange={toggleStarredTabAsFirstTab}></Switch>\n          <div className={styles.label}>Change the default active tab from “Query history” to “Starred”</div>\n        </div>\n      </Field>\n      <Field label=\"Data source behaviour\" description=\" \" className=\"space-between\">\n        <div className={styles.switch}>\n          <Switch value={activeDatasourceOnly} onChange={toggleactiveDatasourceOnly}></Switch>\n          <div className={styles.label}>Only show queries for data source currently active in Explore</div>\n        </div>\n      </Field>\n      <div\n        className={css`\n          font-weight: ${theme.typography.weight.bold};\n        `}\n      >\n        Clear query history\n      </div>\n      <div\n        className={css`\n          margin-bottom: ${theme.spacing.sm};\n        `}\n      >\n        Delete all of your query history, permanently.\n      </div>\n      <Button variant=\"destructive\" onClick={onDelete}>\n        Clear query history\n      </Button>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { css } from '@emotion/css';\nimport { uniqBy } from 'lodash';\n\n// Types\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\n\n// Utils\nimport { stylesFactory, useTheme, RangeSlider, MultiSelect, Select } from '@grafana/ui';\nimport { GrafanaTheme, SelectableValue } from '@grafana/data';\n\nimport {\n  SortOrder,\n  mapNumbertoTimeInSlider,\n  mapQueriesToHeadings,\n  createDatasourcesList,\n  filterAndSortQueries,\n} from 'app/core/utils/richHistory';\n\n// Components\nimport RichHistoryCard from './RichHistoryCard';\nimport { sortOrderOptions } from './RichHistory';\nimport { FilterInput } from 'app/core/components/FilterInput/FilterInput';\nimport { useDebounce } from 'react-use';\n\nexport interface Props {\n  queries: RichHistoryQuery[];\n  sortOrder: SortOrder;\n  activeDatasourceOnly: boolean;\n  datasourceFilters: SelectableValue[];\n  retentionPeriod: number;\n  exploreId: ExploreId;\n  height: number;\n  onChangeSortOrder: (sortOrder: SortOrder) => void;\n  onSelectDatasourceFilters: (value: SelectableValue[]) => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme, height: number) => {\n  const bgColor = theme.isLight ? theme.palette.gray5 : theme.palette.dark4;\n\n  /* 134px is based on the width of the Query history tabs bar, so the content is aligned to right side of the tab */\n  const cardWidth = '100% - 134px';\n  const sliderHeight = `${height - 180}px`;\n  return {\n    container: css`\n      display: flex;\n      .label-slider {\n        font-size: ${theme.typography.size.sm};\n        &:last-of-type {\n          margin-top: ${theme.spacing.lg};\n        }\n        &:first-of-type {\n          font-weight: ${theme.typography.weight.semibold};\n          margin-bottom: ${theme.spacing.md};\n        }\n      }\n    `,\n    containerContent: css`\n      width: calc(${cardWidth});\n    `,\n    containerSlider: css`\n      width: 129px;\n      margin-right: ${theme.spacing.sm};\n      .slider {\n        bottom: 10px;\n        height: ${sliderHeight};\n        width: 129px;\n        padding: ${theme.spacing.sm} 0;\n      }\n    `,\n    slider: css`\n      position: fixed;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    filterInput: css`\n      margin-bottom: ${theme.spacing.sm};\n    `,\n    multiselect: css`\n      width: 100%;\n      margin-bottom: ${theme.spacing.sm};\n      .gf-form-select-box__multi-value {\n        background-color: ${bgColor};\n        padding: ${theme.spacing.xxs} ${theme.spacing.xs} ${theme.spacing.xxs} ${theme.spacing.sm};\n        border-radius: ${theme.border.radius.sm};\n      }\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    sessionName: css`\n      display: flex;\n      align-items: flex-start;\n      justify-content: flex-start;\n      margin-top: ${theme.spacing.lg};\n      h4 {\n        margin: 0 10px 0 0;\n      }\n    `,\n    heading: css`\n      font-size: ${theme.typography.heading.h4};\n      margin: ${theme.spacing.md} ${theme.spacing.xxs} ${theme.spacing.sm} ${theme.spacing.xxs};\n    `,\n    footer: css`\n      height: 60px;\n      margin-top: ${theme.spacing.lg};\n      display: flex;\n      justify-content: center;\n      font-weight: ${theme.typography.weight.light};\n      font-size: ${theme.typography.size.sm};\n      a {\n        font-weight: ${theme.typography.weight.semibold};\n        margin-left: ${theme.spacing.xxs};\n      }\n    `,\n    queries: css`\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.regular};\n      margin-left: ${theme.spacing.xs};\n    `,\n  };\n});\n\nexport function RichHistoryQueriesTab(props: Props) {\n  const {\n    datasourceFilters,\n    onSelectDatasourceFilters,\n    queries,\n    onChangeSortOrder,\n    sortOrder,\n    activeDatasourceOnly,\n    retentionPeriod,\n    exploreId,\n    height,\n  } = props;\n\n  const [timeFilter, setTimeFilter] = useState<[number, number]>([0, retentionPeriod]);\n  const [filteredQueries, setFilteredQueries] = useState<RichHistoryQuery[]>([]);\n  const [searchInput, setSearchInput] = useState('');\n  const [debouncedSearchInput, setDebouncedSearchInput] = useState('');\n\n  const theme = useTheme();\n  const styles = getStyles(theme, height);\n\n  const datasourcesRetrievedFromQueryHistory = uniqBy(queries, 'datasourceName').map((d) => d.datasourceName);\n  const listOfDatasources = createDatasourcesList(datasourcesRetrievedFromQueryHistory);\n\n  useDebounce(\n    () => {\n      setDebouncedSearchInput(searchInput);\n    },\n    300,\n    [searchInput]\n  );\n\n  useEffect(() => {\n    setFilteredQueries(\n      filterAndSortQueries(\n        queries,\n        sortOrder,\n        datasourceFilters.map((d) => d.value),\n        debouncedSearchInput,\n        timeFilter\n      )\n    );\n  }, [timeFilter, queries, sortOrder, datasourceFilters, debouncedSearchInput]);\n\n  /* mappedQueriesToHeadings is an object where query headings (stringified dates/data sources)\n   * are keys and arrays with queries that belong to that headings are values.\n   */\n  const mappedQueriesToHeadings = mapQueriesToHeadings(filteredQueries, sortOrder);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerSlider}>\n        <div className={styles.slider}>\n          <div className=\"label-slider\">Filter history</div>\n          <div className=\"label-slider\">{mapNumbertoTimeInSlider(timeFilter[0])}</div>\n          <div className=\"slider\">\n            <RangeSlider\n              tooltipAlwaysVisible={false}\n              min={0}\n              max={retentionPeriod}\n              value={timeFilter}\n              orientation=\"vertical\"\n              formatTooltipResult={mapNumbertoTimeInSlider}\n              reverse={true}\n              onAfterChange={setTimeFilter as () => number[]}\n            />\n          </div>\n          <div className=\"label-slider\">{mapNumbertoTimeInSlider(timeFilter[1])}</div>\n        </div>\n      </div>\n\n      <div className={styles.containerContent}>\n        <div className={styles.selectors}>\n          {!activeDatasourceOnly && (\n            <div aria-label=\"Filter datasources\" className={styles.multiselect}>\n              <MultiSelect\n                menuShouldPortal\n                options={listOfDatasources}\n                value={datasourceFilters}\n                placeholder=\"Filter queries for data sources(s)\"\n                onChange={onSelectDatasourceFilters}\n              />\n            </div>\n          )}\n          <div className={styles.filterInput}>\n            <FilterInput\n              placeholder=\"Search queries\"\n              value={searchInput}\n              onChange={(value: string) => {\n                setSearchInput(value);\n              }}\n            />\n          </div>\n          <div aria-label=\"Sort queries\" className={styles.sort}>\n            <Select\n              menuShouldPortal\n              value={sortOrderOptions.filter((order) => order.value === sortOrder)}\n              options={sortOrderOptions}\n              placeholder=\"Sort queries by\"\n              onChange={(e) => onChangeSortOrder(e.value as SortOrder)}\n            />\n          </div>\n        </div>\n        {Object.keys(mappedQueriesToHeadings).map((heading) => {\n          return (\n            <div key={heading}>\n              <div className={styles.heading}>\n                {heading} <span className={styles.queries}>{mappedQueriesToHeadings[heading].length} queries</span>\n              </div>\n              {mappedQueriesToHeadings[heading].map((q: RichHistoryQuery) => {\n                const idx = listOfDatasources.findIndex((d) => d.label === q.datasourceName);\n                return (\n                  <RichHistoryCard\n                    query={q}\n                    key={q.ts}\n                    exploreId={exploreId}\n                    dsImg={listOfDatasources[idx].imgUrl}\n                    isRemoved={listOfDatasources[idx].isRemoved}\n                  />\n                );\n              })}\n            </div>\n          );\n        })}\n        <div className={styles.footer}>The history is local to your browser and is not shared with others.</div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { css } from '@emotion/css';\nimport { uniqBy } from 'lodash';\n\n// Types\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\n\n// Utils\nimport { stylesFactory, useTheme, Select, MultiSelect } from '@grafana/ui';\nimport { GrafanaTheme, SelectableValue } from '@grafana/data';\nimport { filterAndSortQueries, createDatasourcesList, SortOrder } from 'app/core/utils/richHistory';\n\n// Components\nimport RichHistoryCard from './RichHistoryCard';\nimport { sortOrderOptions } from './RichHistory';\nimport { FilterInput } from 'app/core/components/FilterInput/FilterInput';\nimport { useDebounce } from 'react-use';\n\nexport interface Props {\n  queries: RichHistoryQuery[];\n  sortOrder: SortOrder;\n  activeDatasourceOnly: boolean;\n  datasourceFilters: SelectableValue[];\n  exploreId: ExploreId;\n  onChangeSortOrder: (sortOrder: SortOrder) => void;\n  onSelectDatasourceFilters: (value: SelectableValue[]) => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  const bgColor = theme.isLight ? theme.palette.gray5 : theme.palette.dark4;\n  return {\n    container: css`\n      display: flex;\n    `,\n    containerContent: css`\n      width: 100%;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    multiselect: css`\n      width: 100%;\n      margin-bottom: ${theme.spacing.sm};\n      .gf-form-select-box__multi-value {\n        background-color: ${bgColor};\n        padding: ${theme.spacing.xxs} ${theme.spacing.xs} ${theme.spacing.xxs} ${theme.spacing.sm};\n        border-radius: ${theme.border.radius.sm};\n      }\n    `,\n    filterInput: css`\n      margin-bottom: ${theme.spacing.sm};\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    footer: css`\n      height: 60px;\n      margin-top: ${theme.spacing.lg};\n      display: flex;\n      justify-content: center;\n      font-weight: ${theme.typography.weight.light};\n      font-size: ${theme.typography.size.sm};\n      a {\n        font-weight: ${theme.typography.weight.semibold};\n        margin-left: ${theme.spacing.xxs};\n      }\n    `,\n  };\n});\n\nexport function RichHistoryStarredTab(props: Props) {\n  const {\n    datasourceFilters,\n    onSelectDatasourceFilters,\n    queries,\n    onChangeSortOrder,\n    sortOrder,\n    activeDatasourceOnly,\n    exploreId,\n  } = props;\n\n  const [filteredQueries, setFilteredQueries] = useState<RichHistoryQuery[]>([]);\n  const [searchInput, setSearchInput] = useState('');\n  const [debouncedSearchInput, setDebouncedSearchInput] = useState('');\n\n  const theme = useTheme();\n  const styles = getStyles(theme);\n\n  const datasourcesRetrievedFromQueryHistory = uniqBy(queries, 'datasourceName').map((d) => d.datasourceName);\n  const listOfDatasources = createDatasourcesList(datasourcesRetrievedFromQueryHistory);\n\n  useDebounce(\n    () => {\n      setDebouncedSearchInput(searchInput);\n    },\n    300,\n    [searchInput]\n  );\n\n  useEffect(() => {\n    const starredQueries = queries.filter((q) => q.starred === true);\n    setFilteredQueries(\n      filterAndSortQueries(\n        starredQueries,\n        sortOrder,\n        datasourceFilters.map((d) => d.value),\n        debouncedSearchInput\n      )\n    );\n  }, [queries, sortOrder, datasourceFilters, debouncedSearchInput]);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerContent}>\n        <div className={styles.selectors}>\n          {!activeDatasourceOnly && (\n            <div aria-label=\"Filter datasources\" className={styles.multiselect}>\n              <MultiSelect\n                menuShouldPortal\n                options={listOfDatasources}\n                value={datasourceFilters}\n                placeholder=\"Filter queries for specific data sources(s)\"\n                onChange={onSelectDatasourceFilters}\n              />\n            </div>\n          )}\n          <div className={styles.filterInput}>\n            <FilterInput\n              placeholder=\"Search queries\"\n              value={searchInput}\n              onChange={(value: string) => {\n                setSearchInput(value);\n              }}\n            />\n          </div>\n          <div aria-label=\"Sort queries\" className={styles.sort}>\n            <Select\n              menuShouldPortal\n              options={sortOrderOptions}\n              value={sortOrderOptions.filter((order) => order.value === sortOrder)}\n              placeholder=\"Sort queries by\"\n              onChange={(e) => onChangeSortOrder(e.value as SortOrder)}\n            />\n          </div>\n        </div>\n        {filteredQueries.map((q) => {\n          const idx = listOfDatasources.findIndex((d) => d.label === q.datasourceName);\n          return (\n            <RichHistoryCard\n              query={q}\n              key={q.ts}\n              exploreId={exploreId}\n              dsImg={listOfDatasources[idx].imgUrl}\n              isRemoved={listOfDatasources[idx].isRemoved}\n            />\n          );\n        })}\n        <div className={styles.footer}>The history is local to your browser and is not shared with others.</div>\n      </div>\n    </div>\n  );\n}\n","import React, { PureComponent } from 'react';\n\n//Services & Utils\nimport { RICH_HISTORY_SETTING_KEYS, SortOrder } from 'app/core/utils/richHistory';\nimport store from 'app/core/store';\nimport { Themeable, withTheme, TabbedContainer, TabConfig } from '@grafana/ui';\n\n//Types\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\nimport { SelectableValue } from '@grafana/data';\n\n//Components\nimport { RichHistorySettings } from './RichHistorySettings';\nimport { RichHistoryQueriesTab } from './RichHistoryQueriesTab';\nimport { RichHistoryStarredTab } from './RichHistoryStarredTab';\n\nexport enum Tabs {\n  RichHistory = 'Query history',\n  Starred = 'Starred',\n  Settings = 'Settings',\n}\n\nexport const sortOrderOptions = [\n  { label: 'Newest first', value: SortOrder.Descending },\n  { label: 'Oldest first', value: SortOrder.Ascending },\n  { label: 'Data source A-Z', value: SortOrder.DatasourceAZ },\n  { label: 'Data source Z-A', value: SortOrder.DatasourceZA },\n];\n\nexport interface RichHistoryProps extends Themeable {\n  richHistory: RichHistoryQuery[];\n  activeDatasourceInstance: string;\n  firstTab: Tabs;\n  exploreId: ExploreId;\n  height: number;\n  deleteRichHistory: () => void;\n  onClose: () => void;\n}\n\ninterface RichHistoryState {\n  sortOrder: SortOrder;\n  retentionPeriod: number;\n  starredTabAsFirstTab: boolean;\n  activeDatasourceOnly: boolean;\n  datasourceFilters: SelectableValue[];\n}\n\nclass UnThemedRichHistory extends PureComponent<RichHistoryProps, RichHistoryState> {\n  constructor(props: RichHistoryProps) {\n    super(props);\n    this.state = {\n      sortOrder: SortOrder.Descending,\n      datasourceFilters: store.getObject(RICH_HISTORY_SETTING_KEYS.datasourceFilters, []),\n      retentionPeriod: store.getObject(RICH_HISTORY_SETTING_KEYS.retentionPeriod, 7),\n      starredTabAsFirstTab: store.getBool(RICH_HISTORY_SETTING_KEYS.starredTabAsFirstTab, false),\n      activeDatasourceOnly: store.getBool(RICH_HISTORY_SETTING_KEYS.activeDatasourceOnly, true),\n    };\n  }\n\n  onChangeRetentionPeriod = (retentionPeriod: { label: string; value: number }) => {\n    this.setState({\n      retentionPeriod: retentionPeriod.value,\n    });\n    store.set(RICH_HISTORY_SETTING_KEYS.retentionPeriod, retentionPeriod.value);\n  };\n\n  toggleStarredTabAsFirstTab = () => {\n    const starredTabAsFirstTab = !this.state.starredTabAsFirstTab;\n    this.setState({\n      starredTabAsFirstTab,\n    });\n    store.set(RICH_HISTORY_SETTING_KEYS.starredTabAsFirstTab, starredTabAsFirstTab);\n  };\n\n  toggleActiveDatasourceOnly = () => {\n    const activeDatasourceOnly = !this.state.activeDatasourceOnly;\n    this.setState({\n      activeDatasourceOnly,\n    });\n    store.set(RICH_HISTORY_SETTING_KEYS.activeDatasourceOnly, activeDatasourceOnly);\n  };\n\n  onSelectDatasourceFilters = (value: SelectableValue[]) => {\n    try {\n      store.setObject(RICH_HISTORY_SETTING_KEYS.datasourceFilters, value);\n    } catch (error) {\n      console.error(error);\n    }\n    /* Set data source filters to state even though they were not successfully saved in\n     * localStorage to allow interaction and filtering.\n     **/\n    this.setState({ datasourceFilters: value });\n  };\n\n  onChangeSortOrder = (sortOrder: SortOrder) => this.setState({ sortOrder });\n\n  /* If user selects activeDatasourceOnly === true, set datasource filter to currently active datasource.\n   * Filtering based on datasource won't be available. Otherwise set to null, as filtering will be\n   * available for user.\n   */\n  updateFilters() {\n    this.state.activeDatasourceOnly && this.props.activeDatasourceInstance\n      ? this.onSelectDatasourceFilters([\n          { label: this.props.activeDatasourceInstance, value: this.props.activeDatasourceInstance },\n        ])\n      : this.onSelectDatasourceFilters(this.state.datasourceFilters);\n  }\n\n  componentDidMount() {\n    this.updateFilters();\n  }\n\n  componentDidUpdate(prevProps: RichHistoryProps, prevState: RichHistoryState) {\n    if (\n      this.props.activeDatasourceInstance !== prevProps.activeDatasourceInstance ||\n      this.state.activeDatasourceOnly !== prevState.activeDatasourceOnly\n    ) {\n      this.updateFilters();\n    }\n  }\n\n  render() {\n    const { datasourceFilters, sortOrder, activeDatasourceOnly, retentionPeriod } = this.state;\n    const { richHistory, height, exploreId, deleteRichHistory, onClose, firstTab } = this.props;\n\n    const QueriesTab: TabConfig = {\n      label: 'Query history',\n      value: Tabs.RichHistory,\n      content: (\n        <RichHistoryQueriesTab\n          queries={richHistory}\n          sortOrder={sortOrder}\n          datasourceFilters={datasourceFilters}\n          activeDatasourceOnly={activeDatasourceOnly}\n          retentionPeriod={retentionPeriod}\n          onChangeSortOrder={this.onChangeSortOrder}\n          onSelectDatasourceFilters={this.onSelectDatasourceFilters}\n          exploreId={exploreId}\n          height={height}\n        />\n      ),\n      icon: 'history',\n    };\n\n    const StarredTab: TabConfig = {\n      label: 'Starred',\n      value: Tabs.Starred,\n      content: (\n        <RichHistoryStarredTab\n          queries={richHistory}\n          sortOrder={sortOrder}\n          datasourceFilters={datasourceFilters}\n          activeDatasourceOnly={activeDatasourceOnly}\n          onChangeSortOrder={this.onChangeSortOrder}\n          onSelectDatasourceFilters={this.onSelectDatasourceFilters}\n          exploreId={exploreId}\n        />\n      ),\n      icon: 'star',\n    };\n\n    const SettingsTab: TabConfig = {\n      label: 'Settings',\n      value: Tabs.Settings,\n      content: (\n        <RichHistorySettings\n          retentionPeriod={this.state.retentionPeriod}\n          starredTabAsFirstTab={this.state.starredTabAsFirstTab}\n          activeDatasourceOnly={this.state.activeDatasourceOnly}\n          onChangeRetentionPeriod={this.onChangeRetentionPeriod}\n          toggleStarredTabAsFirstTab={this.toggleStarredTabAsFirstTab}\n          toggleactiveDatasourceOnly={this.toggleActiveDatasourceOnly}\n          deleteRichHistory={deleteRichHistory}\n        />\n      ),\n      icon: 'sliders-v-alt',\n    };\n\n    let tabs = [QueriesTab, StarredTab, SettingsTab];\n    return (\n      <TabbedContainer tabs={tabs} onClose={onClose} defaultTab={firstTab} closeIconTooltip=\"Close query history\" />\n    );\n  }\n}\n\nexport const RichHistory = withTheme(UnThemedRichHistory);\n","import { GrafanaTheme } from '@grafana/data';\nimport { Icon, InfoBox, stylesFactory, useTheme } from '@grafana/ui';\nimport { css, cx } from '@emotion/css';\nimport React, { useState } from 'react';\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => ({\n  infoBox: css`\n    margin-top: ${theme.spacing.xs};\n  `,\n}));\n\nexport const HelpToggle: React.FunctionComponent = ({ children }) => {\n  const [isHelpVisible, setIsHelpVisible] = useState(false);\n  const theme = useTheme();\n  const styles = getStyles(theme);\n\n  return (\n    <>\n      <button className=\"gf-form-label query-keyword pointer\" onClick={(_) => setIsHelpVisible(!isHelpVisible)}>\n        Help\n        <Icon name={isHelpVisible ? 'angle-down' : 'angle-right'} />\n      </button>\n      {isHelpVisible && <InfoBox className={cx(styles.infoBox)}>{children}</InfoBox>}\n    </>\n  );\n};\n","//\n// Main\n//\n\nfunction memoize (fn, options) {\n  var cache = options && options.cache\n    ? options.cache\n    : cacheDefault\n\n  var serializer = options && options.serializer\n    ? options.serializer\n    : serializerDefault\n\n  var strategy = options && options.strategy\n    ? options.strategy\n    : strategyDefault\n\n  return strategy(fn, {\n    cache: cache,\n    serializer: serializer\n  })\n}\n\n//\n// Strategy\n//\n\nfunction isPrimitive (value) {\n  return value == null || typeof value === 'number' || typeof value === 'boolean' // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\n\nfunction monadic (fn, cache, serializer, arg) {\n  var cacheKey = isPrimitive(arg) ? arg : serializer(arg)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.call(this, arg)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction variadic (fn, cache, serializer) {\n  var args = Array.prototype.slice.call(arguments, 3)\n  var cacheKey = serializer(args)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.apply(this, args)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction assemble (fn, context, strategy, cache, serialize) {\n  return strategy.bind(\n    context,\n    fn,\n    cache,\n    serialize\n  )\n}\n\nfunction strategyDefault (fn, options) {\n  var strategy = fn.length === 1 ? monadic : variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyVariadic (fn, options) {\n  var strategy = variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyMonadic (fn, options) {\n  var strategy = monadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\n//\n// Serializer\n//\n\nfunction serializerDefault () {\n  return JSON.stringify(arguments)\n}\n\n//\n// Cache\n//\n\nfunction ObjectWithoutPrototypeCache () {\n  this.cache = Object.create(null)\n}\n\nObjectWithoutPrototypeCache.prototype.has = function (key) {\n  return (key in this.cache)\n}\n\nObjectWithoutPrototypeCache.prototype.get = function (key) {\n  return this.cache[key]\n}\n\nObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n  this.cache[key] = value\n}\n\nvar cacheDefault = {\n  create: function create () {\n    return new ObjectWithoutPrototypeCache()\n  }\n}\n\n//\n// API\n//\n\nmodule.exports = memoize\nmodule.exports.strategies = {\n  variadic: strategyVariadic,\n  monadic: strategyMonadic\n}\n","import React, { FC } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { ButtonGroup, ButtonSelect, Icon, ToolbarButton, Tooltip } from '@grafana/ui';\nimport { DataQuery, urlUtil } from '@grafana/data';\n\nimport kbn from '../../core/utils/kbn';\nimport config from 'app/core/config';\nimport { getDashboardSrv } from '../dashboard/services/DashboardSrv';\nimport { StoreState } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\nimport { setDashboardQueriesToUpdateOnLoad } from '../dashboard/state/reducers';\nimport { isSplit } from './state/selectors';\nimport { locationService } from '@grafana/runtime';\nimport { contextSrv } from 'app/core/services/context_srv';\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  const splitted = isSplit(state);\n  const { datasourceInstance, queries, originPanelId } = explore[exploreId]!;\n\n  const roles = ['Editor', 'Admin'];\n  if (config.viewersCanEdit) {\n    roles.push('Viewer');\n  }\n\n  return {\n    exploreId,\n    datasourceInstance,\n    queries,\n    originPanelId,\n    splitted,\n    canEdit: roles.some((r) => contextSrv.hasRole(r)),\n  };\n}\n\nconst mapDispatchToProps = {\n  setDashboardQueriesToUpdateOnLoad,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype Props = ConnectedProps<typeof connector>;\n\nexport const UnconnectedReturnToDashboardButton: FC<Props> = ({\n  originPanelId,\n  setDashboardQueriesToUpdateOnLoad,\n  queries,\n  splitted,\n  canEdit,\n}) => {\n  const withOriginId = originPanelId && Number.isInteger(originPanelId);\n\n  // If in split mode, or no origin id, escape early and return null\n  if (splitted || !withOriginId) {\n    return null;\n  }\n\n  const cleanQueries = (queries: DataQuery[]) => {\n    return queries.map((query: DataQuery & { context?: string }) => {\n      delete query.context;\n      delete query.key;\n      return query;\n    });\n  };\n\n  const returnToPanel = async ({ withChanges = false } = {}) => {\n    const dashboardSrv = getDashboardSrv();\n    const dash = dashboardSrv.getCurrent();\n    if (!dash) {\n      return;\n    }\n\n    const titleSlug = kbn.slugifyForUrl(dash.title);\n\n    if (withChanges) {\n      setDashboardQueriesToUpdateOnLoad({\n        panelId: originPanelId!,\n        queries: cleanQueries(queries),\n      });\n    }\n\n    const query: any = {};\n\n    if (withChanges || dash.panelInEdit) {\n      query.editPanel = originPanelId;\n    } else if (dash.panelInView) {\n      query.viewPanel = originPanelId;\n    }\n\n    locationService.push(urlUtil.renderUrl(`/d/${dash.uid}/:${titleSlug}`, query));\n  };\n\n  return (\n    <ButtonGroup>\n      <Tooltip content={'Return to panel'} placement=\"bottom\">\n        <ToolbarButton data-testid=\"returnButton\" title={'Return to panel'} onClick={() => returnToPanel()}>\n          <Icon name=\"arrow-left\" />\n        </ToolbarButton>\n      </Tooltip>\n      {canEdit && (\n        <ButtonSelect\n          data-testid=\"returnButtonWithChanges\"\n          options={[{ label: 'Return to panel with changes', value: '' }]}\n          onChange={() => returnToPanel({ withChanges: true })}\n        />\n      )}\n    </ButtonGroup>\n  );\n};\n\nexport default connector(UnconnectedReturnToDashboardButton);\n","// Libraries\nimport React, { PureComponent } from 'react';\nimport { debounce, has } from 'lodash';\nimport { hot } from 'react-hot-loader';\nimport { connect, ConnectedProps } from 'react-redux';\nimport AngularQueryEditor from './QueryEditor';\nimport { QueryRowActions } from './QueryRowActions';\nimport { StoreState } from 'app/types';\nimport { DataQuery, LoadingState, DataSourceApi } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { ExploreItemState, ExploreId } from 'app/types/explore';\nimport { highlightLogsExpressionAction } from './state/explorePane';\nimport { ErrorContainer } from './ErrorContainer';\nimport { changeQuery, modifyQueries, removeQueryRowAction, runQueries } from './state/query';\nimport { HelpToggle } from '../query/components/HelpToggle';\n\ninterface OwnProps {\n  exploreId: ExploreId;\n  index: number;\n}\n\ntype QueryRowProps = OwnProps & ConnectedProps<typeof connector>;\n\ninterface QueryRowState {\n  textEditModeEnabled: boolean;\n}\n\n// Empty function to override blur execution on query field\nconst noopOnBlur = () => {};\n\nexport class QueryRow extends PureComponent<QueryRowProps, QueryRowState> {\n  state: QueryRowState = {\n    textEditModeEnabled: false,\n  };\n\n  onRunQuery = () => {\n    const { exploreId } = this.props;\n    this.props.runQueries(exploreId);\n  };\n\n  onChange = (query: DataQuery, override?: boolean) => {\n    const { datasourceInstance, exploreId, index } = this.props;\n    this.props.changeQuery(exploreId, query, index, override);\n    if (query && !override && datasourceInstance?.getHighlighterExpression && index === 0) {\n      // Live preview of log search matches. Only use on first row for now\n      this.updateLogsHighlights(query);\n    }\n  };\n\n  onClickToggleDisabled = () => {\n    const { exploreId, index, query } = this.props;\n    const newQuery = {\n      ...query,\n      hide: !query.hide,\n    };\n    this.props.changeQuery(exploreId, newQuery, index, true);\n  };\n\n  onClickRemoveButton = () => {\n    const { exploreId, index } = this.props;\n    this.props.removeQueryRowAction({ exploreId, index });\n    this.props.runQueries(exploreId);\n  };\n\n  onClickToggleEditorMode = () => {\n    this.setState({ textEditModeEnabled: !this.state.textEditModeEnabled });\n  };\n\n  setReactQueryEditor = (datasourceInstance: DataSourceApi) => {\n    let QueryEditor;\n    // TODO:unification\n    if (datasourceInstance.components?.ExploreMetricsQueryField) {\n      QueryEditor = datasourceInstance.components.ExploreMetricsQueryField;\n    } else if (datasourceInstance.components?.ExploreLogsQueryField) {\n      QueryEditor = datasourceInstance.components.ExploreLogsQueryField;\n    } else if (datasourceInstance.components?.ExploreQueryField) {\n      QueryEditor = datasourceInstance.components.ExploreQueryField;\n    } else {\n      QueryEditor = datasourceInstance.components?.QueryEditor;\n    }\n    return QueryEditor;\n  };\n\n  renderQueryEditor = (datasourceInstance: DataSourceApi) => {\n    const { history, query, exploreEvents, range, queryResponse, exploreId } = this.props;\n\n    const queryErrors = queryResponse.error && queryResponse.error.refId === query.refId ? [queryResponse.error] : [];\n\n    const ReactQueryEditor = this.setReactQueryEditor(datasourceInstance);\n\n    let QueryEditor: JSX.Element;\n    if (ReactQueryEditor) {\n      QueryEditor = (\n        <ReactQueryEditor\n          datasource={datasourceInstance}\n          query={query}\n          history={history}\n          onRunQuery={this.onRunQuery}\n          onBlur={noopOnBlur}\n          onChange={this.onChange}\n          data={queryResponse}\n          range={range}\n          exploreId={exploreId}\n        />\n      );\n    } else {\n      QueryEditor = (\n        <AngularQueryEditor\n          error={queryErrors}\n          datasource={datasourceInstance}\n          onQueryChange={this.onChange}\n          onExecuteQuery={this.onRunQuery}\n          initialQuery={query}\n          exploreEvents={exploreEvents}\n          range={range}\n          textEditModeEnabled={this.state.textEditModeEnabled}\n        />\n      );\n    }\n\n    const DatasourceCheatsheet = datasourceInstance.components?.QueryEditorHelp;\n    return (\n      <>\n        {QueryEditor}\n        {DatasourceCheatsheet && (\n          <HelpToggle>\n            <DatasourceCheatsheet onClickExample={(query) => this.onChange(query)} datasource={datasourceInstance!} />\n          </HelpToggle>\n        )}\n      </>\n    );\n  };\n\n  updateLogsHighlights = debounce((value: DataQuery) => {\n    const { datasourceInstance } = this.props;\n    if (datasourceInstance?.getHighlighterExpression) {\n      const { exploreId } = this.props;\n      const expressions = datasourceInstance.getHighlighterExpression(value);\n      this.props.highlightLogsExpressionAction({ exploreId, expressions });\n    }\n  }, 500);\n\n  render() {\n    const { datasourceInstance, query, queryResponse, latency } = this.props;\n\n    if (!datasourceInstance) {\n      return <>Loading data source</>;\n    }\n\n    const canToggleEditorModes = has(datasourceInstance, 'components.QueryCtrl.prototype.toggleEditorMode');\n    const isNotStarted = queryResponse.state === LoadingState.NotStarted;\n\n    // We show error without refId in ResponseErrorContainer so this condition needs to match se we don't loose errors.\n    const queryErrors = queryResponse.error && queryResponse.error.refId === query.refId ? [queryResponse.error] : [];\n\n    return (\n      <>\n        <div className=\"query-row\" aria-label={selectors.components.QueryEditorRows.rows}>\n          <div className=\"query-row-field flex-shrink-1\">{this.renderQueryEditor(datasourceInstance)}</div>\n          <QueryRowActions\n            canToggleEditorModes={canToggleEditorModes}\n            isDisabled={query.hide}\n            isNotStarted={isNotStarted}\n            latency={latency}\n            onClickToggleEditorMode={this.onClickToggleEditorMode}\n            onClickToggleDisabled={this.onClickToggleDisabled}\n            onClickRemoveButton={this.onClickRemoveButton}\n          />\n        </div>\n        {queryErrors.length > 0 && <ErrorContainer queryError={queryErrors[0]} />}\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId, index }: OwnProps) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore[exploreId]!;\n  const { datasourceInstance, history, queries, range, absoluteRange, queryResponse, latency, eventBridge } = item;\n  const query = queries[index];\n\n  return {\n    datasourceInstance,\n    history,\n    query,\n    range,\n    absoluteRange,\n    queryResponse,\n    latency,\n    exploreEvents: eventBridge,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeQuery,\n  highlightLogsExpressionAction,\n  modifyQueries,\n  removeQueryRowAction,\n  runQueries,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default hot(module)(connector(QueryRow));\n","import { useEffect, useRef } from 'react';\nvar useInterval = function (callback, delay) {\n    var savedCallback = useRef(function () { });\n    useEffect(function () {\n        savedCallback.current = callback;\n    });\n    useEffect(function () {\n        if (delay !== null) {\n            var interval_1 = setInterval(function () { return savedCallback.current(); }, delay || 0);\n            return function () { return clearInterval(interval_1); };\n        }\n        return undefined;\n    }, [delay]);\n};\nexport default useInterval;\n","import React, { FC } from 'react';\nimport { toDuration } from '@grafana/data';\n\nexport interface TimeProps {\n  timeInMs: number;\n  className?: string;\n  humanize?: boolean;\n}\n\nexport const Time: FC<TimeProps> = ({ timeInMs, className, humanize }) => {\n  return <span className={`elapsed-time ${className}`}>{formatTime(timeInMs, humanize)}</span>;\n};\n\nconst formatTime = (timeInMs: number, humanize = false): string => {\n  const inSeconds = timeInMs / 1000;\n\n  if (!humanize) {\n    return `${inSeconds.toFixed(1)}s`;\n  }\n\n  const duration = toDuration(inSeconds, 'seconds');\n  const hours = duration.hours();\n  const minutes = duration.minutes();\n  const seconds = duration.seconds();\n\n  if (hours) {\n    return `${hours}h ${minutes}m ${seconds}s`;\n  }\n\n  if (minutes) {\n    return `${minutes}m ${seconds}s`;\n  }\n\n  return `${seconds}s`;\n};\n","import React, { FC, useState, useEffect } from 'react';\nimport { useInterval } from 'react-use';\nimport { Time, TimeProps } from './Time';\n\nconst INTERVAL = 150;\n\nexport interface ElapsedTimeProps extends Omit<TimeProps, 'timeInMs'> {\n  // Use this to reset the timer. Any value is allowed just need to be !== from the previous.\n  // Keep in mind things like [] !== [] or {} !== {}.\n  resetKey?: any;\n}\n\nexport const ElapsedTime: FC<ElapsedTimeProps> = ({ resetKey, humanize, className }) => {\n  const [elapsed, setElapsed] = useState(0); // the current value of elapsed\n\n  // hook that will schedule a interval and then update the elapsed value on every tick.\n  useInterval(() => setElapsed(elapsed + INTERVAL), INTERVAL);\n  // this effect will only be run when resetKey changes. This will reset the elapsed to 0.\n  useEffect(() => setElapsed(0), [resetKey]);\n\n  return <Time timeInMs={elapsed} className={className} humanize={humanize} />;\n};\n","import React, { PureComponent } from 'react';\nimport { css, cx } from '@emotion/css';\nimport tinycolor from 'tinycolor2';\n\nimport { LogMessageAnsi, Themeable, withTheme, getLogRowStyles, Icon, Button } from '@grafana/ui';\nimport { GrafanaTheme, LogRowModel, TimeZone, dateTimeFormat } from '@grafana/data';\n\nimport { ElapsedTime } from './ElapsedTime';\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  logsRowsLive: css`\n    label: logs-rows-live;\n    font-family: ${theme.typography.fontFamily.monospace};\n    font-size: ${theme.typography.size.sm};\n    display: flex;\n    flex-flow: column nowrap;\n    height: 60vh;\n    overflow-y: scroll;\n    :first-child {\n      margin-top: auto !important;\n    }\n  `,\n  logsRowFade: css`\n    label: logs-row-fresh;\n    color: ${theme.colors.text};\n    background-color: ${tinycolor(theme.palette.blue95).setAlpha(0.25).toString()};\n    animation: fade 1s ease-out 1s 1 normal forwards;\n    @keyframes fade {\n      from {\n        background-color: ${tinycolor(theme.palette.blue95).setAlpha(0.25).toString()};\n      }\n      to {\n        background-color: transparent;\n      }\n    }\n  `,\n  logsRowsIndicator: css`\n    font-size: ${theme.typography.size.md};\n    padding-top: ${theme.spacing.sm};\n    display: flex;\n    align-items: center;\n  `,\n  button: css`\n    margin-right: ${theme.spacing.sm};\n  `,\n  fullWidth: css`\n    width: 100%;\n  `,\n});\n\nexport interface Props extends Themeable {\n  logRows?: LogRowModel[];\n  timeZone: TimeZone;\n  stopLive: () => void;\n  onPause: () => void;\n  onResume: () => void;\n  isPaused: boolean;\n}\n\ninterface State {\n  logRowsToRender?: LogRowModel[];\n}\n\nclass LiveLogs extends PureComponent<Props, State> {\n  private liveEndDiv: HTMLDivElement | null = null;\n  private scrollContainerRef = React.createRef<HTMLTableSectionElement>();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logRowsToRender: props.logRows,\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps: Props, state: State) {\n    if (!nextProps.isPaused) {\n      return {\n        // We update what we show only if not paused. We keep any background subscriptions running and keep updating\n        // our state, but we do not show the updates, this allows us start again showing correct result after resuming\n        // without creating a gap in the log results.\n        logRowsToRender: nextProps.logRows,\n      };\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Handle pausing when user scrolls up so that we stop resetting his position to the bottom when new row arrives.\n   * We do not need to throttle it here much, adding new rows should be throttled/buffered itself in the query epics\n   * and after you pause we remove the handler and add it after you manually resume, so this should not be fired often.\n   */\n  onScroll = (event: React.SyntheticEvent) => {\n    const { isPaused, onPause } = this.props;\n    const { scrollTop, clientHeight, scrollHeight } = event.currentTarget;\n    const distanceFromBottom = scrollHeight - (scrollTop + clientHeight);\n    if (distanceFromBottom >= 5 && !isPaused) {\n      onPause();\n    }\n  };\n\n  rowsToRender = () => {\n    const { isPaused } = this.props;\n    let { logRowsToRender: rowsToRender = [] } = this.state;\n    if (!isPaused) {\n      // A perf optimisation here. Show just 100 rows when streaming and full length when the streaming is paused.\n      rowsToRender = rowsToRender.slice(-100);\n    }\n    return rowsToRender;\n  };\n\n  render() {\n    const { theme, timeZone, onPause, onResume, isPaused } = this.props;\n    const styles = getStyles(theme);\n    const { logsRow, logsRowLocalTime, logsRowMessage } = getLogRowStyles(theme);\n\n    return (\n      <div>\n        <table className={styles.fullWidth}>\n          <tbody\n            onScroll={isPaused ? undefined : this.onScroll}\n            className={cx(['logs-rows', styles.logsRowsLive])}\n            ref={this.scrollContainerRef}\n          >\n            {this.rowsToRender().map((row: LogRowModel) => {\n              return (\n                <tr className={cx(logsRow, styles.logsRowFade)} key={row.uid}>\n                  <td className={cx(logsRowLocalTime)}>{dateTimeFormat(row.timeEpochMs, { timeZone })}</td>\n                  <td className={cx(logsRowMessage)}>{row.hasAnsi ? <LogMessageAnsi value={row.raw} /> : row.entry}</td>\n                </tr>\n              );\n            })}\n            <tr\n              ref={(element) => {\n                this.liveEndDiv = element;\n                // This is triggered on every update so on every new row. It keeps the view scrolled at the bottom by\n                // default.\n                if (this.liveEndDiv && !isPaused) {\n                  this.scrollContainerRef.current?.scrollTo(0, this.scrollContainerRef.current.scrollHeight);\n                }\n              }}\n            />\n          </tbody>\n        </table>\n        <div className={styles.logsRowsIndicator}>\n          <Button variant=\"secondary\" onClick={isPaused ? onResume : onPause} className={styles.button}>\n            <Icon name={isPaused ? 'play' : 'pause'} />\n            &nbsp;\n            {isPaused ? 'Resume' : 'Pause'}\n          </Button>\n          <Button variant=\"secondary\" onClick={this.props.stopLive} className={styles.button}>\n            <Icon name=\"square-shape\" size=\"lg\" type=\"mono\" />\n            &nbsp; Exit live mode\n          </Button>\n          {isPaused || (\n            <span>\n              Last line received: <ElapsedTime resetKey={this.props.logRows} humanize={true} /> ago\n            </span>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const LiveLogsWithTheme = withTheme(LiveLogs);\n","// Libraries\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { hot } from 'react-hot-loader';\n\n// Services & Utils\nimport store from 'app/core/store';\nimport { RICH_HISTORY_SETTING_KEYS } from 'app/core/utils/richHistory';\n\n// Types\nimport { ExploreItemState, StoreState } from 'app/types';\nimport { ExploreId, RichHistoryQuery } from 'app/types/explore';\n\n// Components, enums\nimport { RichHistory, Tabs } from './RichHistory';\n\n//Actions\nimport { deleteRichHistory } from '../state/history';\nimport { ExploreDrawer } from '../ExploreDrawer';\n\nexport interface Props {\n  width: number;\n  exploreId: ExploreId;\n  activeDatasourceInstance: string;\n  richHistory: RichHistoryQuery[];\n  firstTab: Tabs;\n  deleteRichHistory: typeof deleteRichHistory;\n  onClose: () => void;\n}\n\nexport function RichHistoryContainer(props: Props) {\n  const [height, setHeight] = useState(400);\n\n  const { richHistory, width, firstTab, activeDatasourceInstance, exploreId, deleteRichHistory, onClose } = props;\n\n  return (\n    <ExploreDrawer\n      width={width}\n      onResize={(_e, _dir, ref) => {\n        setHeight(Number(ref.style.height.slice(0, -2)));\n      }}\n    >\n      <RichHistory\n        richHistory={richHistory}\n        firstTab={firstTab}\n        activeDatasourceInstance={activeDatasourceInstance}\n        exploreId={exploreId}\n        deleteRichHistory={deleteRichHistory}\n        onClose={onClose}\n        height={height}\n      />\n    </ExploreDrawer>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const { datasourceInstance } = item;\n  const firstTab = store.getBool(RICH_HISTORY_SETTING_KEYS.starredTabAsFirstTab, false)\n    ? Tabs.Starred\n    : Tabs.RichHistory;\n  const { richHistory } = explore;\n  return {\n    richHistory,\n    firstTab,\n    activeDatasourceInstance: datasourceInstance?.name,\n  };\n}\n\nconst mapDispatchToProps = {\n  deleteRichHistory,\n};\n\nexport default hot(module)(connect(mapStateToProps, mapDispatchToProps)(RichHistoryContainer));\n","import React from 'react';\nimport { TabbedContainer, TabConfig } from '@grafana/ui';\nimport { TimeZone } from '@grafana/data';\nimport { runQueries } from './state/query';\nimport { StoreState, ExploreItemState, ExploreId } from 'app/types';\nimport { hot } from 'react-hot-loader';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { ExploreDrawer } from 'app/features/explore/ExploreDrawer';\nimport { InspectJSONTab } from 'app/features/inspector/InspectJSONTab';\nimport { QueryInspector } from 'app/features/inspector/QueryInspector';\nimport { InspectStatsTab } from 'app/features/inspector/InspectStatsTab';\nimport { InspectDataTab } from 'app/features/inspector/InspectDataTab';\nimport { InspectErrorTab } from 'app/features/inspector/InspectErrorTab';\n\ninterface DispatchProps {\n  width: number;\n  exploreId: ExploreId;\n  onClose: () => void;\n}\n\ntype Props = DispatchProps & ConnectedProps<typeof connector>;\n\nexport function ExploreQueryInspector(props: Props) {\n  const { loading, width, onClose, queryResponse } = props;\n  const dataFrames = queryResponse?.series || [];\n  const error = queryResponse?.error;\n\n  const statsTab: TabConfig = {\n    label: 'Stats',\n    value: 'stats',\n    icon: 'chart-line',\n    content: <InspectStatsTab data={queryResponse!} timeZone={queryResponse?.request?.timezone as TimeZone} />,\n  };\n\n  const jsonTab: TabConfig = {\n    label: 'JSON',\n    value: 'json',\n    icon: 'brackets-curly',\n    content: <InspectJSONTab data={queryResponse} onClose={onClose} />,\n  };\n\n  const dataTab: TabConfig = {\n    label: 'Data',\n    value: 'data',\n    icon: 'database',\n    content: (\n      <InspectDataTab\n        data={dataFrames}\n        isLoading={loading}\n        options={{ withTransforms: false, withFieldConfig: false }}\n      />\n    ),\n  };\n\n  const queryTab: TabConfig = {\n    label: 'Query',\n    value: 'query',\n    icon: 'info-circle',\n    content: <QueryInspector data={dataFrames} onRefreshQuery={() => props.runQueries(props.exploreId)} />,\n  };\n\n  const tabs = [statsTab, queryTab, jsonTab, dataTab];\n  if (error) {\n    const errorTab: TabConfig = {\n      label: 'Error',\n      value: 'error',\n      icon: 'exclamation-triangle',\n      content: <InspectErrorTab error={error} />,\n    };\n    tabs.push(errorTab);\n  }\n  return (\n    <ExploreDrawer width={width} onResize={() => {}}>\n      <TabbedContainer tabs={tabs} onClose={onClose} closeIconTooltip=\"Close query inspector\" />\n    </ExploreDrawer>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore[exploreId]!;\n  const { loading, queryResponse } = item;\n\n  return {\n    loading,\n    queryResponse,\n  };\n}\n\nconst mapDispatchToProps = {\n  runQueries,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default hot(module)(connector(ExploreQueryInspector));\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar styles = {\n    top: {\n        width: '100%',\n        height: '10px',\n        top: '-5px',\n        left: '0px',\n        cursor: 'row-resize',\n    },\n    right: {\n        width: '10px',\n        height: '100%',\n        top: '0px',\n        right: '-5px',\n        cursor: 'col-resize',\n    },\n    bottom: {\n        width: '100%',\n        height: '10px',\n        bottom: '-5px',\n        left: '0px',\n        cursor: 'row-resize',\n    },\n    left: {\n        width: '10px',\n        height: '100%',\n        top: '0px',\n        left: '-5px',\n        cursor: 'col-resize',\n    },\n    topRight: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        right: '-10px',\n        top: '-10px',\n        cursor: 'ne-resize',\n    },\n    bottomRight: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        right: '-10px',\n        bottom: '-10px',\n        cursor: 'se-resize',\n    },\n    bottomLeft: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        left: '-10px',\n        bottom: '-10px',\n        cursor: 'sw-resize',\n    },\n    topLeft: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        left: '-10px',\n        top: '-10px',\n        cursor: 'nw-resize',\n    },\n};\nvar Resizer = /** @class */ (function (_super) {\n    __extends(Resizer, _super);\n    function Resizer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.onMouseDown = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        _this.onTouchStart = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        return _this;\n    }\n    Resizer.prototype.render = function () {\n        return (React.createElement(\"div\", { className: this.props.className || '', style: __assign(__assign({ position: 'absolute', userSelect: 'none' }, styles[this.props.direction]), (this.props.replaceStyles || {})), onMouseDown: this.onMouseDown, onTouchStart: this.onTouchStart }, this.props.children));\n    };\n    return Resizer;\n}(React.PureComponent));\nexports.Resizer = Resizer;\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { RefreshPicker } from '@grafana/ui';\n\nimport { changeRefreshInterval } from './state/time';\nimport { setPausedStateAction, runQueries } from './state/query';\nimport { ExploreId } from '../../types';\n\n/**\n * Hook that gives you all the functions needed to control the live tailing.\n */\nexport function useLiveTailControls(exploreId: ExploreId) {\n  const dispatch = useDispatch();\n\n  const pause = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: true }));\n  }, [exploreId, dispatch]);\n\n  const resume = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: false }));\n  }, [exploreId, dispatch]);\n\n  const stop = useCallback(() => {\n    // We need to pause here first because there is transition where we are not live but live logs are still shown\n    // to cross fade with the normal view. This will prevent reordering of the logs in the live view during the\n    // transition.\n    pause();\n\n    // TODO referencing this from perspective of refresh picker when there is designated button for it now is not\n    //  great. Needs a bit of refactoring.\n    dispatch(changeRefreshInterval(exploreId, RefreshPicker.offOption.value));\n    dispatch(runQueries(exploreId));\n  }, [exploreId, dispatch, pause]);\n\n  const start = useCallback(() => {\n    dispatch(changeRefreshInterval(exploreId, RefreshPicker.liveOption.value));\n  }, [exploreId, dispatch]);\n\n  return {\n    pause,\n    resume,\n    stop,\n    start,\n  };\n}\n\ntype Props = {\n  exploreId: ExploreId;\n  children: (controls: ReturnType<typeof useLiveTailControls>) => React.ReactElement;\n};\n\n/**\n * If you can't use the hook you can use this as a render prop pattern.\n */\nexport function LiveTailControls(props: Props) {\n  const controls = useLiveTailControls(props.exploreId);\n  return props.children(controls);\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ExploreId, StoreState } from '../../types';\nimport { LoadingState } from '@grafana/data';\nimport { ErrorContainer } from './ErrorContainer';\n\ninterface Props {\n  exploreId: ExploreId;\n}\nexport function ResponseErrorContainer(props: Props) {\n  const queryResponse = useSelector((state: StoreState) => state.explore[props.exploreId]?.queryResponse);\n\n  // Only show error if it does not have refId. Otherwise let query row to handle it so this condition has to be matched\n  // with QueryRow.tsx so we don't loose errors.\n  const queryError =\n    queryResponse?.state === LoadingState.Error && queryResponse?.error && !queryResponse.error.refId\n      ? queryResponse.error\n      : undefined;\n\n  return <ErrorContainer queryError={queryError} />;\n}\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { LinkButton, CallToActionCard, Icon, useTheme } from '@grafana/ui';\n\nexport const NoDataSourceCallToAction = () => {\n  const theme = useTheme();\n\n  const message =\n    'Explore requires at least one data source. Once you have added a data source, you can query it here.';\n  const footer = (\n    <>\n      <Icon name=\"rocket\" />\n      <> ProTip: You can also define data sources through configuration files. </>\n      <a\n        href=\"http://docs.grafana.org/administration/provisioning/#datasources?utm_source=explore\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"text-link\"\n      >\n        Learn more\n      </a>\n    </>\n  );\n\n  const ctaElement = (\n    <LinkButton size=\"lg\" href=\"datasources/new\" icon=\"database\">\n      Add data source\n    </LinkButton>\n  );\n\n  const cardClassName = css`\n    max-width: ${theme.breakpoints.lg};\n    margin-top: ${theme.spacing.md};\n    align-self: center;\n  `;\n\n  return (\n    <CallToActionCard callToActionElement={ctaElement} className={cardClassName} footer={footer} message={message} />\n  );\n};\n","import { DataLink, dateTime, Field, mapInternalLinkToExplore, rangeUtil, TimeRange } from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { Icon } from '@grafana/ui';\nimport { TraceSpan } from '@jaegertracing/jaeger-ui-components';\nimport { TraceToLogsOptions } from 'app/core/components/TraceToLogsSettings';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport { SplitOpen } from 'app/types/explore';\nimport React from 'react';\nimport { LokiQuery } from '../../../plugins/datasource/loki/types';\n\n/**\n * This is a factory for the link creator. It returns the function mainly so it can return undefined in which case\n * the trace view won't create any links and to capture the datasource and split function making it easier to memoize\n * with useMemo.\n */\nexport function createSpanLinkFactory(splitOpenFn: SplitOpen, traceToLogsOptions?: TraceToLogsOptions) {\n  // We should return if dataSourceUid is undefined otherwise getInstanceSettings would return testDataSource.\n  if (!traceToLogsOptions?.datasourceUid) {\n    return undefined;\n  }\n\n  const dataSourceSettings = getDatasourceSrv().getInstanceSettings(traceToLogsOptions.datasourceUid);\n\n  if (!dataSourceSettings) {\n    return undefined;\n  }\n\n  return function (span: TraceSpan): { href: string; onClick?: (event: any) => void; content: React.ReactNode } {\n    // This is reusing existing code from derived fields which may not be ideal match so some data is a bit faked at\n    // the moment. Issue is that the trace itself isn't clearly mapped to dataFrame (right now it's just a json blob\n    // inside a single field) so the dataLinks as config of that dataFrame abstraction breaks down a bit and we do\n    // it manually here instead of leaving it for the data source to supply the config.\n\n    const dataLink: DataLink<LokiQuery> = {\n      title: dataSourceSettings.name,\n      url: '',\n      internal: {\n        datasourceUid: dataSourceSettings.uid,\n        datasourceName: dataSourceSettings.name,\n        query: {\n          expr: getLokiQueryFromSpan(span, traceToLogsOptions.tags),\n          refId: '',\n        },\n      },\n    };\n\n    const link = mapInternalLinkToExplore({\n      link: dataLink,\n      internalLink: dataLink.internal!,\n      scopedVars: {},\n      range: getTimeRangeFromSpan(span, traceToLogsOptions),\n      field: {} as Field,\n      onClickFn: splitOpenFn,\n      replaceVariables: getTemplateSrv().replace.bind(getTemplateSrv()),\n    });\n\n    return {\n      href: link.href,\n      onClick: link.onClick,\n      content: <Icon name=\"gf-logs\" title=\"Explore the logs for this in split view\" />,\n    };\n  };\n}\n\n/**\n * Default keys to use when there are no configured tags.\n */\nconst defaultKeys = ['cluster', 'hostname', 'namespace', 'pod'];\n\nfunction getLokiQueryFromSpan(span: TraceSpan, keys?: string[]): string {\n  const keysToCheck = keys?.length ? keys : defaultKeys;\n  const tags = [...span.process.tags, ...span.tags].reduce((acc, tag) => {\n    if (keysToCheck.includes(tag.key)) {\n      acc.push(`${tag.key}=\"${tag.value}\"`);\n    }\n    return acc;\n  }, [] as string[]);\n  return `{${tags.join(', ')}}`;\n}\n\n/**\n * Gets a time range from the span.\n */\nfunction getTimeRangeFromSpan(span: TraceSpan, traceToLogsOptions?: TraceToLogsOptions): TimeRange {\n  const adjustedStartTime = traceToLogsOptions?.spanStartTimeShift\n    ? Math.floor(span.startTime / 1000 + rangeUtil.intervalToMs(traceToLogsOptions.spanStartTimeShift))\n    : Math.floor(span.startTime / 1000);\n  const from = dateTime(adjustedStartTime);\n  const spanEndMs = (span.startTime + span.duration) / 1000;\n  let adjustedEndTime = traceToLogsOptions?.spanEndTimeShift\n    ? Math.floor(spanEndMs + rangeUtil.intervalToMs(traceToLogsOptions.spanEndTimeShift))\n    : Math.floor(spanEndMs);\n\n  // Because we can only pass milliseconds in the url we need to check if they equal.\n  // We need end time to be later than start time\n  if (adjustedStartTime === adjustedEndTime) {\n    adjustedEndTime++;\n  }\n  const to = dateTime(adjustedEndTime);\n\n  // Beware that public/app/features/explore/state/main.ts SplitOpen fn uses the range from here. No matter what is in the url.\n  return {\n    from,\n    to,\n    raw: {\n      from,\n      to,\n    },\n  };\n}\n","import { GrafanaTheme } from '@grafana/data';\nimport {\n  Button,\n  Input,\n  Popover,\n  PopoverController,\n  stylesFactory,\n  Tooltip as GrafanaTooltip,\n  useTheme,\n} from '@grafana/ui';\nimport { ButtonProps, Elements, PopoverProps, TooltipProps } from '@jaegertracing/jaeger-ui-components';\nimport cx from 'classnames';\nimport { css } from '@emotion/css';\nimport React, { useRef } from 'react';\n\n/**\n * Right now Jaeger components need some UI elements to be injected. This is to get rid of AntD UI library that was\n * used by default.\n */\n\n// This needs to be static to prevent remounting on every render.\nexport const UIElements: Elements = {\n  Popover({ children, content, overlayClassName }: PopoverProps) {\n    const popoverRef = useRef<HTMLElement>(null);\n\n    return (\n      <PopoverController content={content} hideAfter={300}>\n        {(showPopper, hidePopper, popperProps) => {\n          return (\n            <>\n              {popoverRef.current && (\n                <Popover\n                  {...popperProps}\n                  referenceElement={popoverRef.current}\n                  wrapperClassName={overlayClassName}\n                  onMouseLeave={hidePopper}\n                  onMouseEnter={showPopper}\n                />\n              )}\n\n              {React.cloneElement(children, {\n                ref: popoverRef,\n                onMouseEnter: showPopper,\n                onMouseLeave: hidePopper,\n              })}\n            </>\n          );\n        }}\n      </PopoverController>\n    );\n  },\n  Tooltip({ children, title }: TooltipProps) {\n    return <GrafanaTooltip content={title}>{children}</GrafanaTooltip>;\n  },\n  Icon: (() => null as any) as any,\n  Dropdown: (() => null as any) as any,\n  Menu: (() => null as any) as any,\n  MenuItem: (() => null as any) as any,\n  Button({ onClick, children, className }: ButtonProps) {\n    return (\n      <Button variant=\"secondary\" onClick={onClick} className={className}>\n        {children}\n      </Button>\n    );\n  },\n  Divider,\n  Input(props) {\n    return <Input {...props} />;\n  },\n  InputGroup({ children, className, style }) {\n    return (\n      <span className={className} style={style}>\n        {children}\n      </span>\n    );\n  },\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    Divider: css`\n      display: inline-block;\n      background: ${theme.isDark ? '#242424' : '#e8e8e8'};\n      width: 1px;\n      height: 0.9em;\n      margin: 0 8px;\n      vertical-align: middle;\n    `,\n  };\n});\n\nfunction Divider({ className }: { className?: string }) {\n  const styles = getStyles(useTheme());\n  return <div style={{}} className={cx(styles.Divider, className)} />;\n}\n","import { useCallback, useState } from 'react';\nimport { TraceSpan } from '@jaegertracing/jaeger-ui-components';\n\n/**\n * Children state means whether spans are collapsed or not. Also provides some functions to manipulate that state.\n */\nexport function useChildrenState() {\n  const [childrenHiddenIDs, setChildrenHiddenIDs] = useState(new Set<string>());\n\n  const expandOne = useCallback(\n    function expandOne(spans: TraceSpan[]) {\n      if (childrenHiddenIDs.size === 0) {\n        return;\n      }\n      let prevExpandedDepth = -1;\n      let expandNextHiddenSpan = true;\n      const newChildrenHiddenIDs = spans.reduce((res, s) => {\n        if (s.depth <= prevExpandedDepth) {\n          expandNextHiddenSpan = true;\n        }\n        if (expandNextHiddenSpan && res.has(s.spanID)) {\n          res.delete(s.spanID);\n          expandNextHiddenSpan = false;\n          prevExpandedDepth = s.depth;\n        }\n        return res;\n      }, new Set(childrenHiddenIDs));\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  const collapseOne = useCallback(\n    function collapseOne(spans: TraceSpan[]) {\n      if (shouldDisableCollapse(spans, childrenHiddenIDs)) {\n        return;\n      }\n      let nearestCollapsedAncestor: TraceSpan | undefined;\n      const newChildrenHiddenIDs = spans.reduce((res, curSpan) => {\n        if (nearestCollapsedAncestor && curSpan.depth <= nearestCollapsedAncestor.depth) {\n          res.add(nearestCollapsedAncestor.spanID);\n          if (curSpan.hasChildren) {\n            nearestCollapsedAncestor = curSpan;\n          }\n        } else if (curSpan.hasChildren && !res.has(curSpan.spanID)) {\n          nearestCollapsedAncestor = curSpan;\n        }\n        return res;\n      }, new Set(childrenHiddenIDs));\n      // The last one\n      if (nearestCollapsedAncestor) {\n        newChildrenHiddenIDs.add(nearestCollapsedAncestor.spanID);\n      }\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  const expandAll = useCallback(function expandAll() {\n    setChildrenHiddenIDs(new Set<string>());\n  }, []);\n\n  const collapseAll = useCallback(\n    function collapseAll(spans: TraceSpan[]) {\n      if (shouldDisableCollapse(spans, childrenHiddenIDs)) {\n        return;\n      }\n      const newChildrenHiddenIDs = spans.reduce((res, s) => {\n        if (s.hasChildren) {\n          res.add(s.spanID);\n        }\n        return res;\n      }, new Set<string>());\n\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  const childrenToggle = useCallback(\n    function childrenToggle(spanID: string) {\n      const newChildrenHiddenIDs = new Set(childrenHiddenIDs);\n      if (childrenHiddenIDs.has(spanID)) {\n        newChildrenHiddenIDs.delete(spanID);\n      } else {\n        newChildrenHiddenIDs.add(spanID);\n      }\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  return {\n    childrenHiddenIDs,\n    expandOne,\n    collapseOne,\n    expandAll,\n    collapseAll,\n    childrenToggle,\n  };\n}\n\nfunction shouldDisableCollapse(allSpans: TraceSpan[], hiddenSpansIds: Set<string>) {\n  const allParentSpans = allSpans.filter((s) => s.hasChildren);\n  return allParentSpans.length === hiddenSpansIds.size;\n}\n","import { useCallback, useState } from 'react';\nimport { DetailState } from '@jaegertracing/jaeger-ui-components';\nimport { TraceLog } from '@jaegertracing/jaeger-ui-components/src/types/trace';\n\n/**\n * Keeps state of the span detail. This means whether span details are open but also state of each detail subitem\n * like logs or tags.\n */\nexport function useDetailState() {\n  const [detailStates, setDetailStates] = useState(new Map<string, DetailState>());\n\n  const toggleDetail = useCallback(\n    function toggleDetail(spanID: string) {\n      const newDetailStates = new Map(detailStates);\n      if (newDetailStates.has(spanID)) {\n        newDetailStates.delete(spanID);\n      } else {\n        newDetailStates.set(spanID, new DetailState());\n      }\n      setDetailStates(newDetailStates);\n    },\n    [detailStates]\n  );\n\n  const detailLogItemToggle = useCallback(\n    function detailLogItemToggle(spanID: string, log: TraceLog) {\n      const old = detailStates.get(spanID);\n      if (!old) {\n        return;\n      }\n      const detailState = old.toggleLogItem(log);\n      const newDetailStates = new Map(detailStates);\n      newDetailStates.set(spanID, detailState);\n      return setDetailStates(newDetailStates);\n    },\n    [detailStates]\n  );\n\n  return {\n    detailStates,\n    toggleDetail,\n    detailLogItemToggle,\n    detailLogsToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('logs', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailWarningsToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('warnings', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailStackTracesToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('stackTraces', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailReferencesToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('references', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailProcessToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('process', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailTagsToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('tags', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n  };\n}\n\nfunction makeDetailSubsectionToggle(\n  subSection: 'tags' | 'process' | 'logs' | 'warnings' | 'references' | 'stackTraces',\n  detailStates: Map<string, DetailState>,\n  setDetailStates: (detailStates: Map<string, DetailState>) => void\n) {\n  return (spanID: string) => {\n    const old = detailStates.get(spanID);\n    if (!old) {\n      return;\n    }\n    let detailState;\n    if (subSection === 'tags') {\n      detailState = old.toggleTags();\n    } else if (subSection === 'process') {\n      detailState = old.toggleProcess();\n    } else if (subSection === 'warnings') {\n      detailState = old.toggleWarnings();\n    } else if (subSection === 'references') {\n      detailState = old.toggleReferences();\n    } else if (subSection === 'stackTraces') {\n      detailState = old.toggleStackTraces();\n    } else {\n      detailState = old.toggleLogs();\n    }\n    const newDetailStates = new Map(detailStates);\n    newDetailStates.set(spanID, detailState);\n    setDetailStates(newDetailStates);\n  };\n}\n","import { DataFrame, DataFrameView, TraceSpanRow } from '@grafana/data';\nimport { colors, useTheme } from '@grafana/ui';\nimport {\n  ThemeOptions,\n  ThemeProvider,\n  ThemeType,\n  Trace,\n  TracePageHeader,\n  TraceProcess,\n  TraceResponse,\n  TraceTimelineViewer,\n  transformTraceData,\n  TTraceTimeline,\n  UIElementsContext,\n} from '@jaegertracing/jaeger-ui-components';\nimport { TraceToLogsData } from 'app/core/components/TraceToLogsSettings';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport { getTimeZone } from 'app/features/profile/state/selectors';\nimport { StoreState } from 'app/types';\nimport { ExploreId, SplitOpen } from 'app/types/explore';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { createSpanLinkFactory } from './createSpanLink';\nimport { UIElements } from './uiElements';\nimport { useChildrenState } from './useChildrenState';\nimport { useDetailState } from './useDetailState';\nimport { useHoverIndentGuide } from './useHoverIndentGuide';\nimport { useSearch } from './useSearch';\nimport { useViewRange } from './useViewRange';\n\nfunction noop(): {} {\n  return {};\n}\n\ntype Props = {\n  dataFrames: DataFrame[];\n  splitOpenFn: SplitOpen;\n  exploreId: ExploreId;\n};\n\nexport function TraceView(props: Props) {\n  const { expandOne, collapseOne, childrenToggle, collapseAll, childrenHiddenIDs, expandAll } = useChildrenState();\n  const {\n    detailStates,\n    toggleDetail,\n    detailLogItemToggle,\n    detailLogsToggle,\n    detailProcessToggle,\n    detailReferencesToggle,\n    detailTagsToggle,\n    detailWarningsToggle,\n    detailStackTracesToggle,\n  } = useDetailState();\n  const { removeHoverIndentGuideId, addHoverIndentGuideId, hoverIndentGuideIds } = useHoverIndentGuide();\n  const { viewRange, updateViewRangeTime, updateNextViewRangeTime } = useViewRange();\n\n  /**\n   * Keeps state of resizable name column width\n   */\n  const [spanNameColumnWidth, setSpanNameColumnWidth] = useState(0.25);\n  /**\n   * State of the top minimap, slim means it is collapsed.\n   */\n  const [slim, setSlim] = useState(false);\n\n  const traceProp = useMemo(() => transformDataFrames(props.dataFrames), [props.dataFrames]);\n  const { search, setSearch, spanFindMatches } = useSearch(traceProp?.spans);\n  const dataSourceName = useSelector((state: StoreState) => state.explore[props.exploreId]?.datasourceInstance?.name);\n  const traceToLogsOptions = (getDatasourceSrv().getInstanceSettings(dataSourceName)?.jsonData as TraceToLogsData)\n    ?.tracesToLogs;\n  const timeZone = useSelector((state: StoreState) => getTimeZone(state.user));\n\n  const theme = useTheme();\n  const traceTheme = useMemo(\n    () =>\n      ({\n        type: theme.isDark ? ThemeType.Dark : ThemeType.Light,\n        servicesColorPalette: colors,\n        components: {\n          TraceName: {\n            fontSize: theme.typography.size.lg,\n          },\n        },\n      } as ThemeOptions),\n    [theme]\n  );\n\n  const traceTimeline: TTraceTimeline = useMemo(\n    () => ({\n      childrenHiddenIDs,\n      detailStates,\n      hoverIndentGuideIds,\n      shouldScrollToFirstUiFindMatch: false,\n      spanNameColumnWidth,\n      traceID: traceProp?.traceID,\n    }),\n    [childrenHiddenIDs, detailStates, hoverIndentGuideIds, spanNameColumnWidth, traceProp?.traceID]\n  );\n\n  const createSpanLink = useMemo(() => createSpanLinkFactory(props.splitOpenFn, traceToLogsOptions), [\n    props.splitOpenFn,\n    traceToLogsOptions,\n  ]);\n  const scrollElement = document.getElementsByClassName('scrollbar-view')[0];\n  const onSlimViewClicked = useCallback(() => setSlim(!slim), [slim]);\n\n  if (!props.dataFrames?.length || !traceProp) {\n    return null;\n  }\n\n  return (\n    <ThemeProvider value={traceTheme}>\n      <UIElementsContext.Provider value={UIElements}>\n        <TracePageHeader\n          canCollapse={false}\n          clearSearch={noop}\n          focusUiFindMatches={noop}\n          hideMap={false}\n          hideSummary={false}\n          nextResult={noop}\n          onSlimViewClicked={onSlimViewClicked}\n          onTraceGraphViewClicked={noop}\n          prevResult={noop}\n          resultCount={0}\n          slimView={slim}\n          textFilter={null}\n          trace={traceProp}\n          traceGraphView={false}\n          updateNextViewRangeTime={updateNextViewRangeTime}\n          updateViewRangeTime={updateViewRangeTime}\n          viewRange={viewRange}\n          searchValue={search}\n          onSearchValueChange={setSearch}\n          hideSearchButtons={true}\n          timeZone={timeZone}\n        />\n        <TraceTimelineViewer\n          registerAccessors={noop}\n          scrollToFirstVisibleSpan={noop}\n          findMatchesIDs={spanFindMatches}\n          trace={traceProp}\n          traceTimeline={traceTimeline}\n          updateNextViewRangeTime={updateNextViewRangeTime}\n          updateViewRangeTime={updateViewRangeTime}\n          viewRange={viewRange}\n          focusSpan={noop}\n          createLinkToExternalSpan={noop as any}\n          setSpanNameColumnWidth={setSpanNameColumnWidth}\n          collapseAll={collapseAll}\n          collapseOne={collapseOne}\n          expandAll={expandAll}\n          expandOne={expandOne}\n          childrenToggle={childrenToggle}\n          clearShouldScrollToFirstUiFindMatch={noop}\n          detailLogItemToggle={detailLogItemToggle}\n          detailLogsToggle={detailLogsToggle}\n          detailWarningsToggle={detailWarningsToggle}\n          detailStackTracesToggle={detailStackTracesToggle}\n          detailReferencesToggle={detailReferencesToggle}\n          detailProcessToggle={detailProcessToggle}\n          detailTagsToggle={detailTagsToggle}\n          detailToggle={toggleDetail}\n          setTrace={noop}\n          addHoverIndentGuideId={addHoverIndentGuideId}\n          removeHoverIndentGuideId={removeHoverIndentGuideId}\n          linksGetter={noop as any}\n          uiFind={search}\n          createSpanLink={createSpanLink}\n          scrollElement={scrollElement}\n        />\n      </UIElementsContext.Provider>\n    </ThemeProvider>\n  );\n}\n\nfunction transformDataFrames(frames: DataFrame[]): Trace | null {\n  // At this point we only show single trace.\n  const frame = frames[0];\n  if (!frame) {\n    return null;\n  }\n  let data: TraceResponse =\n    frame.fields.length === 1\n      ? // For backward compatibility when we sent whole json response in a single field/value\n        frame.fields[0].values.get(0)\n      : transformTraceDataFrame(frame);\n  return transformTraceData(data);\n}\n\nfunction transformTraceDataFrame(frame: DataFrame): TraceResponse {\n  const view = new DataFrameView<TraceSpanRow>(frame);\n  const processes: Record<string, TraceProcess> = {};\n  for (let i = 0; i < view.length; i++) {\n    const span = view.get(i);\n    if (!processes[span.serviceName]) {\n      processes[span.serviceName] = {\n        serviceName: span.serviceName,\n        tags: span.serviceTags,\n      };\n    }\n  }\n\n  return {\n    traceID: view.get(0).traceID,\n    processes,\n    spans: view.toArray().map((s) => {\n      return {\n        ...s,\n        duration: s.duration * 1000,\n        startTime: s.startTime * 1000,\n        processID: s.serviceName,\n        flags: 0,\n        references: s.parentSpanID ? [{ refType: 'CHILD_OF', spanID: s.parentSpanID, traceID: s.traceID }] : undefined,\n        logs: s.logs?.map((l) => ({ ...l, timestamp: l.timestamp * 1000 })) || [],\n      };\n    }),\n  };\n}\n","import { useCallback, useState } from 'react';\n\n/**\n * This is used internally to handle hover state of indent guide. As indent guides are separate\n * components per each row/span and you need to highlight all in multiple rows to make the effect of single line\n * they need this kind of common imperative state changes.\n *\n * Ideally would be changed to trace view internal state.\n */\nexport function useHoverIndentGuide() {\n  const [hoverIndentGuideIds, setHoverIndentGuideIds] = useState(new Set<string>());\n\n  const addHoverIndentGuideId = useCallback(function addHoverIndentGuideId(spanID: string) {\n    setHoverIndentGuideIds((prevState) => {\n      const newHoverIndentGuideIds = new Set(prevState);\n      newHoverIndentGuideIds.add(spanID);\n      return newHoverIndentGuideIds;\n    });\n  }, []);\n\n  const removeHoverIndentGuideId = useCallback(function removeHoverIndentGuideId(spanID: string) {\n    setHoverIndentGuideIds((prevState) => {\n      const newHoverIndentGuideIds = new Set(prevState);\n      newHoverIndentGuideIds.delete(spanID);\n      return newHoverIndentGuideIds;\n    });\n  }, []);\n\n  return { hoverIndentGuideIds, addHoverIndentGuideId, removeHoverIndentGuideId };\n}\n","import { useCallback, useState } from 'react';\nimport { ViewRangeTimeUpdate, ViewRange } from '@jaegertracing/jaeger-ui-components';\n\n/**\n * Controls state of the zoom function that can be used through minimap in header or on the timeline. ViewRange contains\n * state not only for current range that is showing but range that is currently being selected by the user.\n */\nexport function useViewRange() {\n  const [viewRange, setViewRange] = useState<ViewRange>({\n    time: {\n      current: [0, 1],\n    },\n  });\n\n  const updateNextViewRangeTime = useCallback(function updateNextViewRangeTime(update: ViewRangeTimeUpdate) {\n    setViewRange(\n      (prevRange): ViewRange => {\n        const time = { ...prevRange.time, ...update };\n        return { ...prevRange, time };\n      }\n    );\n  }, []);\n\n  const updateViewRangeTime = useCallback(function updateViewRangeTime(start: number, end: number) {\n    const current: [number, number] = [start, end];\n    const time = { current };\n    setViewRange(\n      (prevRange): ViewRange => {\n        return { ...prevRange, time };\n      }\n    );\n  }, []);\n\n  return { viewRange, updateViewRangeTime, updateNextViewRangeTime };\n}\n","import { useMemo, useState } from 'react';\nimport { filterSpans, TraceSpan } from '@jaegertracing/jaeger-ui-components';\n\n/**\n * Controls the state of search input that highlights spans if they match the search string.\n * @param spans\n */\nexport function useSearch(spans?: TraceSpan[]) {\n  const [search, setSearch] = useState('');\n  const spanFindMatches: Set<string> | undefined | null = useMemo(() => {\n    return search && spans ? filterSpans(search, spans) : undefined;\n  }, [search, spans]);\n\n  return { search, setSearch, spanFindMatches };\n}\n","import React from 'react';\nimport { Collapse } from '@grafana/ui';\nimport { DataFrame } from '@grafana/data';\nimport { TraceView } from './TraceView';\nimport { ExploreId, SplitOpen } from '../../../types';\n\ninterface Props {\n  dataFrames: DataFrame[];\n  splitOpenFn: SplitOpen;\n  exploreId: ExploreId;\n}\nexport function TraceViewContainer(props: Props) {\n  const { dataFrames, splitOpenFn, exploreId } = props;\n\n  return (\n    <Collapse label=\"Trace View\" isOpen>\n      <TraceView exploreId={exploreId} dataFrames={dataFrames} splitOpenFn={splitOpenFn} />\n    </Collapse>\n  );\n}\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar resizer_1 = require(\"./resizer\");\nvar fast_memoize_1 = __importDefault(require(\"fast-memoize\"));\nvar DEFAULT_SIZE = {\n    width: 'auto',\n    height: 'auto',\n};\nvar clamp = fast_memoize_1.default(function (n, min, max) { return Math.max(Math.min(n, max), min); });\nvar snap = fast_memoize_1.default(function (n, size) { return Math.round(n / size) * size; });\nvar hasDirection = fast_memoize_1.default(function (dir, target) {\n    return new RegExp(dir, 'i').test(target);\n});\nvar findClosestSnap = fast_memoize_1.default(function (n, snapArray, snapGap) {\n    if (snapGap === void 0) { snapGap = 0; }\n    var closestGapIndex = snapArray.reduce(function (prev, curr, index) { return (Math.abs(curr - n) < Math.abs(snapArray[prev] - n) ? index : prev); }, 0);\n    var gap = Math.abs(snapArray[closestGapIndex] - n);\n    return snapGap === 0 || gap < snapGap ? snapArray[closestGapIndex] : n;\n});\nvar endsWith = fast_memoize_1.default(function (str, searchStr) {\n    return str.substr(str.length - searchStr.length, searchStr.length) === searchStr;\n});\nvar getStringSize = fast_memoize_1.default(function (n) {\n    n = n.toString();\n    if (n === 'auto') {\n        return n;\n    }\n    if (endsWith(n, 'px')) {\n        return n;\n    }\n    if (endsWith(n, '%')) {\n        return n;\n    }\n    if (endsWith(n, 'vh')) {\n        return n;\n    }\n    if (endsWith(n, 'vw')) {\n        return n;\n    }\n    if (endsWith(n, 'vmax')) {\n        return n;\n    }\n    if (endsWith(n, 'vmin')) {\n        return n;\n    }\n    return n + \"px\";\n});\nvar getPixelSize = function (size, parentSize) {\n    if (size && typeof size === 'string') {\n        if (endsWith(size, '%')) {\n            var ratio = Number(size.replace('%', '')) / 100;\n            return parentSize * ratio;\n        }\n        else if (endsWith(size, 'vw')) {\n            var ratio = Number(size.replace('vw', '')) / 100;\n            return window.innerWidth * ratio;\n        }\n        else if (endsWith(size, 'vh')) {\n            var ratio = Number(size.replace('vh', '')) / 100;\n            return window.innerHeight * ratio;\n        }\n    }\n    return size;\n};\nvar calculateNewMax = fast_memoize_1.default(function (parentSize, maxWidth, maxHeight, minWidth, minHeight) {\n    maxWidth = getPixelSize(maxWidth, parentSize.width);\n    maxHeight = getPixelSize(maxHeight, parentSize.height);\n    minWidth = getPixelSize(minWidth, parentSize.width);\n    minHeight = getPixelSize(minHeight, parentSize.height);\n    return {\n        maxWidth: typeof maxWidth === 'undefined' ? undefined : Number(maxWidth),\n        maxHeight: typeof maxHeight === 'undefined' ? undefined : Number(maxHeight),\n        minWidth: typeof minWidth === 'undefined' ? undefined : Number(minWidth),\n        minHeight: typeof minHeight === 'undefined' ? undefined : Number(minHeight),\n    };\n});\nvar definedProps = [\n    'style',\n    'className',\n    'grid',\n    'snap',\n    'bounds',\n    'size',\n    'defaultSize',\n    'minWidth',\n    'minHeight',\n    'maxWidth',\n    'maxHeight',\n    'lockAspectRatio',\n    'lockAspectRatioExtraWidth',\n    'lockAspectRatioExtraHeight',\n    'enable',\n    'handleStyles',\n    'handleClasses',\n    'handleWrapperStyle',\n    'handleWrapperClass',\n    'children',\n    'onResizeStart',\n    'onResize',\n    'onResizeStop',\n    'handleComponent',\n    'scale',\n    'resizeRatio',\n    'snapGap',\n];\n// HACK: This class is used to calculate % size.\nvar baseClassName = '__resizable_base__';\nvar Resizable = /** @class */ (function (_super) {\n    __extends(Resizable, _super);\n    function Resizable(props) {\n        var _this = _super.call(this, props) || this;\n        _this.ratio = 1;\n        _this.resizable = null;\n        // For parent boundary\n        _this.parentLeft = 0;\n        _this.parentTop = 0;\n        // For boundary\n        _this.resizableLeft = 0;\n        _this.resizableTop = 0;\n        // For target boundary\n        _this.targetLeft = 0;\n        _this.targetTop = 0;\n        _this.ref = function (c) {\n            if (c) {\n                _this.resizable = c;\n            }\n        };\n        _this.state = {\n            isResizing: false,\n            width: typeof (_this.propsSize && _this.propsSize.width) === 'undefined'\n                ? 'auto'\n                : _this.propsSize && _this.propsSize.width,\n            height: typeof (_this.propsSize && _this.propsSize.height) === 'undefined'\n                ? 'auto'\n                : _this.propsSize && _this.propsSize.height,\n            direction: 'right',\n            original: {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            },\n            backgroundStyle: {\n                height: '100%',\n                width: '100%',\n                backgroundColor: 'rgba(0,0,0,0)',\n                cursor: 'auto',\n                opacity: 0,\n                position: 'fixed',\n                zIndex: 9999,\n                top: '0',\n                left: '0',\n                bottom: '0',\n                right: '0',\n            },\n        };\n        _this.onResizeStart = _this.onResizeStart.bind(_this);\n        _this.onMouseMove = _this.onMouseMove.bind(_this);\n        _this.onMouseUp = _this.onMouseUp.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(Resizable.prototype, \"parentNode\", {\n        get: function () {\n            if (!this.resizable) {\n                return null;\n            }\n            return this.resizable.parentNode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"propsSize\", {\n        get: function () {\n            return this.props.size || this.props.defaultSize || DEFAULT_SIZE;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"base\", {\n        get: function () {\n            var parent = this.parentNode;\n            if (!parent) {\n                return undefined;\n            }\n            var children = [].slice.call(parent.children);\n            for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                var n = children_1[_i];\n                if (n instanceof HTMLElement) {\n                    if (n.classList.contains(baseClassName)) {\n                        return n;\n                    }\n                }\n            }\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"size\", {\n        get: function () {\n            var width = 0;\n            var height = 0;\n            if (typeof window !== 'undefined' && this.resizable) {\n                var orgWidth = this.resizable.offsetWidth;\n                var orgHeight = this.resizable.offsetHeight;\n                // HACK: Set position `relative` to get parent size.\n                //       This is because when re-resizable set `absolute`, I can not get base width correctly.\n                var orgPosition = this.resizable.style.position;\n                if (orgPosition !== 'relative') {\n                    this.resizable.style.position = 'relative';\n                }\n                // INFO: Use original width or height if set auto.\n                width = this.resizable.style.width !== 'auto' ? this.resizable.offsetWidth : orgWidth;\n                height = this.resizable.style.height !== 'auto' ? this.resizable.offsetHeight : orgHeight;\n                // Restore original position\n                this.resizable.style.position = orgPosition;\n            }\n            return { width: width, height: height };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"sizeStyle\", {\n        get: function () {\n            var _this = this;\n            var size = this.props.size;\n            var getSize = function (key) {\n                if (typeof _this.state[key] === 'undefined' || _this.state[key] === 'auto') {\n                    return 'auto';\n                }\n                if (_this.propsSize && _this.propsSize[key] && endsWith(_this.propsSize[key].toString(), '%')) {\n                    if (endsWith(_this.state[key].toString(), '%')) {\n                        return _this.state[key].toString();\n                    }\n                    var parentSize = _this.getParentSize();\n                    var value = Number(_this.state[key].toString().replace('px', ''));\n                    var percent = (value / parentSize[key]) * 100;\n                    return percent + \"%\";\n                }\n                return getStringSize(_this.state[key]);\n            };\n            var width = size && typeof size.width !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.width)\n                : getSize('width');\n            var height = size && typeof size.height !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.height)\n                : getSize('height');\n            return { width: width, height: height };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Resizable.prototype.getParentSize = function () {\n        if (!this.base || !this.parentNode) {\n            return { width: window.innerWidth, height: window.innerHeight };\n        }\n        // INFO: To calculate parent width with flex layout\n        var wrapChanged = false;\n        var wrap = this.parentNode.style.flexWrap;\n        var minWidth = this.base.style.minWidth;\n        if (wrap !== 'wrap') {\n            wrapChanged = true;\n            this.parentNode.style.flexWrap = 'wrap';\n            // HACK: Use relative to get parent padding size\n        }\n        this.base.style.position = 'relative';\n        this.base.style.minWidth = '100%';\n        var size = {\n            width: this.base.offsetWidth,\n            height: this.base.offsetHeight,\n        };\n        this.base.style.position = 'absolute';\n        if (wrapChanged) {\n            this.parentNode.style.flexWrap = wrap;\n        }\n        this.base.style.minWidth = minWidth;\n        return size;\n    };\n    Resizable.prototype.bindEvents = function () {\n        if (typeof window !== 'undefined') {\n            window.addEventListener('mouseup', this.onMouseUp);\n            window.addEventListener('mousemove', this.onMouseMove);\n            window.addEventListener('mouseleave', this.onMouseUp);\n            window.addEventListener('touchmove', this.onMouseMove);\n            window.addEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.unbindEvents = function () {\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('mouseup', this.onMouseUp);\n            window.removeEventListener('mousemove', this.onMouseMove);\n            window.removeEventListener('mouseleave', this.onMouseUp);\n            window.removeEventListener('touchmove', this.onMouseMove);\n            window.removeEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.componentDidMount = function () {\n        if (!this.resizable) {\n            return;\n        }\n        var computedStyle = window.getComputedStyle(this.resizable);\n        this.setState({\n            width: this.state.width || this.size.width,\n            height: this.state.height || this.size.height,\n            flexBasis: computedStyle.flexBasis !== 'auto' ? computedStyle.flexBasis : undefined,\n        });\n        var parent = this.parentNode;\n        if (!(parent instanceof HTMLElement)) {\n            return;\n        }\n        if (this.base) {\n            return;\n        }\n        var element = document.createElement('div');\n        element.style.width = '100%';\n        element.style.height = '100%';\n        element.style.position = 'absolute';\n        element.style.transform = 'scale(0, 0)';\n        element.style.left = '0';\n        element.style.flex = '0';\n        if (element.classList) {\n            element.classList.add(baseClassName);\n        }\n        else {\n            element.className += baseClassName;\n        }\n        parent.appendChild(element);\n    };\n    Resizable.prototype.componentWillUnmount = function () {\n        if (typeof window !== 'undefined') {\n            this.unbindEvents();\n            var parent_1 = this.parentNode;\n            if (!this.base || !parent_1) {\n                return;\n            }\n            if (!(parent_1 instanceof HTMLElement) || !(this.base instanceof Node)) {\n                return;\n            }\n            parent_1.removeChild(this.base);\n        }\n    };\n    Resizable.prototype.createSizeForCssProperty = function (newSize, kind) {\n        var propsSize = this.propsSize && this.propsSize[kind];\n        return this.state[kind] === 'auto' &&\n            this.state.original[kind] === newSize &&\n            (typeof propsSize === 'undefined' || propsSize === 'auto')\n            ? 'auto'\n            : newSize;\n    };\n    Resizable.prototype.calculateNewMaxFromBoundary = function (maxWidth, maxHeight) {\n        if (this.props.bounds === 'parent') {\n            var parent_2 = this.parentNode;\n            if (parent_2 instanceof HTMLElement) {\n                var boundWidth = parent_2.offsetWidth + (this.parentLeft - this.resizableLeft);\n                var boundHeight = parent_2.offsetHeight + (this.parentTop - this.resizableTop);\n                maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;\n                maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;\n            }\n        }\n        else if (this.props.bounds === 'window') {\n            if (typeof window !== 'undefined') {\n                var boundWidth = window.innerWidth - this.resizableLeft;\n                var boundHeight = window.innerHeight - this.resizableTop;\n                maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;\n                maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;\n            }\n        }\n        else if (this.props.bounds instanceof HTMLElement) {\n            var boundWidth = this.props.bounds.offsetWidth + (this.targetLeft - this.resizableLeft);\n            var boundHeight = this.props.bounds.offsetHeight + (this.targetTop - this.resizableTop);\n            maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;\n            maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;\n        }\n        return { maxWidth: maxWidth, maxHeight: maxHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromDirection = function (clientX, clientY) {\n        var scale = this.props.scale || 1;\n        var resizeRatio = this.props.resizeRatio || 1;\n        var _a = this.state, direction = _a.direction, original = _a.original;\n        var _b = this.props, lockAspectRatio = _b.lockAspectRatio, lockAspectRatioExtraHeight = _b.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _b.lockAspectRatioExtraWidth;\n        var newWidth = original.width;\n        var newHeight = original.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (hasDirection('right', direction)) {\n            newWidth = original.width + ((clientX - original.x) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('left', direction)) {\n            newWidth = original.width - ((clientX - original.x) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('bottom', direction)) {\n            newHeight = original.height + ((clientY - original.y) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        if (hasDirection('top', direction)) {\n            newHeight = original.height - ((clientY - original.y) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromAspectRatio = function (newWidth, newHeight, max, min) {\n        var _a = this.props, lockAspectRatio = _a.lockAspectRatio, lockAspectRatioExtraHeight = _a.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _a.lockAspectRatioExtraWidth;\n        var computedMinWidth = typeof min.width === 'undefined' ? 10 : min.width;\n        var computedMaxWidth = typeof max.width === 'undefined' || max.width < 0 ? newWidth : max.width;\n        var computedMinHeight = typeof min.height === 'undefined' ? 10 : min.height;\n        var computedMaxHeight = typeof max.height === 'undefined' || max.height < 0 ? newHeight : max.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (lockAspectRatio) {\n            var extraMinWidth = (computedMinHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMaxWidth = (computedMaxHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMinHeight = (computedMinWidth - extraWidth) / this.ratio + extraHeight;\n            var extraMaxHeight = (computedMaxWidth - extraWidth) / this.ratio + extraHeight;\n            var lockedMinWidth = Math.max(computedMinWidth, extraMinWidth);\n            var lockedMaxWidth = Math.min(computedMaxWidth, extraMaxWidth);\n            var lockedMinHeight = Math.max(computedMinHeight, extraMinHeight);\n            var lockedMaxHeight = Math.min(computedMaxHeight, extraMaxHeight);\n            newWidth = clamp(newWidth, lockedMinWidth, lockedMaxWidth);\n            newHeight = clamp(newHeight, lockedMinHeight, lockedMaxHeight);\n        }\n        else {\n            newWidth = clamp(newWidth, computedMinWidth, computedMaxWidth);\n            newHeight = clamp(newHeight, computedMinHeight, computedMaxHeight);\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.setBoundingClientRect = function () {\n        // For parent boundary\n        if (this.props.bounds === 'parent') {\n            var parent_3 = this.parentNode;\n            if (parent_3 instanceof HTMLElement) {\n                var parentRect = parent_3.getBoundingClientRect();\n                this.parentLeft = parentRect.left;\n                this.parentTop = parentRect.top;\n            }\n        }\n        // For target(html element) boundary\n        if (this.props.bounds instanceof HTMLElement) {\n            var targetRect = this.props.bounds.getBoundingClientRect();\n            this.targetLeft = targetRect.left;\n            this.targetTop = targetRect.top;\n        }\n        // For boundary\n        if (this.resizable) {\n            var _a = this.resizable.getBoundingClientRect(), left = _a.left, top_1 = _a.top;\n            this.resizableLeft = left;\n            this.resizableTop = top_1;\n        }\n    };\n    Resizable.prototype.onResizeStart = function (event, direction) {\n        if (!this.resizable) {\n            return;\n        }\n        var clientX = 0;\n        var clientY = 0;\n        if (event.nativeEvent instanceof MouseEvent) {\n            clientX = event.nativeEvent.clientX;\n            clientY = event.nativeEvent.clientY;\n            // When user click with right button the resize is stuck in resizing mode\n            // until users clicks again, dont continue if right click is used.\n            // HACK: MouseEvent does not have `which` from flow-bin v0.68.\n            if (event.nativeEvent.which === 3) {\n                return;\n            }\n        }\n        else if (event.nativeEvent instanceof TouchEvent) {\n            clientX = event.nativeEvent.touches[0].clientX;\n            clientY = event.nativeEvent.touches[0].clientY;\n        }\n        if (this.props.onResizeStart) {\n            if (this.resizable) {\n                var startResize = this.props.onResizeStart(event, direction, this.resizable);\n                if (startResize === false) {\n                    return;\n                }\n            }\n        }\n        // Fix #168\n        if (this.props.size) {\n            if (typeof this.props.size.height !== 'undefined' && this.props.size.height !== this.state.height) {\n                this.setState({ height: this.props.size.height });\n            }\n            if (typeof this.props.size.width !== 'undefined' && this.props.size.width !== this.state.width) {\n                this.setState({ width: this.props.size.width });\n            }\n        }\n        // For lockAspectRatio case\n        this.ratio =\n            typeof this.props.lockAspectRatio === 'number' ? this.props.lockAspectRatio : this.size.width / this.size.height;\n        var flexBasis;\n        var computedStyle = window.getComputedStyle(this.resizable);\n        if (computedStyle.flexBasis !== 'auto') {\n            var parent_4 = this.parentNode;\n            if (parent_4) {\n                var dir = window.getComputedStyle(parent_4).flexDirection;\n                this.flexDir = dir.startsWith('row') ? 'row' : 'column';\n                flexBasis = computedStyle.flexBasis;\n            }\n        }\n        // For boundary\n        this.setBoundingClientRect();\n        this.bindEvents();\n        var state = {\n            original: {\n                x: clientX,\n                y: clientY,\n                width: this.size.width,\n                height: this.size.height,\n            },\n            isResizing: true,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: window.getComputedStyle(event.target).cursor || 'auto' }),\n            direction: direction,\n            flexBasis: flexBasis,\n        };\n        this.setState(state);\n    };\n    Resizable.prototype.onMouseMove = function (event) {\n        if (!this.state.isResizing || !this.resizable) {\n            return;\n        }\n        var _a = this.props, maxWidth = _a.maxWidth, maxHeight = _a.maxHeight, minWidth = _a.minWidth, minHeight = _a.minHeight;\n        var clientX = event instanceof MouseEvent ? event.clientX : event.touches[0].clientX;\n        var clientY = event instanceof MouseEvent ? event.clientY : event.touches[0].clientY;\n        var _b = this.state, direction = _b.direction, original = _b.original, width = _b.width, height = _b.height;\n        var parentSize = this.getParentSize();\n        var max = calculateNewMax(parentSize, maxWidth, maxHeight, minWidth, minHeight);\n        maxWidth = max.maxWidth;\n        maxHeight = max.maxHeight;\n        minWidth = max.minWidth;\n        minHeight = max.minHeight;\n        // Calculate new size\n        var _c = this.calculateNewSizeFromDirection(clientX, clientY), newHeight = _c.newHeight, newWidth = _c.newWidth;\n        // Calculate max size from boundary settings\n        var boundaryMax = this.calculateNewMaxFromBoundary(maxWidth, maxHeight);\n        // Calculate new size from aspect ratio\n        var newSize = this.calculateNewSizeFromAspectRatio(newWidth, newHeight, { width: boundaryMax.maxWidth, height: boundaryMax.maxHeight }, { width: minWidth, height: minHeight });\n        newWidth = newSize.newWidth;\n        newHeight = newSize.newHeight;\n        if (this.props.grid) {\n            var newGridWidth = snap(newWidth, this.props.grid[0]);\n            var newGridHeight = snap(newHeight, this.props.grid[1]);\n            var gap = this.props.snapGap || 0;\n            newWidth = gap === 0 || Math.abs(newGridWidth - newWidth) <= gap ? newGridWidth : newWidth;\n            newHeight = gap === 0 || Math.abs(newGridHeight - newHeight) <= gap ? newGridHeight : newHeight;\n        }\n        if (this.props.snap && this.props.snap.x) {\n            newWidth = findClosestSnap(newWidth, this.props.snap.x, this.props.snapGap);\n        }\n        if (this.props.snap && this.props.snap.y) {\n            newHeight = findClosestSnap(newHeight, this.props.snap.y, this.props.snapGap);\n        }\n        var delta = {\n            width: newWidth - original.width,\n            height: newHeight - original.height,\n        };\n        if (width && typeof width === 'string') {\n            if (endsWith(width, '%')) {\n                var percent = (newWidth / parentSize.width) * 100;\n                newWidth = percent + \"%\";\n            }\n            else if (endsWith(width, 'vw')) {\n                var vw = (newWidth / window.innerWidth) * 100;\n                newWidth = vw + \"vw\";\n            }\n            else if (endsWith(width, 'vh')) {\n                var vh = (newWidth / window.innerHeight) * 100;\n                newWidth = vh + \"vh\";\n            }\n        }\n        if (height && typeof height === 'string') {\n            if (endsWith(height, '%')) {\n                var percent = (newHeight / parentSize.height) * 100;\n                newHeight = percent + \"%\";\n            }\n            else if (endsWith(height, 'vw')) {\n                var vw = (newHeight / window.innerWidth) * 100;\n                newHeight = vw + \"vw\";\n            }\n            else if (endsWith(height, 'vh')) {\n                var vh = (newHeight / window.innerHeight) * 100;\n                newHeight = vh + \"vh\";\n            }\n        }\n        var newState = {\n            width: this.createSizeForCssProperty(newWidth, 'width'),\n            height: this.createSizeForCssProperty(newHeight, 'height'),\n        };\n        if (this.flexDir === 'row') {\n            newState.flexBasis = newState.width;\n        }\n        else if (this.flexDir === 'column') {\n            newState.flexBasis = newState.height;\n        }\n        this.setState(newState);\n        if (this.props.onResize) {\n            this.props.onResize(event, direction, this.resizable, delta);\n        }\n    };\n    Resizable.prototype.onMouseUp = function (event) {\n        var _a = this.state, isResizing = _a.isResizing, direction = _a.direction, original = _a.original;\n        if (!isResizing || !this.resizable) {\n            return;\n        }\n        var delta = {\n            width: this.size.width - original.width,\n            height: this.size.height - original.height,\n        };\n        if (this.props.onResizeStop) {\n            this.props.onResizeStop(event, direction, this.resizable, delta);\n        }\n        if (this.props.size) {\n            this.setState(this.props.size);\n        }\n        this.unbindEvents();\n        this.setState({\n            isResizing: false,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: 'auto' }),\n        });\n    };\n    Resizable.prototype.updateSize = function (size) {\n        this.setState({ width: size.width, height: size.height });\n    };\n    Resizable.prototype.renderResizer = function () {\n        var _this = this;\n        var _a = this.props, enable = _a.enable, handleStyles = _a.handleStyles, handleClasses = _a.handleClasses, handleWrapperStyle = _a.handleWrapperStyle, handleWrapperClass = _a.handleWrapperClass, handleComponent = _a.handleComponent;\n        if (!enable) {\n            return null;\n        }\n        var resizers = Object.keys(enable).map(function (dir) {\n            if (enable[dir] !== false) {\n                return (React.createElement(resizer_1.Resizer, { key: dir, direction: dir, onResizeStart: _this.onResizeStart, replaceStyles: handleStyles && handleStyles[dir], className: handleClasses && handleClasses[dir] }, handleComponent && handleComponent[dir] ? handleComponent[dir] : null));\n            }\n            return null;\n        });\n        // #93 Wrap the resize box in span (will not break 100% width/height)\n        return (React.createElement(\"span\", { className: handleWrapperClass, style: handleWrapperStyle }, resizers));\n    };\n    Resizable.prototype.render = function () {\n        var _this = this;\n        var extendsProps = Object.keys(this.props).reduce(function (acc, key) {\n            if (definedProps.indexOf(key) !== -1) {\n                return acc;\n            }\n            acc[key] = _this.props[key];\n            return acc;\n        }, {});\n        var style = __assign(__assign(__assign({ position: 'relative', userSelect: this.state.isResizing ? 'none' : 'auto' }, this.props.style), this.sizeStyle), { maxWidth: this.props.maxWidth, maxHeight: this.props.maxHeight, minWidth: this.props.minWidth, minHeight: this.props.minHeight, boxSizing: 'border-box', flexShrink: 0 });\n        if (this.state.flexBasis) {\n            style.flexBasis = this.state.flexBasis;\n        }\n        return (React.createElement(\"div\", __assign({ ref: this.ref, style: style, className: this.props.className }, extendsProps),\n            this.state.isResizing && React.createElement(\"div\", { style: this.state.backgroundStyle }),\n            this.props.children,\n            this.renderResizer()));\n    };\n    Resizable.defaultProps = {\n        onResizeStart: function () { },\n        onResize: function () { },\n        onResizeStop: function () { },\n        enable: {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true,\n            topRight: true,\n            bottomRight: true,\n            bottomLeft: true,\n            topLeft: true,\n        },\n        style: {},\n        grid: [1, 1],\n        lockAspectRatio: false,\n        lockAspectRatioExtraWidth: 0,\n        lockAspectRatioExtraHeight: 0,\n        scale: 1,\n        resizeRatio: 1,\n        snapGap: 0,\n    };\n    return Resizable;\n}(React.PureComponent));\nexports.Resizable = Resizable;\n","import {\n  AbsoluteTimeRange,\n  applyFieldOverrides,\n  compareArrayValues,\n  compareDataFrameStructures,\n  createFieldConfigRegistry,\n  DataFrame,\n  dateTime,\n  Field,\n  FieldColorModeId,\n  FieldConfigSource,\n  getFrameDisplayName,\n  GrafanaTheme,\n  TimeZone,\n} from '@grafana/data';\nimport {\n  DrawStyle,\n  Icon,\n  LegendDisplayMode,\n  PanelContext,\n  PanelContextProvider,\n  SeriesVisibilityChangeMode,\n  TimeSeries,\n  TooltipDisplayMode,\n  TooltipPlugin,\n  useStyles,\n  useTheme2,\n  ZoomPlugin,\n} from '@grafana/ui';\nimport { defaultGraphConfig, getGraphFieldConfig } from 'app/plugins/panel/timeseries/config';\nimport { ContextMenuPlugin } from 'app/plugins/panel/timeseries/plugins/ContextMenuPlugin';\nimport { ExemplarsPlugin } from 'app/plugins/panel/timeseries/plugins/ExemplarsPlugin';\nimport { css, cx } from '@emotion/css';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { getFieldLinksForExplore } from './utils/links';\nimport { usePrevious } from 'react-use';\nimport appEvents from 'app/core/app_events';\nimport { seriesVisibilityConfigFactory } from '../dashboard/dashgrid/SeriesVisibilityConfigFactory';\nimport { identity } from 'lodash';\nimport { SplitOpen } from 'app/types/explore';\n\nconst MAX_NUMBER_OF_TIME_SERIES = 20;\n\ninterface Props {\n  data: DataFrame[];\n  height: number;\n  width: number;\n  annotations?: DataFrame[];\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  onUpdateTimeRange: (absoluteRange: AbsoluteTimeRange) => void;\n  onHiddenSeriesChanged?: (hiddenSeries: string[]) => void;\n  tooltipDisplayMode: TooltipDisplayMode;\n  splitOpenFn?: SplitOpen;\n}\n\nexport function ExploreGraphNGPanel({\n  data,\n  height,\n  width,\n  timeZone,\n  absoluteRange,\n  onUpdateTimeRange,\n  annotations,\n  tooltipDisplayMode,\n  splitOpenFn,\n  onHiddenSeriesChanged,\n}: Props) {\n  const theme = useTheme2();\n  const [showAllTimeSeries, setShowAllTimeSeries] = useState(false);\n  const [baseStructureRev, setBaseStructureRev] = useState(1);\n\n  const previousData = usePrevious(data);\n  const structureChangesRef = useRef(0);\n\n  if (data && previousData && !compareArrayValues(previousData, data, compareDataFrameStructures)) {\n    structureChangesRef.current++;\n  }\n\n  const structureRev = baseStructureRev + structureChangesRef.current;\n\n  const [fieldConfig, setFieldConfig] = useState<FieldConfigSource>({\n    defaults: {\n      color: {\n        mode: FieldColorModeId.PaletteClassic,\n      },\n      custom: {\n        drawStyle: DrawStyle.Line,\n        fillOpacity: 0,\n        pointSize: 5,\n      },\n    },\n    overrides: [],\n  });\n\n  const style = useStyles(getStyles);\n  const timeRange = {\n    from: dateTime(absoluteRange.from),\n    to: dateTime(absoluteRange.to),\n    raw: {\n      from: dateTime(absoluteRange.from),\n      to: dateTime(absoluteRange.to),\n    },\n  };\n\n  const dataWithConfig = useMemo(() => {\n    const registry = createFieldConfigRegistry(getGraphFieldConfig(defaultGraphConfig), 'Explore');\n    return applyFieldOverrides({\n      fieldConfig,\n      data,\n      timeZone,\n      replaceVariables: (value) => value, // We don't need proper replace here as it is only used in getLinks and we use getFieldLinks\n      theme,\n      fieldConfigRegistry: registry,\n    });\n  }, [fieldConfig, data, timeZone, theme]);\n\n  useEffect(() => {\n    if (onHiddenSeriesChanged) {\n      const hiddenFrames: string[] = [];\n      dataWithConfig.forEach((frame) => {\n        const allFieldsHidden = frame.fields.map((field) => field.config?.custom?.hideFrom?.viz).every(identity);\n        if (allFieldsHidden) {\n          hiddenFrames.push(getFrameDisplayName(frame));\n        }\n      });\n      onHiddenSeriesChanged(hiddenFrames);\n    }\n  }, [dataWithConfig, onHiddenSeriesChanged]);\n\n  const seriesToShow = showAllTimeSeries ? dataWithConfig : dataWithConfig.slice(0, MAX_NUMBER_OF_TIME_SERIES);\n\n  const getFieldLinks = (field: Field, rowIndex: number) => {\n    return getFieldLinksForExplore({ field, rowIndex, splitOpenFn, range: timeRange });\n  };\n\n  const panelContext: PanelContext = {\n    eventBus: appEvents,\n    onToggleSeriesVisibility(label: string, mode: SeriesVisibilityChangeMode) {\n      setBaseStructureRev((r) => r + 1);\n      setFieldConfig(seriesVisibilityConfigFactory(label, mode, fieldConfig, data));\n    },\n  };\n\n  return (\n    <PanelContextProvider value={panelContext}>\n      {dataWithConfig.length > MAX_NUMBER_OF_TIME_SERIES && !showAllTimeSeries && (\n        <div className={cx([style.timeSeriesDisclaimer])}>\n          <Icon className={style.disclaimerIcon} name=\"exclamation-triangle\" />\n          {`Showing only ${MAX_NUMBER_OF_TIME_SERIES} time series. `}\n          <span\n            className={cx([style.showAllTimeSeries])}\n            onClick={() => {\n              structureChangesRef.current++;\n              setShowAllTimeSeries(true);\n            }}\n          >{`Show all ${dataWithConfig.length}`}</span>\n        </div>\n      )}\n      <TimeSeries\n        frames={seriesToShow}\n        structureRev={structureRev}\n        width={width}\n        height={height}\n        timeRange={timeRange}\n        legend={{ displayMode: LegendDisplayMode.List, placement: 'bottom', calcs: [] }}\n        timeZone={timeZone}\n      >\n        {(config, alignedDataFrame) => {\n          return (\n            <>\n              <ZoomPlugin config={config} onZoom={onUpdateTimeRange} />\n              <TooltipPlugin config={config} data={alignedDataFrame} mode={tooltipDisplayMode} timeZone={timeZone} />\n              <ContextMenuPlugin config={config} data={alignedDataFrame} timeZone={timeZone} />\n              {annotations && (\n                <ExemplarsPlugin\n                  config={config}\n                  exemplars={annotations}\n                  timeZone={timeZone}\n                  getFieldLinks={getFieldLinks}\n                />\n              )}\n            </>\n          );\n        }}\n      </TimeSeries>\n    </PanelContextProvider>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  timeSeriesDisclaimer: css`\n    label: time-series-disclaimer;\n    width: 300px;\n    margin: ${theme.spacing.sm} auto;\n    padding: 10px 0;\n    border-radius: ${theme.border.radius.md};\n    text-align: center;\n    background-color: ${theme.colors.bg1};\n  `,\n  disclaimerIcon: css`\n    label: disclaimer-icon;\n    color: ${theme.palette.yellow};\n    margin-right: ${theme.spacing.xs};\n  `,\n  showAllTimeSeries: css`\n    label: show-all-time-series;\n    cursor: pointer;\n    color: ${theme.colors.linkExternal};\n  `,\n});\n","import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { css } from 'emotion';\nimport { Collapse } from '@grafana/ui';\nimport { AbsoluteTimeRange, Field, LogRowModel, RawTimeRange } from '@grafana/data';\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\nimport { StoreState } from 'app/types';\nimport { splitOpen } from './state/main';\nimport { addResultsToCache, clearCache } from './state/query';\nimport { updateTimeRange } from './state/time';\nimport { getTimeZone } from '../profile/state/selectors';\nimport { LiveLogsWithTheme } from './LiveLogs';\nimport { Logs } from './Logs';\nimport { LogsCrossFadeTransition } from './utils/LogsCrossFadeTransition';\nimport { LiveTailControls } from './useLiveTailControls';\nimport { getFieldLinksForExplore } from './utils/links';\n\ninterface LogsContainerProps extends PropsFromRedux {\n  width: number;\n  exploreId: ExploreId;\n  scanRange?: RawTimeRange;\n  syncedTimes: boolean;\n  onClickFilterLabel?: (key: string, value: string) => void;\n  onClickFilterOutLabel?: (key: string, value: string) => void;\n  onStartScanning: () => void;\n  onStopScanning: () => void;\n}\n\nexport class LogsContainer extends PureComponent<LogsContainerProps> {\n  onChangeTime = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  getLogRowContext = async (row: LogRowModel, options?: any): Promise<any> => {\n    const { datasourceInstance } = this.props;\n\n    if (datasourceInstance?.getLogRowContext) {\n      return datasourceInstance.getLogRowContext(row, options);\n    }\n\n    return [];\n  };\n\n  showContextToggle = (row?: LogRowModel): boolean => {\n    const { datasourceInstance } = this.props;\n\n    if (datasourceInstance?.showContextToggle) {\n      return datasourceInstance.showContextToggle(row);\n    }\n\n    return false;\n  };\n\n  getFieldLinks = (field: Field, rowIndex: number) => {\n    const { splitOpen: splitOpenFn, range } = this.props;\n    return getFieldLinksForExplore({ field, rowIndex, splitOpenFn, range });\n  };\n\n  render() {\n    const {\n      loading,\n      logsHighlighterExpressions,\n      logRows,\n      logsMeta,\n      logsSeries,\n      logsQueries,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      onStartScanning,\n      onStopScanning,\n      absoluteRange,\n      timeZone,\n      visibleRange,\n      scanning,\n      range,\n      width,\n      isLive,\n      exploreId,\n      addResultsToCache,\n      clearCache,\n    } = this.props;\n\n    if (!logRows) {\n      return null;\n    }\n\n    // We need to override css overflow of divs in Collapse element to enable sticky Logs navigation\n    const styleOverridesForStickyNavigation = css`\n      & > div {\n        overflow: visible;\n        & > div {\n          overflow: visible;\n        }\n      }\n    `;\n\n    return (\n      <>\n        <LogsCrossFadeTransition visible={isLive}>\n          <Collapse label=\"Logs\" loading={false} isOpen>\n            <LiveTailControls exploreId={exploreId}>\n              {(controls) => (\n                <LiveLogsWithTheme\n                  logRows={logRows}\n                  timeZone={timeZone}\n                  stopLive={controls.stop}\n                  isPaused={this.props.isPaused}\n                  onPause={controls.pause}\n                  onResume={controls.resume}\n                />\n              )}\n            </LiveTailControls>\n          </Collapse>\n        </LogsCrossFadeTransition>\n        <LogsCrossFadeTransition visible={!isLive}>\n          <Collapse label=\"Logs\" loading={loading} isOpen className={styleOverridesForStickyNavigation}>\n            <Logs\n              logRows={logRows}\n              logsMeta={logsMeta}\n              logsSeries={logsSeries}\n              logsQueries={logsQueries}\n              width={width}\n              highlighterExpressions={logsHighlighterExpressions}\n              loading={loading}\n              onChangeTime={this.onChangeTime}\n              onClickFilterLabel={onClickFilterLabel}\n              onClickFilterOutLabel={onClickFilterOutLabel}\n              onStartScanning={onStartScanning}\n              onStopScanning={onStopScanning}\n              absoluteRange={absoluteRange}\n              visibleRange={visibleRange}\n              timeZone={timeZone}\n              scanning={scanning}\n              scanRange={range.raw}\n              showContextToggle={this.showContextToggle}\n              getRowContext={this.getLogRowContext}\n              getFieldLinks={this.getFieldLinks}\n              addResultsToCache={() => addResultsToCache(exploreId)}\n              clearCache={() => clearCache(exploreId)}\n            />\n          </Collapse>\n        </LogsCrossFadeTransition>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: string }) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const {\n    logsHighlighterExpressions,\n    logsResult,\n    loading,\n    scanning,\n    datasourceInstance,\n    isLive,\n    isPaused,\n    range,\n    absoluteRange,\n  } = item;\n  const timeZone = getTimeZone(state.user);\n\n  return {\n    loading,\n    logsHighlighterExpressions,\n    logRows: logsResult?.rows,\n    logsMeta: logsResult?.meta,\n    logsSeries: logsResult?.series,\n    logsQueries: logsResult?.queries,\n    visibleRange: logsResult?.visibleRange,\n    scanning,\n    timeZone,\n    datasourceInstance,\n    isLive,\n    isPaused,\n    range,\n    absoluteRange,\n  };\n}\n\nconst mapDispatchToProps = {\n  updateTimeRange,\n  splitOpen,\n  addResultsToCache,\n  clearCache,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default hot(module)(connector(LogsContainer));\n","import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { hot } from 'react-hot-loader';\nimport classNames from 'classnames';\nimport { css } from '@emotion/css';\n\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\nimport { Icon, IconButton, SetInterval, ToolbarButton, ToolbarButtonRow, Tooltip } from '@grafana/ui';\nimport { DataSourceInstanceSettings, RawTimeRange } from '@grafana/data';\nimport { DataSourcePicker } from '@grafana/runtime';\nimport { StoreState } from 'app/types/store';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { changeDatasource } from './state/datasource';\nimport { splitClose, splitOpen } from './state/main';\nimport { syncTimes, changeRefreshInterval } from './state/time';\nimport { getTimeZone } from '../profile/state/selectors';\nimport { updateTimeZoneForSession } from '../profile/state/reducers';\nimport { ExploreTimeControls } from './ExploreTimeControls';\nimport { LiveTailButton } from './LiveTailButton';\nimport { RunButton } from './RunButton';\nimport { LiveTailControls } from './useLiveTailControls';\nimport { cancelQueries, clearQueries, runQueries } from './state/query';\nimport ReturnToDashboardButton from './ReturnToDashboardButton';\nimport { isSplit } from './state/selectors';\n\ninterface OwnProps {\n  exploreId: ExploreId;\n  onChangeTime: (range: RawTimeRange, changedByScanner?: boolean) => void;\n}\n\ntype Props = OwnProps & ConnectedProps<typeof connector>;\n\nexport class UnConnectedExploreToolbar extends PureComponent<Props> {\n  onChangeDatasource = async (dsSettings: DataSourceInstanceSettings) => {\n    this.props.changeDatasource(this.props.exploreId, dsSettings.name, { importQueries: true });\n  };\n\n  onClearAll = () => {\n    this.props.clearAll(this.props.exploreId);\n  };\n\n  onRunQuery = (loading = false) => {\n    const { runQueries, cancelQueries, exploreId } = this.props;\n    if (loading) {\n      return cancelQueries(exploreId);\n    } else {\n      return runQueries(exploreId);\n    }\n  };\n\n  onChangeRefreshInterval = (item: string) => {\n    const { changeRefreshInterval, exploreId } = this.props;\n    changeRefreshInterval(exploreId, item);\n  };\n\n  onChangeTimeSync = () => {\n    const { syncTimes, exploreId } = this.props;\n    syncTimes(exploreId);\n  };\n\n  render() {\n    const {\n      datasourceMissing,\n      closeSplit,\n      exploreId,\n      loading,\n      range,\n      timeZone,\n      splitted,\n      syncedTimes,\n      refreshInterval,\n      onChangeTime,\n      split,\n      hasLiveOption,\n      isLive,\n      isPaused,\n      containerWidth,\n      onChangeTimeZone,\n    } = this.props;\n\n    const showSmallDataSourcePicker = (splitted ? containerWidth < 700 : containerWidth < 800) || false;\n    const showSmallTimePicker = splitted || containerWidth < 1210;\n\n    return (\n      <div className={splitted ? 'explore-toolbar splitted' : 'explore-toolbar'}>\n        <div className=\"explore-toolbar-item\">\n          <div className=\"explore-toolbar-header\">\n            <div className=\"explore-toolbar-header-title\">\n              {exploreId === 'left' && (\n                <span className=\"navbar-page-btn\">\n                  <Icon\n                    name=\"compass\"\n                    size=\"lg\"\n                    className={css`\n                      margin-right: 6px;\n                      margin-bottom: 3px;\n                    `}\n                  />\n                  Explore\n                </span>\n              )}\n            </div>\n            {splitted && (\n              <IconButton\n                title=\"Close split pane\"\n                className=\"explore-toolbar-header-close\"\n                onClick={() => closeSplit(exploreId)}\n                name=\"times\"\n              />\n            )}\n          </div>\n        </div>\n        <div className=\"explore-toolbar-item\">\n          <div className=\"explore-toolbar-content\">\n            {!datasourceMissing ? (\n              <div className=\"explore-toolbar-content-item\">\n                <div\n                  className={classNames(\n                    'explore-ds-picker',\n                    showSmallDataSourcePicker ? 'explore-ds-picker--small' : ''\n                  )}\n                >\n                  <DataSourcePicker\n                    onChange={this.onChangeDatasource}\n                    current={this.props.datasourceName}\n                    hideTextValue={showSmallDataSourcePicker}\n                  />\n                </div>\n              </div>\n            ) : null}\n            <ToolbarButtonRow>\n              <ReturnToDashboardButton exploreId={exploreId} />\n\n              {exploreId === 'left' && !splitted ? (\n                <ToolbarButton\n                  iconOnly={splitted}\n                  title=\"Split\"\n                  /* This way ToolbarButton doesn't add event as a parameter when invoking split function\n                   * which breaks splitting functionality\n                   */\n                  onClick={() => split()}\n                  icon=\"columns\"\n                  disabled={isLive}\n                >\n                  Split\n                </ToolbarButton>\n              ) : null}\n\n              <Tooltip content={'Copy shortened link to the executed query'} placement=\"bottom\">\n                <ToolbarButton icon=\"share-alt\" onClick={() => createAndCopyShortLink(window.location.href)} />\n              </Tooltip>\n\n              {!isLive && (\n                <ExploreTimeControls\n                  exploreId={exploreId}\n                  range={range}\n                  timeZone={timeZone}\n                  onChangeTime={onChangeTime}\n                  splitted={splitted}\n                  syncedTimes={syncedTimes}\n                  onChangeTimeSync={this.onChangeTimeSync}\n                  hideText={showSmallTimePicker}\n                  onChangeTimeZone={onChangeTimeZone}\n                />\n              )}\n\n              {!isLive && (\n                <ToolbarButton title=\"Clear all\" onClick={this.onClearAll} icon=\"trash-alt\" iconOnly={splitted}>\n                  Clear all\n                </ToolbarButton>\n              )}\n\n              <RunButton\n                refreshInterval={refreshInterval}\n                onChangeRefreshInterval={this.onChangeRefreshInterval}\n                isSmall={splitted || showSmallTimePicker}\n                isLive={isLive}\n                loading={loading || (isLive && !isPaused)}\n                onRun={this.onRunQuery}\n                showDropdown={!isLive}\n              />\n\n              {refreshInterval && <SetInterval func={this.onRunQuery} interval={refreshInterval} loading={loading} />}\n\n              {hasLiveOption && (\n                <LiveTailControls exploreId={exploreId}>\n                  {(controls) => (\n                    <LiveTailButton\n                      splitted={splitted}\n                      isLive={isLive}\n                      isPaused={isPaused}\n                      start={controls.start}\n                      pause={controls.pause}\n                      resume={controls.resume}\n                      stop={controls.stop}\n                    />\n                  )}\n                </LiveTailControls>\n              )}\n            </ToolbarButtonRow>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: StoreState, { exploreId }: OwnProps) => {\n  const syncedTimes = state.explore.syncedTimes;\n  const exploreItem: ExploreItemState = state.explore[exploreId]!;\n  const {\n    datasourceInstance,\n    datasourceMissing,\n    range,\n    refreshInterval,\n    loading,\n    isLive,\n    isPaused,\n    containerWidth,\n  } = exploreItem;\n\n  const hasLiveOption = !!datasourceInstance?.meta?.streaming;\n\n  return {\n    datasourceMissing,\n    datasourceName: datasourceInstance?.name,\n    loading,\n    range,\n    timeZone: getTimeZone(state.user),\n    splitted: isSplit(state),\n    refreshInterval,\n    hasLiveOption,\n    isLive,\n    isPaused,\n    syncedTimes,\n    containerWidth,\n  };\n};\n\nconst mapDispatchToProps = {\n  changeDatasource,\n  changeRefreshInterval,\n  clearAll: clearQueries,\n  cancelQueries,\n  runQueries,\n  closeSplit: splitClose,\n  split: splitOpen,\n  syncTimes,\n  onChangeTimeZone: updateTimeZoneForSession,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport const ExploreToolbar = hot(module)(connector(UnConnectedExploreToolbar));\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Components\nimport QueryRow from './QueryRow';\n\n// Types\nimport { ExploreId } from 'app/types/explore';\n\ninterface QueryRowsProps {\n  className?: string;\n  exploreId: ExploreId;\n  queryKeys: string[];\n}\n\nexport default class QueryRows extends PureComponent<QueryRowsProps> {\n  render() {\n    const { className = '', exploreId, queryKeys } = this.props;\n    return (\n      <div className={className}>\n        {queryKeys.map((key, index) => {\n          return <QueryRow key={key} exploreId={exploreId} index={index} />;\n        })}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport memoizeOne from 'memoize-one';\nimport { DataQuery, ExploreUrlState, EventBusExtended, EventBusSrv } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport store from 'app/core/store';\nimport { lastSavedUrl, cleanupPaneAction } from './state/main';\nimport { initializeExplore, refreshExplore } from './state/explorePane';\nimport { ExploreId } from 'app/types/explore';\nimport { StoreState } from 'app/types';\nimport {\n  DEFAULT_RANGE,\n  ensureQueries,\n  getTimeRange,\n  getTimeRangeFromUrl,\n  lastUsedDatasourceKeyForOrgId,\n  parseUrlState,\n} from 'app/core/utils/explore';\nimport { getTimeZone } from '../profile/state/selectors';\nimport Explore from './Explore';\n\ninterface OwnProps {\n  exploreId: ExploreId;\n  urlQuery: string;\n  split: boolean;\n}\n\ninterface Props extends OwnProps, ConnectedProps<typeof connector> {}\n\n/**\n * This component is responsible for handling initialization of an Explore pane and triggering synchronization\n * of state based on URL changes and preventing any infinite loops.\n */\nexport class ExplorePaneContainerUnconnected extends React.PureComponent<Props> {\n  el: any;\n  exploreEvents: EventBusExtended;\n\n  constructor(props: Props) {\n    super(props);\n    this.exploreEvents = new EventBusSrv();\n    this.state = {\n      openDrawer: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { initialized, exploreId, initialDatasource, initialQueries, initialRange, originPanelId } = this.props;\n    const width = this.el?.offsetWidth ?? 0;\n\n    // initialize the whole explore first time we mount and if browser history contains a change in datasource\n    if (!initialized) {\n      this.props.initializeExplore(\n        exploreId,\n        initialDatasource,\n        initialQueries,\n        initialRange,\n        width,\n        this.exploreEvents,\n        originPanelId\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.exploreEvents.removeAllListeners();\n    this.props.cleanupPaneAction({ exploreId: this.props.exploreId });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.refreshExplore(prevProps.urlQuery);\n  }\n\n  refreshExplore = (prevUrlQuery: string) => {\n    const { exploreId, urlQuery } = this.props;\n\n    // Update state from url only if it changed and only if the change wasn't initialised by redux to prevent any loops\n    if (urlQuery !== prevUrlQuery && urlQuery !== lastSavedUrl[exploreId]) {\n      this.props.refreshExplore(exploreId, urlQuery);\n    }\n  };\n\n  getRef = (el: any) => {\n    this.el = el;\n  };\n\n  render() {\n    const exploreClass = this.props.split ? 'explore explore-split' : 'explore';\n    return (\n      <div className={exploreClass} ref={this.getRef} data-testid={selectors.pages.Explore.General.container}>\n        {this.props.initialized && <Explore exploreId={this.props.exploreId} />}\n      </div>\n    );\n  }\n}\n\nconst ensureQueriesMemoized = memoizeOne(ensureQueries);\nconst getTimeRangeFromUrlMemoized = memoizeOne(getTimeRangeFromUrl);\n\nfunction mapStateToProps(state: StoreState, props: OwnProps) {\n  const urlState = parseUrlState(props.urlQuery);\n  const timeZone = getTimeZone(state.user);\n\n  const { datasource, queries, range: urlRange, originPanelId } = (urlState || {}) as ExploreUrlState;\n  const initialDatasource = datasource || store.get(lastUsedDatasourceKeyForOrgId(state.user.orgId));\n  const initialQueries: DataQuery[] = ensureQueriesMemoized(queries);\n  const initialRange = urlRange\n    ? getTimeRangeFromUrlMemoized(urlRange, timeZone)\n    : getTimeRange(timeZone, DEFAULT_RANGE);\n\n  return {\n    initialized: state.explore[props.exploreId]?.initialized,\n    initialDatasource,\n    initialQueries,\n    initialRange,\n    originPanelId,\n  };\n}\n\nconst mapDispatchToProps = {\n  initializeExplore,\n  refreshExplore,\n  cleanupPaneAction,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport const ExplorePaneContainer = connector(ExplorePaneContainerUnconnected);\n","import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { ExploreId, ExploreQueryParams } from 'app/types/explore';\nimport { ErrorBoundaryAlert } from '@grafana/ui';\nimport { lastSavedUrl, resetExploreAction, richHistoryUpdatedAction } from './state/main';\nimport { getRichHistory } from '../../core/utils/richHistory';\nimport { ExplorePaneContainer } from './ExplorePaneContainer';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { Branding } from '../../core/components/Branding/Branding';\n\nimport { getNavModel } from '../../core/selectors/navModel';\nimport { StoreState } from 'app/types';\n\ninterface RouteProps extends GrafanaRouteComponentProps<{}, ExploreQueryParams> {}\ninterface OwnProps {}\n\nconst mapStateToProps = (state: StoreState) => {\n  return {\n    navModel: getNavModel(state.navIndex, 'explore'),\n    exploreState: state.explore,\n  };\n};\n\nconst mapDispatchToProps = {\n  resetExploreAction,\n  richHistoryUpdatedAction,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = OwnProps & RouteProps & ConnectedProps<typeof connector>;\nclass WrapperUnconnected extends PureComponent<Props> {\n  componentWillUnmount() {\n    this.props.resetExploreAction({});\n  }\n\n  componentDidMount() {\n    lastSavedUrl.left = undefined;\n    lastSavedUrl.right = undefined;\n\n    const richHistory = getRichHistory();\n    this.props.richHistoryUpdatedAction({ richHistory });\n  }\n\n  componentDidUpdate() {\n    const { left, right } = this.props.queryParams;\n    const hasSplit = Boolean(left) && Boolean(right);\n    const datasourceTitle = hasSplit\n      ? `${this.props.exploreState.left.datasourceInstance?.name} | ${this.props.exploreState.right?.datasourceInstance?.name}`\n      : `${this.props.exploreState.left.datasourceInstance?.name}`;\n    const documentTitle = `${this.props.navModel.main.text} - ${datasourceTitle} - ${Branding.AppTitle}`;\n    document.title = documentTitle;\n  }\n\n  render() {\n    const { left, right } = this.props.queryParams;\n    const hasSplit = Boolean(left) && Boolean(right);\n\n    return (\n      <div className=\"page-scrollbar-wrapper\">\n        <div className=\"explore-wrapper\">\n          <ErrorBoundaryAlert style=\"page\">\n            <ExplorePaneContainer split={hasSplit} exploreId={ExploreId.left} urlQuery={left} />\n          </ErrorBoundaryAlert>\n          {hasSplit && (\n            <ErrorBoundaryAlert style=\"page\">\n              <ExplorePaneContainer split={hasSplit} exploreId={ExploreId.right} urlQuery={right} />\n            </ErrorBoundaryAlert>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Wrapper = connector(WrapperUnconnected);\n\nexport default Wrapper;\n","import React from 'react';\nimport { LogsDedupStrategy, LogsMetaItem, LogsMetaKind, LogRowModel } from '@grafana/data';\nimport { Button, Tooltip, Icon, LogLabels } from '@grafana/ui';\nimport { MAX_CHARACTERS } from '@grafana/ui/src/components/Logs/LogRowMessage';\nimport { MetaInfoText, MetaItemProps } from './MetaInfoText';\n\nexport type Props = {\n  meta: LogsMetaItem[];\n  dedupStrategy: LogsDedupStrategy;\n  dedupCount: number;\n  showDetectedFields: string[];\n  hasUnescapedContent: boolean;\n  forceEscape: boolean;\n  logRows: LogRowModel[];\n  onEscapeNewlines: () => void;\n  clearDetectedFields: () => void;\n};\n\nexport const LogsMetaRow: React.FC<Props> = React.memo(\n  ({\n    meta,\n    dedupStrategy,\n    dedupCount,\n    showDetectedFields,\n    clearDetectedFields,\n    hasUnescapedContent,\n    forceEscape,\n    onEscapeNewlines,\n    logRows,\n  }) => {\n    const logsMetaItem: Array<LogsMetaItem | MetaItemProps> = [...meta];\n\n    // Add deduplication info\n    if (dedupStrategy !== LogsDedupStrategy.none) {\n      logsMetaItem.push({\n        label: 'Dedup count',\n        value: dedupCount,\n        kind: LogsMetaKind.Number,\n      });\n    }\n    // Add info about limit for highlighting\n    if (logRows.some((r) => r.entry.length > MAX_CHARACTERS)) {\n      logsMetaItem.push({\n        label: 'Info',\n        value: 'Logs with more than 100,000 characters could not be parsed and highlighted',\n        kind: LogsMetaKind.String,\n      });\n    }\n\n    // Add detected fields info\n    if (showDetectedFields?.length > 0) {\n      logsMetaItem.push(\n        {\n          label: 'Showing only detected fields',\n          value: renderMetaItem(showDetectedFields, LogsMetaKind.LabelsMap),\n        },\n        {\n          label: '',\n          value: (\n            <Button variant=\"secondary\" size=\"sm\" onClick={clearDetectedFields}>\n              Show all detected fields\n            </Button>\n          ),\n        }\n      );\n    }\n\n    // Add unescaped content info\n    if (hasUnescapedContent) {\n      logsMetaItem.push({\n        label: 'Your logs might have incorrectly escaped content',\n        value: (\n          <Tooltip\n            content=\"We suggest to try to fix the escaping of your log lines first. This is an experimental feature, your logs might not be correctly escaped.\"\n            placement=\"right\"\n          >\n            <Button variant=\"secondary\" size=\"sm\" onClick={onEscapeNewlines}>\n              <span>{forceEscape ? 'Remove escaping' : 'Escape newlines'}&nbsp;</span>\n              <Icon name=\"exclamation-triangle\" className=\"muted\" size=\"sm\" />\n            </Button>\n          </Tooltip>\n        ),\n      });\n    }\n\n    return (\n      <>\n        {logsMetaItem && (\n          <MetaInfoText\n            metaItems={logsMetaItem.map((item) => {\n              return {\n                label: item.label,\n                value: 'kind' in item ? renderMetaItem(item.value, item.kind) : item.value,\n              };\n            })}\n          />\n        )}\n      </>\n    );\n  }\n);\n\nLogsMetaRow.displayName = 'LogsMetaRow';\n\nfunction renderMetaItem(value: any, kind: LogsMetaKind) {\n  if (kind === LogsMetaKind.LabelsMap) {\n    return (\n      <span className=\"logs-meta-item__labels\">\n        <LogLabels labels={value} />\n      </span>\n    );\n  } else if (kind === LogsMetaKind.Error) {\n    return <span className=\"logs-meta-item__error\">{value}</span>;\n  }\n  return value;\n}\n","import React from 'react';\nimport { css, cx } from 'emotion';\nimport { dateTimeFormat, systemDateFormats, TimeZone, GrafanaTheme, AbsoluteTimeRange } from '@grafana/data';\nimport { useTheme, stylesFactory, CustomScrollbar, Spinner } from '@grafana/ui';\nimport { LogsPage } from './LogsNavigation';\n\ntype Props = {\n  pages: LogsPage[];\n  currentPageIndex: number;\n  oldestLogsFirst: boolean;\n  timeZone: TimeZone;\n  loading: boolean;\n  changeTime: (range: AbsoluteTimeRange) => void;\n};\n\nexport function LogsNavigationPages({\n  pages,\n  currentPageIndex,\n  oldestLogsFirst,\n  timeZone,\n  loading,\n  changeTime,\n}: Props) {\n  const formatTime = (time: number) => {\n    return `${dateTimeFormat(time, {\n      format: systemDateFormats.interval.second,\n      timeZone: timeZone,\n    })}`;\n  };\n\n  const createPageContent = (page: LogsPage, index: number) => {\n    if (currentPageIndex === index && loading) {\n      return <Spinner />;\n    }\n    const topContent = formatTime(oldestLogsFirst ? page.logsRange.from : page.logsRange.to);\n    const bottomContent = formatTime(oldestLogsFirst ? page.logsRange.to : page.logsRange.from);\n    return `${topContent} — ${bottomContent}`;\n  };\n\n  const theme = useTheme();\n  const styles = getStyles(theme, loading);\n\n  return (\n    <CustomScrollbar autoHide>\n      <div className={styles.pagesWrapper} data-testid=\"logsNavigationPages\">\n        <div className={styles.pagesContainer}>\n          {pages.map((page: LogsPage, index: number) => (\n            <div\n              data-testid={`page${index + 1}`}\n              className={styles.page}\n              key={page.queryRange.to}\n              onClick={() => !loading && changeTime({ from: page.queryRange.from, to: page.queryRange.to })}\n            >\n              <div className={cx(styles.line, { selectedBg: currentPageIndex === index })} />\n              <div className={cx(styles.time, { selectedText: currentPageIndex === index })}>\n                {createPageContent(page, index)}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </CustomScrollbar>\n  );\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme, loading: boolean) => {\n  return {\n    pagesWrapper: css`\n      height: 100%;\n      padding-left: ${theme.spacing.xs};\n      display: flex;\n      flex-direction: column;\n      overflow-y: scroll;\n      &::after {\n        content: '';\n        display: block;\n        background: repeating-linear-gradient(\n          135deg,\n          ${theme.colors.bg1},\n          ${theme.colors.bg1} 5px,\n          ${theme.colors.bg2} 5px,\n          ${theme.colors.bg2} 15px\n        );\n        width: 3px;\n        height: inherit;\n        margin-bottom: 8px;\n      }\n    `,\n    pagesContainer: css`\n      display: flex;\n      padding: 0;\n      flex-direction: column;\n    `,\n    page: css`\n      display: flex;\n      margin: ${theme.spacing.md} 0;\n      cursor: ${loading ? 'auto' : 'pointer'};\n      white-space: normal;\n      .selectedBg {\n        background: ${theme.colors.bgBlue2};\n      }\n      .selectedText {\n        color: ${theme.colors.bgBlue2};\n      }\n    `,\n    line: css`\n      width: 3px;\n      height: 100%;\n      align-items: center;\n      background: ${theme.colors.textWeak};\n    `,\n    time: css`\n      width: 60px;\n      min-height: 80px;\n      font-size: ${theme.typography.size.sm};\n      padding-left: ${theme.spacing.xs};\n      display: flex;\n      align-items: center;\n    `,\n  };\n});\n","import React, { memo, useState, useEffect, useRef } from 'react';\nimport { isEqual } from 'lodash';\nimport { css } from 'emotion';\nimport { LogsSortOrder, AbsoluteTimeRange, TimeZone, DataQuery, GrafanaTheme } from '@grafana/data';\nimport { Button, Icon, Spinner, useTheme, stylesFactory } from '@grafana/ui';\nimport { LogsNavigationPages } from './LogsNavigationPages';\n\ntype Props = {\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  queries: DataQuery[];\n  loading: boolean;\n  visibleRange: AbsoluteTimeRange;\n  logsSortOrder?: LogsSortOrder | null;\n  onChangeTime: (range: AbsoluteTimeRange) => void;\n  scrollToTopLogs: () => void;\n  addResultsToCache: () => void;\n  clearCache: () => void;\n};\n\nexport type LogsPage = {\n  logsRange: AbsoluteTimeRange;\n  queryRange: AbsoluteTimeRange;\n};\n\nfunction LogsNavigation({\n  absoluteRange,\n  logsSortOrder,\n  timeZone,\n  loading,\n  onChangeTime,\n  scrollToTopLogs,\n  visibleRange,\n  queries,\n  clearCache,\n  addResultsToCache,\n}: Props) {\n  const [pages, setPages] = useState<LogsPage[]>([]);\n  const [currentPageIndex, setCurrentPageIndex] = useState(0);\n\n  // These refs are to determine, if we want to clear up logs navigation when totally new query is run\n  const expectedQueriesRef = useRef<DataQuery[]>();\n  const expectedRangeRef = useRef<AbsoluteTimeRange>();\n  // This ref is to store range span for future queres based on firstly selected time range\n  // e.g. if last 5 min selected, always run 5 min range\n  const rangeSpanRef = useRef(0);\n\n  const oldestLogsFirst = logsSortOrder === LogsSortOrder.Ascending;\n  const onFirstPage = currentPageIndex === 0;\n  const onLastPage = currentPageIndex === pages.length - 1;\n  const theme = useTheme();\n  const styles = getStyles(theme, oldestLogsFirst, loading);\n\n  // Main effect to set pages and index\n  useEffect(() => {\n    const newPage = { logsRange: visibleRange, queryRange: absoluteRange };\n    let newPages: LogsPage[] = [];\n    // We want to start new pagination if queries change or if absolute range is different than expected\n    if (!isEqual(expectedRangeRef.current, absoluteRange) || !isEqual(expectedQueriesRef.current, queries)) {\n      clearCache();\n      setPages([newPage]);\n      setCurrentPageIndex(0);\n      expectedQueriesRef.current = queries;\n      rangeSpanRef.current = absoluteRange.to - absoluteRange.from;\n    } else {\n      setPages((pages) => {\n        // Remove duplicates with new query\n        newPages = pages.filter((page) => !isEqual(newPage.queryRange, page.queryRange));\n        // Sort pages based on logsOrder so they visually align with displayed logs\n        newPages = [...newPages, newPage].sort((a, b) => sortPages(a, b, logsSortOrder));\n        // Set new pages\n\n        return newPages;\n      });\n\n      // Set current page index\n      const index = newPages.findIndex((page) => page.queryRange.to === absoluteRange.to);\n      setCurrentPageIndex(index);\n    }\n    addResultsToCache();\n  }, [visibleRange, absoluteRange, logsSortOrder, queries, clearCache, addResultsToCache]);\n\n  useEffect(() => {\n    return () => clearCache();\n    // We can't enforce the eslint rule here because we only want to run when component unmounts.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const changeTime = ({ from, to }: AbsoluteTimeRange) => {\n    expectedRangeRef.current = { from, to };\n    onChangeTime({ from, to });\n  };\n\n  const sortPages = (a: LogsPage, b: LogsPage, logsSortOrder?: LogsSortOrder | null) => {\n    if (logsSortOrder === LogsSortOrder.Ascending) {\n      return a.queryRange.to > b.queryRange.to ? 1 : -1;\n    }\n    return a.queryRange.to > b.queryRange.to ? -1 : 1;\n  };\n\n  const olderLogsButton = (\n    <Button\n      data-testid=\"olderLogsButton\"\n      className={styles.navButton}\n      variant=\"secondary\"\n      onClick={() => {\n        //If we are not on the last page, use next page's range\n        if (!onLastPage) {\n          changeTime({\n            from: pages[currentPageIndex + 1].queryRange.from,\n            to: pages[currentPageIndex + 1].queryRange.to,\n          });\n        } else {\n          //If we are on the last page, create new range\n          changeTime({ from: visibleRange.from - rangeSpanRef.current, to: visibleRange.from });\n        }\n      }}\n      disabled={loading}\n    >\n      <div className={styles.navButtonContent}>\n        {loading ? <Spinner /> : <Icon name={oldestLogsFirst ? 'angle-up' : 'angle-down'} size=\"lg\" />}\n        Older logs\n      </div>\n    </Button>\n  );\n\n  const newerLogsButton = (\n    <Button\n      data-testid=\"newerLogsButton\"\n      className={styles.navButton}\n      variant=\"secondary\"\n      onClick={() => {\n        //If we are not on the first page, use previous page's range\n        if (!onFirstPage) {\n          changeTime({\n            from: pages[currentPageIndex - 1].queryRange.from,\n            to: pages[currentPageIndex - 1].queryRange.to,\n          });\n        }\n        //If we are on the first page, button is disabled and we do nothing\n      }}\n      disabled={loading || onFirstPage}\n    >\n      <div className={styles.navButtonContent}>\n        {loading && <Spinner />}\n        {onFirstPage || loading ? null : <Icon name={oldestLogsFirst ? 'angle-down' : 'angle-up'} size=\"lg\" />}\n        {onFirstPage ? 'Start of range' : 'Newer logs'}\n      </div>\n    </Button>\n  );\n\n  return (\n    <div className={styles.navContainer}>\n      {oldestLogsFirst ? olderLogsButton : newerLogsButton}\n      <LogsNavigationPages\n        pages={pages}\n        currentPageIndex={currentPageIndex}\n        oldestLogsFirst={oldestLogsFirst}\n        timeZone={timeZone}\n        loading={loading}\n        changeTime={changeTime}\n      />\n      {oldestLogsFirst ? newerLogsButton : olderLogsButton}\n      <Button\n        data-testid=\"scrollToTop\"\n        className={styles.scrollToTopButton}\n        variant=\"secondary\"\n        onClick={scrollToTopLogs}\n        title=\"Scroll to top\"\n      >\n        <Icon name=\"arrow-up\" size=\"lg\" />\n      </Button>\n    </div>\n  );\n}\n\nexport default memo(LogsNavigation);\n\nconst getStyles = stylesFactory((theme: GrafanaTheme, oldestLogsFirst: boolean, loading: boolean) => {\n  return {\n    navContainer: css`\n      max-height: 95vh;\n      display: flex;\n      flex-direction: column;\n      justify-content: ${oldestLogsFirst ? 'flex-start' : 'space-between'};\n      position: sticky;\n      top: ${theme.spacing.md};\n      right: 0;\n    `,\n    navButton: css`\n      width: 58px;\n      height: 68px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      line-height: 1;\n    `,\n    navButtonContent: css`\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      height: 100%;\n      white-space: normal;\n    `,\n    scrollToTopButton: css`\n      width: 40px;\n      height: 40px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      margin-top: ${theme.spacing.sm};\n    `,\n  };\n});\n","import React, { PureComponent, createRef } from 'react';\nimport { css } from '@emotion/css';\nimport { capitalize } from 'lodash';\nimport memoizeOne from 'memoize-one';\n\nimport {\n  rangeUtil,\n  RawTimeRange,\n  LogLevel,\n  TimeZone,\n  AbsoluteTimeRange,\n  LogsDedupStrategy,\n  LogRowModel,\n  LogsDedupDescription,\n  LogsMetaItem,\n  LogsSortOrder,\n  LinkModel,\n  Field,\n  GrafanaTheme,\n  DataQuery,\n  DataFrame,\n} from '@grafana/data';\nimport {\n  RadioButtonGroup,\n  LogRows,\n  Button,\n  InlineField,\n  InlineFieldRow,\n  InlineSwitch,\n  withTheme,\n  stylesFactory,\n  TooltipDisplayMode,\n} from '@grafana/ui';\nimport store from 'app/core/store';\nimport { dedupLogRows, filterLogLevels } from 'app/core/logs_model';\nimport { LogsMetaRow } from './LogsMetaRow';\nimport LogsNavigation from './LogsNavigation';\nimport { RowContextOptions } from '@grafana/ui/src/components/Logs/LogRowContextProvider';\nimport { ExploreGraphNGPanel } from './ExploreGraphNGPanel';\n\nconst SETTINGS_KEYS = {\n  showLabels: 'grafana.explore.logs.showLabels',\n  showTime: 'grafana.explore.logs.showTime',\n  wrapLogMessage: 'grafana.explore.logs.wrapLogMessage',\n  prettifyLogMessage: 'grafana.explore.logs.prettifyLogMessage',\n};\n\ninterface Props {\n  width: number;\n  logRows: LogRowModel[];\n  logsMeta?: LogsMetaItem[];\n  logsSeries?: DataFrame[];\n  logsQueries?: DataQuery[];\n  visibleRange?: AbsoluteTimeRange;\n  theme: GrafanaTheme;\n  highlighterExpressions?: string[];\n  loading: boolean;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  scanning?: boolean;\n  scanRange?: RawTimeRange;\n  showContextToggle?: (row?: LogRowModel) => boolean;\n  onChangeTime: (range: AbsoluteTimeRange) => void;\n  onClickFilterLabel?: (key: string, value: string) => void;\n  onClickFilterOutLabel?: (key: string, value: string) => void;\n  onStartScanning?: () => void;\n  onStopScanning?: () => void;\n  getRowContext?: (row: LogRowModel, options?: RowContextOptions) => Promise<any>;\n  getFieldLinks: (field: Field, rowIndex: number) => Array<LinkModel<Field>>;\n  addResultsToCache: () => void;\n  clearCache: () => void;\n}\n\ninterface State {\n  showLabels: boolean;\n  showTime: boolean;\n  wrapLogMessage: boolean;\n  prettifyLogMessage: boolean;\n  dedupStrategy: LogsDedupStrategy;\n  hiddenLogLevels: LogLevel[];\n  logsSortOrder: LogsSortOrder | null;\n  isFlipping: boolean;\n  showDetectedFields: string[];\n  forceEscape: boolean;\n}\n\nexport class UnthemedLogs extends PureComponent<Props, State> {\n  flipOrderTimer?: number;\n  cancelFlippingTimer?: number;\n  topLogsRef = createRef<HTMLDivElement>();\n\n  state: State = {\n    showLabels: store.getBool(SETTINGS_KEYS.showLabels, false),\n    showTime: store.getBool(SETTINGS_KEYS.showTime, true),\n    wrapLogMessage: store.getBool(SETTINGS_KEYS.wrapLogMessage, true),\n    prettifyLogMessage: store.getBool(SETTINGS_KEYS.prettifyLogMessage, false),\n    dedupStrategy: LogsDedupStrategy.none,\n    hiddenLogLevels: [],\n    logsSortOrder: null,\n    isFlipping: false,\n    showDetectedFields: [],\n    forceEscape: false,\n  };\n\n  componentWillUnmount() {\n    if (this.flipOrderTimer) {\n      window.clearTimeout(this.flipOrderTimer);\n    }\n\n    if (this.cancelFlippingTimer) {\n      window.clearTimeout(this.cancelFlippingTimer);\n    }\n  }\n\n  onChangeLogsSortOrder = () => {\n    this.setState({ isFlipping: true });\n    // we are using setTimeout here to make sure that disabled button is rendered before the rendering of reordered logs\n    this.flipOrderTimer = window.setTimeout(() => {\n      this.setState((prevState) => {\n        if (prevState.logsSortOrder === null || prevState.logsSortOrder === LogsSortOrder.Descending) {\n          return { logsSortOrder: LogsSortOrder.Ascending };\n        }\n        return { logsSortOrder: LogsSortOrder.Descending };\n      });\n    }, 0);\n    this.cancelFlippingTimer = window.setTimeout(() => this.setState({ isFlipping: false }), 1000);\n  };\n\n  onEscapeNewlines = () => {\n    this.setState((prevState) => ({\n      forceEscape: !prevState.forceEscape,\n    }));\n  };\n\n  onChangeDedup = (dedupStrategy: LogsDedupStrategy) => {\n    this.setState({ dedupStrategy });\n  };\n\n  onChangeLabels = (event?: React.SyntheticEvent) => {\n    const target = event && (event.target as HTMLInputElement);\n    if (target) {\n      const showLabels = target.checked;\n      this.setState({\n        showLabels,\n      });\n      store.set(SETTINGS_KEYS.showLabels, showLabels);\n    }\n  };\n\n  onChangeTime = (event?: React.SyntheticEvent) => {\n    const target = event && (event.target as HTMLInputElement);\n    if (target) {\n      const showTime = target.checked;\n      this.setState({\n        showTime,\n      });\n      store.set(SETTINGS_KEYS.showTime, showTime);\n    }\n  };\n\n  onChangewrapLogMessage = (event?: React.SyntheticEvent) => {\n    const target = event && (event.target as HTMLInputElement);\n    if (target) {\n      const wrapLogMessage = target.checked;\n      this.setState({\n        wrapLogMessage,\n      });\n      store.set(SETTINGS_KEYS.wrapLogMessage, wrapLogMessage);\n    }\n  };\n\n  onChangePrettifyLogMessage = (event?: React.SyntheticEvent) => {\n    const target = event && (event.target as HTMLInputElement);\n    if (target) {\n      const prettifyLogMessage = target.checked;\n      this.setState({\n        prettifyLogMessage,\n      });\n      store.set(SETTINGS_KEYS.prettifyLogMessage, prettifyLogMessage);\n    }\n  };\n\n  onToggleLogLevel = (hiddenRawLevels: string[]) => {\n    const hiddenLogLevels = hiddenRawLevels.map((level) => LogLevel[level as LogLevel]);\n    this.setState({ hiddenLogLevels });\n  };\n\n  onClickScan = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (this.props.onStartScanning) {\n      this.props.onStartScanning();\n    }\n  };\n\n  onClickStopScan = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (this.props.onStopScanning) {\n      this.props.onStopScanning();\n    }\n  };\n\n  showDetectedField = (key: string) => {\n    const index = this.state.showDetectedFields.indexOf(key);\n\n    if (index === -1) {\n      this.setState((state) => {\n        return {\n          showDetectedFields: state.showDetectedFields.concat(key),\n        };\n      });\n    }\n  };\n\n  hideDetectedField = (key: string) => {\n    const index = this.state.showDetectedFields.indexOf(key);\n    if (index > -1) {\n      this.setState((state) => {\n        return {\n          showDetectedFields: state.showDetectedFields.filter((k) => key !== k),\n        };\n      });\n    }\n  };\n\n  clearDetectedFields = () => {\n    this.setState((state) => {\n      return {\n        showDetectedFields: [],\n      };\n    });\n  };\n\n  checkUnescapedContent = memoizeOne((logRows: LogRowModel[]) => {\n    return !!logRows.some((r) => r.hasUnescapedContent);\n  });\n\n  dedupRows = memoizeOne((logRows: LogRowModel[], dedupStrategy: LogsDedupStrategy) => {\n    const dedupedRows = dedupLogRows(logRows, dedupStrategy);\n    const dedupCount = dedupedRows.reduce((sum, row) => (row.duplicates ? sum + row.duplicates : sum), 0);\n    return { dedupedRows, dedupCount };\n  });\n\n  filterRows = memoizeOne((logRows: LogRowModel[], hiddenLogLevels: LogLevel[]) => {\n    return filterLogLevels(logRows, new Set(hiddenLogLevels));\n  });\n\n  scrollToTopLogs = () => this.topLogsRef.current?.scrollIntoView();\n\n  render() {\n    const {\n      width,\n      logRows,\n      logsMeta,\n      logsSeries,\n      visibleRange,\n      highlighterExpressions,\n      loading = false,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      timeZone,\n      scanning,\n      scanRange,\n      showContextToggle,\n      absoluteRange,\n      onChangeTime,\n      getFieldLinks,\n      theme,\n      logsQueries,\n      clearCache,\n      addResultsToCache,\n    } = this.props;\n\n    const {\n      showLabels,\n      showTime,\n      wrapLogMessage,\n      prettifyLogMessage,\n      dedupStrategy,\n      hiddenLogLevels,\n      logsSortOrder,\n      isFlipping,\n      showDetectedFields,\n      forceEscape,\n    } = this.state;\n\n    const styles = getStyles(theme, wrapLogMessage);\n    const hasData = logRows && logRows.length > 0;\n    const hasUnescapedContent = this.checkUnescapedContent(logRows);\n\n    const filteredLogs = this.filterRows(logRows, hiddenLogLevels);\n    const { dedupedRows, dedupCount } = this.dedupRows(filteredLogs, dedupStrategy);\n\n    const scanText = scanRange ? `Scanning ${rangeUtil.describeTimeRange(scanRange)}` : 'Scanning...';\n\n    return (\n      <>\n        <div className={styles.infoText}>\n          This datasource does not support full-range histograms. The graph is based on the logs seen in the response.\n        </div>\n        {logsSeries && logsSeries.length ? (\n          <ExploreGraphNGPanel\n            data={logsSeries}\n            height={150}\n            width={width}\n            tooltipDisplayMode={TooltipDisplayMode.Multi}\n            absoluteRange={visibleRange || absoluteRange}\n            timeZone={timeZone}\n            onUpdateTimeRange={onChangeTime}\n            onHiddenSeriesChanged={this.onToggleLogLevel}\n          />\n        ) : undefined}\n        <div className={styles.logOptions} ref={this.topLogsRef}>\n          <InlineFieldRow>\n            <InlineField label=\"Time\" transparent>\n              <InlineSwitch value={showTime} onChange={this.onChangeTime} transparent />\n            </InlineField>\n            <InlineField label=\"Unique labels\" transparent>\n              <InlineSwitch value={showLabels} onChange={this.onChangeLabels} transparent />\n            </InlineField>\n            <InlineField label=\"Wrap lines\" transparent>\n              <InlineSwitch value={wrapLogMessage} onChange={this.onChangewrapLogMessage} transparent />\n            </InlineField>\n            <InlineField label=\"Prettify JSON\" transparent>\n              <InlineSwitch value={prettifyLogMessage} onChange={this.onChangePrettifyLogMessage} transparent />\n            </InlineField>\n            <InlineField label=\"Dedup\" transparent>\n              <RadioButtonGroup\n                options={Object.values(LogsDedupStrategy).map((dedupType) => ({\n                  label: capitalize(dedupType),\n                  value: dedupType,\n                  description: LogsDedupDescription[dedupType],\n                }))}\n                value={dedupStrategy}\n                onChange={this.onChangeDedup}\n                className={styles.radioButtons}\n              />\n            </InlineField>\n          </InlineFieldRow>\n          <Button\n            variant=\"secondary\"\n            disabled={isFlipping}\n            title={logsSortOrder === LogsSortOrder.Ascending ? 'Change to newest first' : 'Change to oldest first'}\n            aria-label=\"Flip results order\"\n            className={styles.flipButton}\n            onClick={this.onChangeLogsSortOrder}\n          >\n            {isFlipping ? 'Flipping...' : 'Flip results order'}\n          </Button>\n        </div>\n        <LogsMetaRow\n          logRows={logRows}\n          meta={logsMeta || []}\n          dedupStrategy={dedupStrategy}\n          dedupCount={dedupCount}\n          hasUnescapedContent={hasUnescapedContent}\n          forceEscape={forceEscape}\n          showDetectedFields={showDetectedFields}\n          onEscapeNewlines={this.onEscapeNewlines}\n          clearDetectedFields={this.clearDetectedFields}\n        />\n        <div className={styles.logsSection}>\n          <div className={styles.logRows}>\n            <LogRows\n              logRows={logRows}\n              deduplicatedRows={dedupedRows}\n              dedupStrategy={dedupStrategy}\n              getRowContext={this.props.getRowContext}\n              highlighterExpressions={highlighterExpressions}\n              onClickFilterLabel={onClickFilterLabel}\n              onClickFilterOutLabel={onClickFilterOutLabel}\n              showContextToggle={showContextToggle}\n              showLabels={showLabels}\n              showTime={showTime}\n              enableLogDetails={true}\n              forceEscape={forceEscape}\n              wrapLogMessage={wrapLogMessage}\n              prettifyLogMessage={prettifyLogMessage}\n              timeZone={timeZone}\n              getFieldLinks={getFieldLinks}\n              logsSortOrder={logsSortOrder}\n              showDetectedFields={showDetectedFields}\n              onClickShowDetectedField={this.showDetectedField}\n              onClickHideDetectedField={this.hideDetectedField}\n            />\n          </div>\n          <LogsNavigation\n            logsSortOrder={logsSortOrder}\n            visibleRange={visibleRange ?? absoluteRange}\n            absoluteRange={absoluteRange}\n            timeZone={timeZone}\n            onChangeTime={onChangeTime}\n            loading={loading}\n            queries={logsQueries ?? []}\n            scrollToTopLogs={this.scrollToTopLogs}\n            addResultsToCache={addResultsToCache}\n            clearCache={clearCache}\n          />\n        </div>\n        {!loading && !hasData && !scanning && (\n          <div className={styles.noData}>\n            No logs found.\n            <Button size=\"xs\" fill=\"text\" onClick={this.onClickScan}>\n              Scan for older logs\n            </Button>\n          </div>\n        )}\n\n        {scanning && (\n          <div className={styles.noData}>\n            <span>{scanText}</span>\n            <Button size=\"xs\" fill=\"text\" onClick={this.onClickStopScan}>\n              Stop scan\n            </Button>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const Logs = withTheme(UnthemedLogs);\n\nconst getStyles = stylesFactory((theme: GrafanaTheme, wrapLogMessage: boolean) => {\n  return {\n    noData: css`\n      > * {\n        margin-left: 0.5em;\n      }\n    `,\n    logOptions: css`\n      display: flex;\n      justify-content: space-between;\n      align-items: baseline;\n      flex-wrap: wrap;\n      background-color: ${theme.colors.bg1};\n      padding: ${theme.spacing.sm} ${theme.spacing.md};\n      border-radius: ${theme.border.radius.md};\n      margin: ${theme.spacing.md} 0 ${theme.spacing.sm};\n      border: 1px solid ${theme.colors.border2};\n    `,\n    flipButton: css`\n      margin: ${theme.spacing.xs} 0 0 ${theme.spacing.sm};\n    `,\n    radioButtons: css`\n      margin: 0 ${theme.spacing.sm};\n    `,\n    logsSection: css`\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n    `,\n    logRows: css`\n      overflow-x: ${wrapLogMessage ? 'unset' : 'scroll'};\n      overflow-y: visible;\n      width: 100%;\n    `,\n    infoText: css`\n      font-size: ${theme.typography.size.sm};\n      color: ${theme.colors.textWeak};\n    `,\n  };\n});\n","import React, { memo } from 'react';\nimport { css } from '@emotion/css';\nimport { GrafanaTheme } from '@grafana/data';\nimport { useStyles } from '@grafana/ui';\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  metaContainer: css`\n    flex: 1;\n    color: ${theme.colors.textWeak};\n    margin-bottom: ${theme.spacing.d};\n    min-width: 30%;\n    display: flex;\n    flex-wrap: wrap;\n  `,\n  metaItem: css`\n    margin-right: ${theme.spacing.d};\n    margin-top: ${theme.spacing.xs};\n    display: flex;\n    align-items: baseline;\n\n    .logs-meta-item__error {\n      color: ${theme.palette.red};\n    }\n  `,\n  metaLabel: css`\n    margin-right: calc(${theme.spacing.d} / 2);\n    font-size: ${theme.typography.size.sm};\n    font-weight: ${theme.typography.weight.semibold};\n  `,\n  metaValue: css`\n    font-family: ${theme.typography.fontFamily.monospace};\n    font-size: ${theme.typography.size.sm};\n  `,\n});\n\nexport interface MetaItemProps {\n  label?: string;\n  value: string | JSX.Element;\n}\n\nexport const MetaInfoItem = memo(function MetaInfoItem(props: MetaItemProps) {\n  const style = useStyles(getStyles);\n  const { label, value } = props;\n\n  return (\n    <div className={style.metaItem}>\n      {label && <span className={style.metaLabel}>{label}:</span>}\n      <span className={style.metaValue}>{value}</span>\n    </div>\n  );\n});\n\nexport interface MetaInfoTextProps {\n  metaItems: MetaItemProps[];\n}\n\nexport const MetaInfoText = memo(function MetaInfoText(props: MetaInfoTextProps) {\n  const style = useStyles(getStyles);\n  const { metaItems } = props;\n\n  return (\n    <div className={style.metaContainer}>\n      {metaItems.map((item, index) => (\n        <MetaInfoItem key={`${index}-${item.label}`} label={item.label} value={item.value} />\n      ))}\n    </div>\n  );\n});\n\nexport default MetaInfoText;\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\nimport { GrafanaTheme } from '@grafana/data';\nimport { stylesFactory, Button, HorizontalGroup, useTheme } from '@grafana/ui';\n\ntype Props = {\n  addQueryRowButtonDisabled?: boolean;\n  addQueryRowButtonHidden?: boolean;\n  richHistoryButtonActive?: boolean;\n  queryInspectorButtonActive?: boolean;\n\n  onClickAddQueryRowButton: () => void;\n  onClickRichHistoryButton: () => void;\n  onClickQueryInspectorButton: () => void;\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    containerMargin: css`\n      margin-top: ${theme.spacing.md};\n    `,\n  };\n});\nexport function SecondaryActions(props: Props) {\n  const theme = useTheme();\n  const styles = getStyles(theme);\n  return (\n    <div className={styles.containerMargin}>\n      <HorizontalGroup>\n        {!props.addQueryRowButtonHidden && (\n          <Button\n            variant=\"secondary\"\n            aria-label=\"Add row button\"\n            onClick={props.onClickAddQueryRowButton}\n            disabled={props.addQueryRowButtonDisabled}\n            icon=\"plus\"\n          >\n            Add query\n          </Button>\n        )}\n        <Button\n          variant=\"secondary\"\n          aria-label=\"Rich history button\"\n          className={cx({ ['explore-active-button']: props.richHistoryButtonActive })}\n          onClick={props.onClickRichHistoryButton}\n          icon=\"history\"\n        >\n          Query history\n        </Button>\n        <Button\n          variant=\"secondary\"\n          aria-label=\"Query inspector button\"\n          className={cx({ ['explore-active-button']: props.queryInspectorButtonActive })}\n          onClick={props.onClickQueryInspectorButton}\n          icon=\"info-circle\"\n        >\n          Inspector\n        </Button>\n      </HorizontalGroup>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Icon } from '@grafana/ui';\n\nfunction formatLatency(value: number) {\n  return `${(value / 1000).toFixed(1)}s`;\n}\n\nexport type Props = {\n  canToggleEditorModes: boolean;\n  isDisabled?: boolean;\n  isNotStarted: boolean;\n  latency: number;\n  onClickToggleEditorMode: () => void;\n  onClickToggleDisabled: () => void;\n  onClickRemoveButton: () => void;\n};\n\nexport function QueryRowActions(props: Props) {\n  const {\n    canToggleEditorModes,\n    onClickToggleEditorMode,\n    onClickToggleDisabled,\n    onClickRemoveButton,\n    isDisabled,\n    isNotStarted,\n    latency,\n  } = props;\n\n  return (\n    <div className=\"gf-form-inline flex-shrink-0\">\n      {canToggleEditorModes && (\n        <div className=\"gf-form\">\n          <button\n            aria-label=\"Edit mode button\"\n            className=\"gf-form-label gf-form-label--btn\"\n            onClick={onClickToggleEditorMode}\n          >\n            <Icon name=\"pen\" />\n          </button>\n        </div>\n      )}\n      <div className=\"gf-form\">\n        <button disabled className=\"gf-form-label\" title=\"Query row latency\">\n          {formatLatency(latency)}\n        </button>\n      </div>\n      <div className=\"gf-form\">\n        <button\n          disabled={isNotStarted}\n          className=\"gf-form-label gf-form-label--btn\"\n          onClick={onClickToggleDisabled}\n          title={isDisabled ? 'Enable query' : 'Disable query'}\n        >\n          <Icon name={isDisabled ? 'eye-slash' : 'eye'} />\n        </button>\n      </div>\n      <div className=\"gf-form\">\n        <button className=\"gf-form-label gf-form-label--btn\" onClick={onClickRemoveButton} title=\"Remove query\">\n          <Icon name=\"minus\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Tooltip, ToolbarButton } from '@grafana/ui';\n\ninterface TimeSyncButtonProps {\n  isSynced: boolean;\n  onClick: () => void;\n}\n\nexport function TimeSyncButton(props: TimeSyncButtonProps) {\n  const { onClick, isSynced } = props;\n\n  const syncTimesTooltip = () => {\n    const { isSynced } = props;\n    const tooltip = isSynced ? 'Unsync all views' : 'Sync all views to this time range';\n    return <>{tooltip}</>;\n  };\n\n  return (\n    <Tooltip content={syncTimesTooltip} placement=\"bottom\">\n      <ToolbarButton\n        icon=\"link\"\n        variant={isSynced ? 'active' : 'default'}\n        aria-label={isSynced ? 'Synced times' : 'Unsynced times'}\n        onClick={onClick}\n      />\n    </Tooltip>\n  );\n}\n","// Libaries\nimport React, { Component } from 'react';\n\n// Types\nimport { ExploreId } from 'app/types';\nimport { TimeRange, TimeZone, RawTimeRange, dateTimeForTimeZone, dateMath } from '@grafana/data';\n\n// State\n\n// Components\nimport { TimeSyncButton } from './TimeSyncButton';\nimport { TimePickerWithHistory } from 'app/core/components/TimePicker/TimePickerWithHistory';\n\n// Utils & Services\nimport { getShiftedTimeRange, getZoomedTimeRange } from 'app/core/utils/timePicker';\n\nexport interface Props {\n  exploreId: ExploreId;\n  hideText?: boolean;\n  range: TimeRange;\n  timeZone: TimeZone;\n  splitted: boolean;\n  syncedTimes: boolean;\n  onChangeTimeSync: () => void;\n  onChangeTime: (range: RawTimeRange) => void;\n  onChangeTimeZone: (timeZone: TimeZone) => void;\n}\n\nexport class ExploreTimeControls extends Component<Props> {\n  onMoveTimePicker = (direction: number) => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getShiftedTimeRange(direction, range);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  onMoveForward = () => this.onMoveTimePicker(1);\n  onMoveBack = () => this.onMoveTimePicker(-1);\n\n  onChangeTimePicker = (timeRange: TimeRange) => {\n    const adjustedFrom = dateMath.isMathString(timeRange.raw.from) ? timeRange.raw.from : timeRange.from;\n    const adjustedTo = dateMath.isMathString(timeRange.raw.to) ? timeRange.raw.to : timeRange.to;\n\n    this.props.onChangeTime({\n      from: adjustedFrom,\n      to: adjustedTo,\n    });\n  };\n\n  onZoom = () => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getZoomedTimeRange(range, 2);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  render() {\n    const { range, timeZone, splitted, syncedTimes, onChangeTimeSync, hideText, onChangeTimeZone } = this.props;\n    const timeSyncButton = splitted ? <TimeSyncButton onClick={onChangeTimeSync} isSynced={syncedTimes} /> : undefined;\n    const timePickerCommonProps = {\n      value: range,\n      timeZone,\n      onMoveBackward: this.onMoveBack,\n      onMoveForward: this.onMoveForward,\n      onZoom: this.onZoom,\n      hideText,\n    };\n\n    return (\n      <TimePickerWithHistory\n        {...timePickerCommonProps}\n        timeSyncButton={timeSyncButton}\n        isSynced={syncedTimes}\n        onChange={this.onChangeTimePicker}\n        onChangeTimeZone={onChangeTimeZone}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport memoizeOne from 'memoize-one';\nimport { css } from '@emotion/css';\nimport { CSSTransition } from 'react-transition-group';\n\nconst transitionDuration = 500;\n// We add a bit of delay to the transition as another perf optimisation. As at the start we need to render\n// quite a bit of new rows, if we start transition at the same time there can be frame rate drop. This gives time\n// for react to first render them and then do the animation.\nconst transitionDelay = 100;\n\nconst getStyles = memoizeOne(() => {\n  return {\n    logsEnter: css`\n      label: logsEnter;\n      position: absolute;\n      opacity: 0;\n      height: auto;\n      width: 100%;\n    `,\n    logsEnterActive: css`\n      label: logsEnterActive;\n      opacity: 1;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n    logsExit: css`\n      label: logsExit;\n      position: absolute;\n      opacity: 1;\n      height: auto;\n      width: 100%;\n    `,\n    logsExitActive: css`\n      label: logsExitActive;\n      opacity: 0;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n  };\n});\n\ntype Props = {\n  children: React.ReactNode;\n  visible: boolean;\n};\n\n/**\n * Cross fade transition component that is tied a bit too much to the logs containers so not very useful elsewhere\n * right now.\n */\nexport function LogsCrossFadeTransition(props: Props) {\n  const { visible, children } = props;\n  const styles = getStyles();\n  return (\n    <CSSTransition\n      in={visible}\n      mountOnEnter={true}\n      unmountOnExit={true}\n      timeout={transitionDuration + transitionDelay}\n      classNames={{\n        enter: styles.logsEnter,\n        enterActive: styles.logsEnterActive,\n        exit: styles.logsExit,\n        exitActive: styles.logsExitActive,\n      }}\n    >\n      {children}\n    </CSSTransition>\n  );\n}\n","import React from 'react';\nimport { useToggle } from 'react-use';\nimport { Badge, Collapse, useStyles2, useTheme2 } from '@grafana/ui';\nimport { applyFieldOverrides, DataFrame, GrafanaTheme2 } from '@grafana/data';\nimport { css } from '@emotion/css';\nimport { ExploreId, StoreState } from '../../types';\nimport { splitOpen } from './state/main';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { useLinks } from './utils/links';\nimport { NodeGraph } from '../../plugins/panel/nodeGraph';\nimport { useCategorizeFrames } from '../../plugins/panel/nodeGraph/useCategorizeFrames';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  warningText: css`\n    label: warningText;\n    font-size: ${theme.typography.bodySmall.fontSize};\n    color: ${theme.colors.text.secondary};\n  `,\n});\n\ninterface OwnProps {\n  // Edges and Nodes are separate frames\n  dataFrames: DataFrame[];\n  exploreId: ExploreId;\n  // When showing the node graph together with trace view we do some changes so it works better.\n  withTraceView?: boolean;\n}\n\ntype Props = OwnProps & ConnectedProps<typeof connector>;\n\nexport function UnconnectedNodeGraphContainer(props: Props) {\n  const { dataFrames, range, splitOpen, withTraceView } = props;\n  const getLinks = useLinks(range, splitOpen);\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n\n  // This is implicit dependency that is needed for links to work. At some point when replacing variables in the link\n  // it requires field to have a display property which is added by the overrides even though we don't add any field\n  // overrides in explore.\n  const frames = applyFieldOverrides({\n    fieldConfig: {\n      defaults: {},\n      overrides: [],\n    },\n    data: dataFrames,\n    // We don't need proper replace here as it is only used in getLinks and we use getFieldLinks\n    replaceVariables: (value) => value,\n    theme,\n  });\n\n  const { nodes } = useCategorizeFrames(frames);\n  const [open, toggleOpen] = useToggle(false);\n\n  const countWarning =\n    withTraceView && nodes[0]?.length > 1000 ? (\n      <span className={styles.warningText}> ({nodes[0].length} nodes, can be slow to load)</span>\n    ) : null;\n\n  return (\n    <Collapse\n      label={\n        <span>\n          Node graph{countWarning}{' '}\n          <Badge text={'Beta'} color={'blue'} icon={'rocket'} tooltip={'This visualization is in beta'} />\n        </span>\n      }\n      collapsible={withTraceView}\n      // We allow collapsing this only when it is shown together with trace view.\n      isOpen={withTraceView ? open : true}\n      onToggle={withTraceView ? () => toggleOpen() : undefined}\n    >\n      <div style={{ height: withTraceView ? 500 : 600 }}>\n        <NodeGraph dataFrames={frames} getLinks={getLinks} />\n      </div>\n    </Collapse>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: OwnProps) {\n  return {\n    range: state.explore[exploreId]!.range,\n  };\n}\n\nconst mapDispatchToProps = {\n  splitOpen,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport const NodeGraphContainer = connector(UnconnectedNodeGraphContainer);\n","import React from 'react';\nimport { RefreshPicker, defaultIntervals } from '@grafana/ui';\nimport { getTimeSrv } from 'app/features/dashboard/services/TimeSrv';\n\nexport type Props = {\n  isSmall?: boolean;\n  loading: boolean;\n  isLive: boolean;\n  onRun: (loading: boolean) => void;\n  refreshInterval?: string;\n  onChangeRefreshInterval: (interval: string) => void;\n  showDropdown: boolean;\n};\n\nexport function RunButton(props: Props) {\n  const { isSmall, loading, onRun, onChangeRefreshInterval, refreshInterval, showDropdown, isLive } = props;\n  const intervals = getTimeSrv().getValidIntervals(defaultIntervals);\n  let text: string | undefined;\n\n  if (isLive) {\n    return null;\n  }\n\n  if (!isSmall) {\n    text = loading ? 'Cancel' : 'Run query';\n  }\n\n  return (\n    <RefreshPicker\n      onIntervalChanged={onChangeRefreshInterval}\n      value={refreshInterval}\n      isLoading={loading}\n      text={text}\n      intervals={intervals}\n      isLive={isLive}\n      onRefresh={() => onRun(loading)}\n      noIntervalPicker={!showDropdown}\n      primary={true}\n    />\n  );\n}\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { CSSTransition } from 'react-transition-group';\nimport { useTheme, Tooltip, stylesFactory, ButtonGroup, ToolbarButton } from '@grafana/ui';\nimport { GrafanaTheme } from '@grafana/data';\n\ntype LiveTailButtonProps = {\n  splitted: boolean;\n  start: () => void;\n  stop: () => void;\n  pause: () => void;\n  resume: () => void;\n  isLive: boolean;\n  isPaused: boolean;\n};\n\nexport function LiveTailButton(props: LiveTailButtonProps) {\n  const { start, pause, resume, isLive, isPaused, stop, splitted } = props;\n  const theme = useTheme();\n  const styles = getStyles(theme);\n  const buttonVariant = isLive && !isPaused ? 'active' : 'default';\n  const onClickMain = isLive ? (isPaused ? resume : pause) : start;\n\n  return (\n    <ButtonGroup>\n      <Tooltip\n        content={isLive && !isPaused ? <>Pause the live stream</> : <>Start live stream your logs</>}\n        placement=\"bottom\"\n      >\n        <ToolbarButton\n          iconOnly={splitted}\n          variant={buttonVariant}\n          icon={!isLive || isPaused ? 'play' : 'pause'}\n          onClick={onClickMain}\n        >\n          {isLive && isPaused ? 'Paused' : 'Live'}\n        </ToolbarButton>\n      </Tooltip>\n\n      <CSSTransition\n        mountOnEnter={true}\n        unmountOnExit={true}\n        timeout={100}\n        in={isLive}\n        classNames={{\n          enter: styles.stopButtonEnter,\n          enterActive: styles.stopButtonEnterActive,\n          exit: styles.stopButtonExit,\n          exitActive: styles.stopButtonExitActive,\n        }}\n      >\n        <Tooltip content={<>Stop and exit the live stream</>} placement=\"bottom\">\n          <ToolbarButton variant={buttonVariant} onClick={stop} icon=\"square-shape\" />\n        </Tooltip>\n      </CSSTransition>\n    </ButtonGroup>\n  );\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    stopButtonEnter: css`\n      label: stopButtonEnter;\n      width: 0;\n      opacity: 0;\n      overflow: hidden;\n    `,\n    stopButtonEnterActive: css`\n      label: stopButtonEnterActive;\n      opacity: 1;\n      width: 32px;\n    `,\n    stopButtonExit: css`\n      label: stopButtonExit;\n      width: 32px;\n      opacity: 1;\n      overflow: hidden;\n    `,\n    stopButtonExitActive: css`\n      label: stopButtonExitActive;\n      opacity: 0;\n      width: 0;\n    `,\n  };\n});\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { css, cx } from '@emotion/css';\nimport { compose } from 'redux';\nimport { connect, ConnectedProps } from 'react-redux';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport memoizeOne from 'memoize-one';\nimport { selectors } from '@grafana/e2e-selectors';\nimport {\n  ErrorBoundaryAlert,\n  stylesFactory,\n  withTheme,\n  CustomScrollbar,\n  Collapse,\n  TooltipDisplayMode,\n} from '@grafana/ui';\nimport { AbsoluteTimeRange, DataQuery, GrafanaTheme, LoadingState, RawTimeRange, DataFrame } from '@grafana/data';\n\nimport LogsContainer from './LogsContainer';\nimport QueryRows from './QueryRows';\nimport TableContainer from './TableContainer';\nimport RichHistoryContainer from './RichHistory/RichHistoryContainer';\nimport ExploreQueryInspector from './ExploreQueryInspector';\nimport { splitOpen } from './state/main';\nimport { changeSize } from './state/explorePane';\nimport { updateTimeRange } from './state/time';\nimport { scanStopAction, addQueryRow, modifyQueries, setQueries, scanStart } from './state/query';\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\nimport { StoreState } from 'app/types';\nimport { ExploreToolbar } from './ExploreToolbar';\nimport { NoDataSourceCallToAction } from './NoDataSourceCallToAction';\nimport { getTimeZone } from '../profile/state/selectors';\nimport { SecondaryActions } from './SecondaryActions';\nimport { FILTER_FOR_OPERATOR, FILTER_OUT_OPERATOR, FilterItem } from '@grafana/ui/src/components/Table/types';\nimport { ExploreGraphNGPanel } from './ExploreGraphNGPanel';\nimport { NodeGraphContainer } from './NodeGraphContainer';\nimport { ResponseErrorContainer } from './ResponseErrorContainer';\nimport { TraceViewContainer } from './TraceView/TraceViewContainer';\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    exploreMain: css`\n      label: exploreMain;\n      // Is needed for some transition animations to work.\n      position: relative;\n      margin-top: 21px;\n    `,\n    button: css`\n      label: button;\n      margin: 1em 4px 0 0;\n    `,\n    queryContainer: css`\n      label: queryContainer;\n      // Need to override normal css class and don't want to count on ordering of the classes in html.\n      height: auto !important;\n      flex: unset !important;\n      padding: ${theme.panelPadding}px;\n    `,\n  };\n});\n\nexport interface ExploreProps {\n  exploreId: ExploreId;\n  theme: GrafanaTheme;\n}\n\nenum ExploreDrawer {\n  RichHistory,\n  QueryInspector,\n}\n\ninterface ExploreState {\n  openDrawer?: ExploreDrawer;\n}\n\nexport type Props = ExploreProps & ConnectedProps<typeof connector>;\n\n/**\n * Explore provides an area for quick query iteration for a given datasource.\n * Once a datasource is selected it populates the query section at the top.\n * When queries are run, their results are being displayed in the main section.\n * The datasource determines what kind of query editor it brings, and what kind\n * of results viewers it supports. The state is managed entirely in Redux.\n *\n * SPLIT VIEW\n *\n * Explore can have two Explore areas side-by-side. This is handled in `Wrapper.tsx`.\n * Since there can be multiple Explores (e.g., left and right) each action needs\n * the `exploreId` as first parameter so that the reducer knows which Explore state\n * is affected.\n *\n * DATASOURCE REQUESTS\n *\n * A click on Run Query creates transactions for all DataQueries for all expanded\n * result viewers. New runs are discarding previous runs. Upon completion a transaction\n * saves the result. The result viewers construct their data from the currently existing\n * transactions.\n *\n * The result viewers determine some of the query options sent to the datasource, e.g.,\n * `format`, to indicate eventual transformations by the datasources' result transformers.\n */\nexport class Explore extends React.PureComponent<Props, ExploreState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      openDrawer: undefined,\n    };\n  }\n\n  onChangeTime = (rawRange: RawTimeRange) => {\n    const { updateTimeRange, exploreId } = this.props;\n    updateTimeRange({ exploreId, rawRange });\n  };\n\n  // Use this in help pages to set page to a single query\n  onClickExample = (query: DataQuery) => {\n    this.props.setQueries(this.props.exploreId, [query]);\n  };\n\n  onCellFilterAdded = (filter: FilterItem) => {\n    const { value, key, operator } = filter;\n    if (operator === FILTER_FOR_OPERATOR) {\n      this.onClickFilterLabel(key, value);\n    }\n\n    if (operator === FILTER_OUT_OPERATOR) {\n      this.onClickFilterOutLabel(key, value);\n    }\n  };\n\n  onClickFilterLabel = (key: string, value: string) => {\n    this.onModifyQueries({ type: 'ADD_FILTER', key, value });\n  };\n\n  onClickFilterOutLabel = (key: string, value: string) => {\n    this.onModifyQueries({ type: 'ADD_FILTER_OUT', key, value });\n  };\n\n  onClickAddQueryRowButton = () => {\n    const { exploreId, queryKeys } = this.props;\n    this.props.addQueryRow(exploreId, queryKeys.length);\n  };\n\n  onModifyQueries = (action: any, index?: number) => {\n    const { datasourceInstance } = this.props;\n    if (datasourceInstance?.modifyQuery) {\n      const modifier = (queries: DataQuery, modification: any) =>\n        datasourceInstance.modifyQuery!(queries, modification);\n      this.props.modifyQueries(this.props.exploreId, action, modifier, index);\n    }\n  };\n\n  onResize = (size: { height: number; width: number }) => {\n    this.props.changeSize(this.props.exploreId, size);\n  };\n\n  onStartScanning = () => {\n    // Scanner will trigger a query\n    this.props.scanStart(this.props.exploreId);\n  };\n\n  onStopScanning = () => {\n    this.props.scanStopAction({ exploreId: this.props.exploreId });\n  };\n\n  onUpdateTimeRange = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  toggleShowRichHistory = () => {\n    this.setState((state) => {\n      return {\n        openDrawer: state.openDrawer === ExploreDrawer.RichHistory ? undefined : ExploreDrawer.RichHistory,\n      };\n    });\n  };\n\n  toggleShowQueryInspector = () => {\n    this.setState((state) => {\n      return {\n        openDrawer: state.openDrawer === ExploreDrawer.QueryInspector ? undefined : ExploreDrawer.QueryInspector,\n      };\n    });\n  };\n\n  renderEmptyState() {\n    return (\n      <div className=\"explore-container\">\n        <NoDataSourceCallToAction />\n      </div>\n    );\n  }\n\n  renderGraphPanel(width: number) {\n    const { graphResult, absoluteRange, timeZone, splitOpen, queryResponse, loading, theme } = this.props;\n    return (\n      <Collapse label=\"Graph\" loading={loading} isOpen>\n        <ExploreGraphNGPanel\n          data={graphResult!}\n          height={400}\n          width={width - theme.panelPadding * 2}\n          tooltipDisplayMode={TooltipDisplayMode.Single}\n          absoluteRange={absoluteRange}\n          timeZone={timeZone}\n          onUpdateTimeRange={this.onUpdateTimeRange}\n          annotations={queryResponse.annotations}\n          splitOpenFn={splitOpen}\n        />\n      </Collapse>\n    );\n  }\n\n  renderTablePanel(width: number) {\n    const { exploreId, datasourceInstance } = this.props;\n    return (\n      <TableContainer\n        ariaLabel={selectors.pages.Explore.General.table}\n        width={width}\n        exploreId={exploreId}\n        onCellFilterAdded={datasourceInstance?.modifyQuery ? this.onCellFilterAdded : undefined}\n      />\n    );\n  }\n\n  renderLogsPanel(width: number) {\n    const { exploreId, syncedTimes, theme } = this.props;\n\n    return (\n      <LogsContainer\n        exploreId={exploreId}\n        syncedTimes={syncedTimes}\n        width={width - theme.panelPadding * 2}\n        onClickFilterLabel={this.onClickFilterLabel}\n        onClickFilterOutLabel={this.onClickFilterOutLabel}\n        onStartScanning={this.onStartScanning}\n        onStopScanning={this.onStopScanning}\n      />\n    );\n  }\n\n  renderNodeGraphPanel() {\n    const { exploreId, showTrace, queryResponse } = this.props;\n    return (\n      <NodeGraphContainer\n        dataFrames={this.getNodeGraphDataFrames(queryResponse.series)}\n        exploreId={exploreId}\n        withTraceView={showTrace}\n      />\n    );\n  }\n\n  getNodeGraphDataFrames = memoizeOne((frames: DataFrame[]) => {\n    // TODO: this not in sync with how other types of responses are handled. Other types have a query response\n    //  processing pipeline which ends up populating redux state with proper data. As we move towards more dataFrame\n    //  oriented API it seems like a better direction to move such processing into to visualisations and do minimal\n    //  and lazy processing here. Needs bigger refactor so keeping nodeGraph and Traces as they are for now.\n    return frames.filter((frame) => frame.meta?.preferredVisualisationType === 'nodeGraph');\n  });\n\n  renderTraceViewPanel() {\n    const { queryResponse, splitOpen, exploreId } = this.props;\n    const dataFrames = queryResponse.series.filter((series) => series.meta?.preferredVisualisationType === 'trace');\n\n    return (\n      // If there is no data (like 404) we show a separate error so no need to show anything here\n      dataFrames.length && <TraceViewContainer exploreId={exploreId} dataFrames={dataFrames} splitOpenFn={splitOpen} />\n    );\n  }\n\n  render() {\n    const {\n      datasourceInstance,\n      datasourceMissing,\n      exploreId,\n      queryKeys,\n      graphResult,\n      queryResponse,\n      isLive,\n      theme,\n      showMetrics,\n      showTable,\n      showLogs,\n      showTrace,\n      showNodeGraph,\n    } = this.props;\n    const { openDrawer } = this.state;\n    const styles = getStyles(theme);\n    const showPanels = queryResponse && queryResponse.state !== LoadingState.NotStarted;\n    const showRichHistory = openDrawer === ExploreDrawer.RichHistory;\n    const showQueryInspector = openDrawer === ExploreDrawer.QueryInspector;\n\n    return (\n      <CustomScrollbar autoHeightMin={'100%'}>\n        <ExploreToolbar exploreId={exploreId} onChangeTime={this.onChangeTime} />\n        {datasourceMissing ? this.renderEmptyState() : null}\n        {datasourceInstance && (\n          <div className=\"explore-container\">\n            <div className={cx('panel-container', styles.queryContainer)}>\n              <QueryRows exploreId={exploreId} queryKeys={queryKeys} />\n              <SecondaryActions\n                addQueryRowButtonDisabled={isLive}\n                // We cannot show multiple traces at the same time right now so we do not show add query button.\n                //TODO:unification\n                addQueryRowButtonHidden={false}\n                richHistoryButtonActive={showRichHistory}\n                queryInspectorButtonActive={showQueryInspector}\n                onClickAddQueryRowButton={this.onClickAddQueryRowButton}\n                onClickRichHistoryButton={this.toggleShowRichHistory}\n                onClickQueryInspectorButton={this.toggleShowQueryInspector}\n              />\n              <ResponseErrorContainer exploreId={exploreId} />\n            </div>\n            <AutoSizer onResize={this.onResize} disableHeight>\n              {({ width }) => {\n                if (width === 0) {\n                  return null;\n                }\n\n                return (\n                  <main className={cx(styles.exploreMain)} style={{ width }}>\n                    <ErrorBoundaryAlert>\n                      {showPanels && (\n                        <>\n                          {showMetrics && graphResult && (\n                            <ErrorBoundaryAlert>{this.renderGraphPanel(width)}</ErrorBoundaryAlert>\n                          )}\n                          {showTable && <ErrorBoundaryAlert>{this.renderTablePanel(width)}</ErrorBoundaryAlert>}\n                          {showLogs && <ErrorBoundaryAlert>{this.renderLogsPanel(width)}</ErrorBoundaryAlert>}\n                          {showNodeGraph && <ErrorBoundaryAlert>{this.renderNodeGraphPanel()}</ErrorBoundaryAlert>}\n                          {showTrace && <ErrorBoundaryAlert>{this.renderTraceViewPanel()}</ErrorBoundaryAlert>}\n                        </>\n                      )}\n                      {showRichHistory && (\n                        <RichHistoryContainer\n                          width={width}\n                          exploreId={exploreId}\n                          onClose={this.toggleShowRichHistory}\n                        />\n                      )}\n                      {showQueryInspector && (\n                        <ExploreQueryInspector\n                          exploreId={exploreId}\n                          width={width}\n                          onClose={this.toggleShowQueryInspector}\n                        />\n                      )}\n                    </ErrorBoundaryAlert>\n                  </main>\n                );\n              }}\n            </AutoSizer>\n          </div>\n        )}\n      </CustomScrollbar>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: ExploreProps) {\n  const explore = state.explore;\n  const { syncedTimes } = explore;\n  const item: ExploreItemState = explore[exploreId]!;\n  const timeZone = getTimeZone(state.user);\n  const {\n    datasourceInstance,\n    datasourceMissing,\n    queryKeys,\n    isLive,\n    graphResult,\n    logsResult,\n    showLogs,\n    showMetrics,\n    showTable,\n    showTrace,\n    absoluteRange,\n    queryResponse,\n    showNodeGraph,\n    loading,\n  } = item;\n\n  return {\n    datasourceInstance,\n    datasourceMissing,\n    queryKeys,\n    isLive,\n    graphResult,\n    logsResult: logsResult ?? undefined,\n    absoluteRange,\n    queryResponse,\n    syncedTimes,\n    timeZone,\n    showLogs,\n    showMetrics,\n    showTable,\n    showTrace,\n    showNodeGraph,\n    loading,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeSize,\n  modifyQueries,\n  scanStart,\n  scanStopAction,\n  setQueries,\n  updateTimeRange,\n  addQueryRow,\n  splitOpen,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(hot(module), connector, withTheme)(Explore) as React.ComponentType<{ exploreId: ExploreId }>;\n","import { useEffect, useRef } from 'react';\nvar usePrevious = function (state) {\n    var ref = useRef();\n    useEffect(function () {\n        ref.current = state;\n    });\n    return ref.current;\n};\nexport default usePrevious;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { hot } from 'react-hot-loader';\nimport { css, cx } from '@emotion/css';\nimport { stylesFactory, useTheme, TextArea, Button, IconButton } from '@grafana/ui';\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { GrafanaTheme, DataSourceApi } from '@grafana/data';\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\nimport { createUrlFromRichHistory, createQueryText } from 'app/core/utils/richHistory';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { copyStringToClipboard } from 'app/core/utils/explore';\nimport appEvents from 'app/core/app_events';\nimport { dispatch } from 'app/store/store';\nimport { notifyApp } from 'app/core/actions';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { StoreState } from 'app/types';\n\nimport { updateRichHistory } from '../state/history';\nimport { changeDatasource } from '../state/datasource';\nimport { setQueries } from '../state/query';\nimport { ShowConfirmModalEvent } from '../../../types/events';\n\nexport interface Props {\n  query: RichHistoryQuery;\n  dsImg: string;\n  isRemoved: boolean;\n  changeDatasource: typeof changeDatasource;\n  updateRichHistory: typeof updateRichHistory;\n  setQueries: typeof setQueries;\n  exploreId: ExploreId;\n  datasourceInstance: DataSourceApi;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme, isRemoved: boolean) => {\n  /* Hard-coded value so all buttons and icons on right side of card are aligned */\n  const rigtColumnWidth = '240px';\n  const rigtColumnContentWidth = '170px';\n\n  /* If datasource was removed, card will have inactive color */\n  const cardColor = theme.colors.bg2;\n\n  return {\n    queryCard: css`\n      display: flex;\n      flex-direction: column;\n      border: 1px solid ${theme.colors.border1};\n      margin: ${theme.spacing.sm} 0;\n      background-color: ${cardColor};\n      border-radius: ${theme.border.radius.sm};\n      .starred {\n        color: ${theme.palette.orange};\n      }\n    `,\n    cardRow: css`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: ${theme.spacing.sm};\n      border-bottom: none;\n      :first-of-type {\n        border-bottom: 1px solid ${theme.colors.border1};\n        padding: ${theme.spacing.xs} ${theme.spacing.sm};\n      }\n      img {\n        height: ${theme.typography.size.base};\n        max-width: ${theme.typography.size.base};\n        margin-right: ${theme.spacing.sm};\n      }\n    `,\n    datasourceContainer: css`\n      display: flex;\n      align-items: center;\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.semibold};\n    `,\n    queryActionButtons: css`\n      max-width: ${rigtColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      font-size: ${theme.typography.size.base};\n      button {\n        margin-left: ${theme.spacing.sm};\n      }\n    `,\n    queryContainer: css`\n      font-weight: ${theme.typography.weight.semibold};\n      width: calc(100% - ${rigtColumnWidth});\n    `,\n    queryRow: css`\n      border-top: 1px solid ${theme.colors.border1};\n      word-break: break-all;\n      padding: 4px 2px;\n      :first-child {\n        border-top: none;\n        padding: 0 0 4px 0;\n      }\n    `,\n    updateCommentContainer: css`\n      width: calc(100% + ${rigtColumnWidth});\n      margin-top: ${theme.spacing.sm};\n    `,\n    comment: css`\n      overflow-wrap: break-word;\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.regular};\n      margin-top: ${theme.spacing.xs};\n    `,\n    commentButtonRow: css`\n      > * {\n        margin-right: ${theme.spacing.sm};\n      }\n    `,\n    textArea: css`\n      width: 100%;\n    `,\n    runButton: css`\n      max-width: ${rigtColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      button {\n        height: auto;\n        padding: ${theme.spacing.xs} ${theme.spacing.md};\n        line-height: 1.4;\n        span {\n          white-space: normal !important;\n        }\n      }\n    `,\n  };\n});\n\nexport function RichHistoryCard(props: Props) {\n  const {\n    query,\n    dsImg,\n    isRemoved,\n    updateRichHistory,\n    changeDatasource,\n    exploreId,\n    datasourceInstance,\n    setQueries,\n  } = props;\n  const [activeUpdateComment, setActiveUpdateComment] = useState(false);\n  const [comment, setComment] = useState<string | undefined>(query.comment);\n  const [queryDsInstance, setQueryDsInstance] = useState<DataSourceApi | undefined>(undefined);\n\n  useEffect(() => {\n    const getQueryDsInstance = async () => {\n      const ds = await getDataSourceSrv().get(query.datasourceName);\n      setQueryDsInstance(ds);\n    };\n\n    getQueryDsInstance();\n  }, [query.datasourceName]);\n\n  const theme = useTheme();\n  const styles = getStyles(theme, isRemoved);\n\n  const onRunQuery = async () => {\n    const queriesToRun = query.queries;\n    if (query.datasourceName !== datasourceInstance?.name) {\n      await changeDatasource(exploreId, query.datasourceName, { importQueries: true });\n      setQueries(exploreId, queriesToRun);\n    } else {\n      setQueries(exploreId, queriesToRun);\n    }\n  };\n\n  const onCopyQuery = () => {\n    const queriesToCopy = query.queries.map((q) => createQueryText(q, queryDsInstance)).join('\\n');\n    copyStringToClipboard(queriesToCopy);\n    dispatch(notifyApp(createSuccessNotification('Query copied to clipboard')));\n  };\n\n  const onCreateShortLink = async () => {\n    const link = createUrlFromRichHistory(query);\n    await createAndCopyShortLink(link);\n  };\n\n  const onDeleteQuery = () => {\n    // For starred queries, we want confirmation. For non-starred, we don't.\n    if (query.starred) {\n      appEvents.publish(\n        new ShowConfirmModalEvent({\n          title: 'Delete',\n          text: 'Are you sure you want to permanently delete your starred query?',\n          yesText: 'Delete',\n          icon: 'trash-alt',\n          onConfirm: () => {\n            updateRichHistory(query.ts, 'delete');\n            dispatch(notifyApp(createSuccessNotification('Query deleted')));\n          },\n        })\n      );\n    } else {\n      updateRichHistory(query.ts, 'delete');\n      dispatch(notifyApp(createSuccessNotification('Query deleted')));\n    }\n  };\n\n  const onStarrQuery = () => {\n    updateRichHistory(query.ts, 'starred');\n  };\n\n  const toggleActiveUpdateComment = () => setActiveUpdateComment(!activeUpdateComment);\n\n  const onUpdateComment = () => {\n    updateRichHistory(query.ts, 'comment', comment);\n    setActiveUpdateComment(false);\n  };\n\n  const onCancelUpdateComment = () => {\n    setActiveUpdateComment(false);\n    setComment(query.comment);\n  };\n\n  const onKeyDown = (keyEvent: React.KeyboardEvent) => {\n    if (keyEvent.key === 'Enter' && (keyEvent.shiftKey || keyEvent.ctrlKey)) {\n      onUpdateComment();\n    }\n\n    if (keyEvent.key === 'Escape') {\n      onCancelUpdateComment();\n    }\n  };\n\n  const updateComment = (\n    <div className={styles.updateCommentContainer} aria-label={comment ? 'Update comment form' : 'Add comment form'}>\n      <TextArea\n        value={comment}\n        placeholder={comment ? undefined : 'An optional description of what the query does.'}\n        onChange={(e) => setComment(e.currentTarget.value)}\n        className={styles.textArea}\n      />\n      <div className={styles.commentButtonRow}>\n        <Button onClick={onUpdateComment} aria-label=\"Submit button\">\n          Save comment\n        </Button>\n        <Button variant=\"secondary\" onClick={onCancelUpdateComment}>\n          Cancel\n        </Button>\n      </div>\n    </div>\n  );\n\n  const queryActionButtons = (\n    <div className={styles.queryActionButtons}>\n      <IconButton\n        name=\"comment-alt\"\n        onClick={toggleActiveUpdateComment}\n        title={query.comment?.length > 0 ? 'Edit comment' : 'Add comment'}\n      />\n      <IconButton name=\"copy\" onClick={onCopyQuery} title=\"Copy query to clipboard\" />\n      {!isRemoved && (\n        <IconButton name=\"share-alt\" onClick={onCreateShortLink} title=\"Copy shortened link to clipboard\" />\n      )}\n      <IconButton name=\"trash-alt\" title={'Delete query'} onClick={onDeleteQuery} />\n      <IconButton\n        name={query.starred ? 'favorite' : 'star'}\n        iconType={query.starred ? 'mono' : 'default'}\n        onClick={onStarrQuery}\n        title={query.starred ? 'Unstar query' : 'Star query'}\n      />\n    </div>\n  );\n\n  return (\n    <div className={styles.queryCard} onKeyDown={onKeyDown}>\n      <div className={styles.cardRow}>\n        <div className={styles.datasourceContainer}>\n          <img src={dsImg} aria-label=\"Data source icon\" />\n          <div aria-label=\"Data source name\">\n            {isRemoved ? 'Data source does not exist anymore' : query.datasourceName}\n          </div>\n        </div>\n        {queryActionButtons}\n      </div>\n      <div className={cx(styles.cardRow)}>\n        <div className={styles.queryContainer}>\n          {query.queries.map((q, i) => {\n            const queryText = createQueryText(q, queryDsInstance);\n            return (\n              <div aria-label=\"Query text\" key={`${q}-${i}`} className={styles.queryRow}>\n                {queryText}\n              </div>\n            );\n          })}\n          {!activeUpdateComment && query.comment && (\n            <div aria-label=\"Query comment\" className={styles.comment}>\n              {query.comment}\n            </div>\n          )}\n          {activeUpdateComment && updateComment}\n        </div>\n        {!activeUpdateComment && (\n          <div className={styles.runButton}>\n            <Button variant=\"secondary\" onClick={onRunQuery} disabled={isRemoved}>\n              {datasourceInstance?.name === query.datasourceName ? 'Run query' : 'Switch data source and run query'}\n            </Button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  const { datasourceInstance } = explore[exploreId]!;\n  return {\n    exploreId,\n    datasourceInstance,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeDatasource,\n  updateRichHistory,\n  setQueries,\n};\n\nexport default hot(module)(connect(mapStateToProps, mapDispatchToProps)(RichHistoryCard));\n","// Libraries\nimport React from 'react';\nimport { Resizable, ResizeCallback } from 're-resizable';\nimport { css, cx, keyframes } from '@emotion/css';\n\n// Services & Utils\nimport { stylesFactory, useTheme2 } from '@grafana/ui';\n\n// Types\nimport { GrafanaTheme2 } from '@grafana/data';\n\nconst drawerSlide = keyframes`\n  0% {\n    transform: translateY(400px);\n  }\n\n  100% {\n    transform: translateY(0px);\n  }\n`;\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      position: fixed !important;\n      bottom: 0;\n      background: ${theme.colors.background.primary};\n      border-top: 1px solid ${theme.colors.border.weak};\n      margin: ${theme.spacing(0, -2, 0, -2)};\n      box-shadow: ${theme.shadows.z3};\n      z-index: ${theme.zIndex.sidemenu};\n    `,\n    drawerActive: css`\n      opacity: 1;\n      animation: 0.5s ease-out ${drawerSlide};\n    `,\n    rzHandle: css`\n      background: ${theme.colors.secondary.main};\n      transition: 0.3s background ease-in-out;\n      position: relative;\n      width: 200px !important;\n      height: 7px !important;\n      left: calc(50% - 100px) !important;\n      top: -4px !important;\n      cursor: grab;\n      border-radius: 4px;\n      &:hover {\n        background: ${theme.colors.secondary.shade};\n      }\n    `,\n  };\n});\n\nexport interface Props {\n  width: number;\n  children: React.ReactNode;\n  onResize?: ResizeCallback;\n}\n\nexport function ExploreDrawer(props: Props) {\n  const { width, children, onResize } = props;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const drawerWidth = `${width + 31.5}px`;\n\n  return (\n    <Resizable\n      className={cx(styles.container, styles.drawerActive)}\n      defaultSize={{ width: drawerWidth, height: '400px' }}\n      handleClasses={{ top: styles.rzHandle }}\n      enable={{\n        top: true,\n        right: false,\n        bottom: false,\n        left: false,\n        topRight: false,\n        bottomRight: false,\n        bottomLeft: false,\n        topLeft: false,\n      }}\n      maxHeight=\"100vh\"\n      maxWidth={drawerWidth}\n      minWidth={drawerWidth}\n      onResize={onResize}\n    >\n      {children}\n    </Resizable>\n  );\n}\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Services\nimport { getAngularLoader, AngularComponent } from '@grafana/runtime';\n\n// Types\nimport { DataQuery, TimeRange, EventBusExtended } from '@grafana/data';\nimport 'app/features/plugins/plugin_loader';\n\ninterface QueryEditorProps {\n  error?: any;\n  datasource: any;\n  onExecuteQuery?: () => void;\n  onQueryChange?: (value: DataQuery) => void;\n  initialQuery: DataQuery;\n  exploreEvents: EventBusExtended;\n  range: TimeRange;\n  textEditModeEnabled?: boolean;\n}\n\nexport default class QueryEditor extends PureComponent<QueryEditorProps, any> {\n  element: any;\n  component?: AngularComponent;\n  angularScope: any;\n\n  async componentDidMount() {\n    if (!this.element) {\n      return;\n    }\n\n    const { datasource, initialQuery, exploreEvents, range } = this.props;\n\n    const loader = getAngularLoader();\n    const template = '<plugin-component type=\"query-ctrl\"> </plugin-component>';\n    const target = { datasource: datasource.name, ...initialQuery };\n    const scopeProps = {\n      ctrl: {\n        datasource,\n        target,\n        range,\n        refresh: () => {\n          setTimeout(() => {\n            // the \"hide\" attribute of the quries can be changed from the \"outside\",\n            // it will be applied to \"this.props.initialQuery.hide\", but not to \"target.hide\".\n            // so we have to apply it.\n            if (target.hide !== this.props.initialQuery.hide) {\n              target.hide = this.props.initialQuery.hide;\n            }\n            this.props.onQueryChange?.(target);\n            this.props.onExecuteQuery?.();\n          }, 1);\n        },\n        onQueryChange: () => {\n          setTimeout(() => {\n            this.props.onQueryChange?.(target);\n          }, 1);\n        },\n        events: exploreEvents,\n        panel: { datasource, targets: [target] },\n        dashboard: {},\n      },\n    };\n\n    this.component = loader.load(this.element, scopeProps, template);\n    this.angularScope = scopeProps.ctrl;\n\n    setTimeout(() => {\n      this.props.onQueryChange?.(target);\n      this.props.onExecuteQuery?.();\n    }, 1);\n  }\n\n  componentDidUpdate(prevProps: QueryEditorProps) {\n    const hasToggledEditorMode = prevProps.textEditModeEnabled !== this.props.textEditModeEnabled;\n    const hasNewError = prevProps.error !== this.props.error;\n\n    if (this.component) {\n      if (hasToggledEditorMode && this.angularScope && this.angularScope.toggleEditorMode) {\n        this.angularScope.toggleEditorMode();\n      }\n\n      if (this.angularScope) {\n        this.angularScope.range = this.props.range;\n      }\n\n      if (hasNewError || hasToggledEditorMode) {\n        // Some query controllers listen to data error events and need a digest\n        // for some reason this needs to be done in next tick\n        setTimeout(this.component.digest);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.component) {\n      this.component.destroy();\n    }\n  }\n\n  render() {\n    return <div className=\"gf-form-query\" ref={(element) => (this.element = element)} style={{ width: '100%' }} />;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { ValueLinkConfig } from '@grafana/data';\nimport { Collapse, Table } from '@grafana/ui';\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\nimport { StoreState } from 'app/types';\nimport { splitOpen } from './state/main';\nimport { config } from 'app/core/config';\nimport { PANEL_BORDER } from 'app/core/constants';\nimport { MetaInfoText } from './MetaInfoText';\nimport { FilterItem } from '@grafana/ui/src/components/Table/types';\nimport { getFieldLinksForExplore } from './utils/links';\n\ninterface TableContainerProps {\n  ariaLabel?: string;\n  exploreId: ExploreId;\n  width: number;\n  onCellFilterAdded?: (filter: FilterItem) => void;\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: TableContainerProps) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const { loading: loadingInState, tableResult, range } = item;\n  const loading = tableResult && tableResult.length > 0 ? false : loadingInState;\n  return { loading, tableResult, range };\n}\n\nconst mapDispatchToProps = {\n  splitOpen,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = TableContainerProps & ConnectedProps<typeof connector>;\n\nexport class TableContainer extends PureComponent<Props> {\n  getTableHeight() {\n    const { tableResult } = this.props;\n\n    if (!tableResult || tableResult.length === 0) {\n      return 200;\n    }\n\n    // tries to estimate table height\n    return Math.max(Math.min(600, tableResult.length * 35) + 35);\n  }\n\n  render() {\n    const { loading, onCellFilterAdded, tableResult, width, splitOpen, range, ariaLabel } = this.props;\n\n    const height = this.getTableHeight();\n    const tableWidth = width - config.theme.panelPadding * 2 - PANEL_BORDER;\n    const hasTableResult = tableResult?.length;\n\n    if (tableResult && tableResult.length) {\n      // Bit of code smell here. We need to add links here to the frame modifying the frame on every render.\n      // Should work fine in essence but still not the ideal way to pass props. In logs container we do this\n      // differently and sidestep this getLinks API on a dataframe\n      for (const field of tableResult.fields) {\n        field.getLinks = (config: ValueLinkConfig) => {\n          return getFieldLinksForExplore({ field, rowIndex: config.valueRowIndex!, splitOpenFn: splitOpen, range });\n        };\n      }\n    }\n\n    return (\n      <Collapse label=\"Table\" loading={loading} isOpen>\n        {hasTableResult ? (\n          <Table\n            ariaLabel={ariaLabel}\n            data={tableResult!}\n            width={tableWidth}\n            height={height}\n            onCellFilterAdded={onCellFilterAdded}\n          />\n        ) : (\n          <MetaInfoText metaItems={[{ value: '0 series returned' }]} />\n        )}\n      </Collapse>\n    );\n  }\n}\n\nexport default hot(module)(connector(TableContainer));\n"],"sourceRoot":""}