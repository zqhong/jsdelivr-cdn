{"version":3,"sources":["webpack:///./public/app/features/teams/CreateTeam.tsx"],"names":["CreateTeam","PureComponent","async","result","getBackendSrv","post","formModel","teamId","locationService","push","render","navModel","this","props","Contents","onSubmit","create","register","label","required","width","content","name","style","marginLeft","type","placeholder","className","variant","hot","module","connect","state","getNavModel","navIndex"],"mappings":"mdAmBO,MAAMA,UAAmBC,gBAAqB,kB,UAAA,Y,EAC1CC,UACP,MAAMC,QAAeC,0BAAgBC,KAAK,aAAcC,GACpDH,EAAOI,QACTC,kBAAgBC,KAAM,mBAAkBN,EAAOI,U,EAJA,Y,EAAA,M,sFAOnDG,SACE,MAAM,SAAEC,GAAaC,KAAKC,MAE1B,OACE,cAAC,IAAD,CAAMF,SAAUA,EAAhB,SACE,cAAC,IAAKG,SAAN,UACE,cAAC,OAAD,CAAMC,SAAUH,KAAKI,OAArB,SACG,EAAGC,cACF,eAAC,WAAD,CAAUC,MAAM,WAAhB,UACE,cAAC,QAAD,CAAOA,MAAM,OAAb,SACE,cAAC,QAAD,KAAWD,EAAS,OAAQ,CAAEE,UAAU,IAAxC,CAAiDC,MAAO,QAE1D,cAAC,QAAD,CACEF,MACE,eAAC,QAAD,iBACE,0CACA,cAAC,UAAD,CAASG,QAAQ,2EAAjB,SACE,cAAC,OAAD,CAAMC,KAAK,cAAcC,MAAO,CAAEC,WAAY,UALtD,SAUE,cAAC,QAAD,KAAWP,EAAS,SAApB,CAA8BQ,KAAK,QAAQC,YAAY,iBAAiBN,MAAO,QAdnF,MAgBE,qBAAKO,UAAU,qBAAf,SACE,cAAC,SAAD,CAAQF,KAAK,SAASG,QAAQ,UAA9B,iCAmBHC,wBAAIC,EAAJD,CAAYE,mBAN3B,SAAyBC,GACvB,MAAO,CACLrB,SAAUsB,YAAYD,EAAME,SAAU,YAIfH,CAAyB/B,K","file":"CreateTeam.62c612232a976d8836f5.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport Page from 'app/core/components/Page/Page';\nimport { hot } from 'react-hot-loader';\nimport { Button, Form, Field, Input, FieldSet, Label, Tooltip, Icon } from '@grafana/ui';\nimport { NavModel } from '@grafana/data';\nimport { getBackendSrv, locationService } from '@grafana/runtime';\nimport { connect } from 'react-redux';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { StoreState } from 'app/types';\n\nexport interface Props {\n  navModel: NavModel;\n}\n\ninterface TeamDTO {\n  name: string;\n  email: string;\n}\n\nexport class CreateTeam extends PureComponent<Props> {\n  create = async (formModel: TeamDTO) => {\n    const result = await getBackendSrv().post('/api/teams', formModel);\n    if (result.teamId) {\n      locationService.push(`/org/teams/edit/${result.teamId}`);\n    }\n  };\n  render() {\n    const { navModel } = this.props;\n\n    return (\n      <Page navModel={navModel}>\n        <Page.Contents>\n          <Form onSubmit={this.create}>\n            {({ register }) => (\n              <FieldSet label=\"New Team\">\n                <Field label=\"Name\">\n                  <Input {...register('name', { required: true })} width={60} />\n                </Field>\n                <Field\n                  label={\n                    <Label>\n                      <span>Email</span>\n                      <Tooltip content=\"This is optional and is primarily used for allowing custom team avatars.\">\n                        <Icon name=\"info-circle\" style={{ marginLeft: 6 }} />\n                      </Tooltip>\n                    </Label>\n                  }\n                >\n                  <Input {...register('email')} type=\"email\" placeholder=\"email@test.com\" width={60} />\n                </Field>\n                <div className=\"gf-form-button-row\">\n                  <Button type=\"submit\" variant=\"primary\">\n                    Create\n                  </Button>\n                </div>\n              </FieldSet>\n            )}\n          </Form>\n        </Page.Contents>\n      </Page>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState) {\n  return {\n    navModel: getNavModel(state.navIndex, 'teams'),\n  };\n}\n\nexport default hot(module)(connect(mapStateToProps)(CreateTeam));\n"],"sourceRoot":""}